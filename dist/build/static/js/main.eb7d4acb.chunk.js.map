{"version":3,"sources":["components/Redux/ReducersAndActions/SideBar/SideBarActionsDefinition.js","components/API_URL.js","components/NotFound/index.js","components/Redux/ReducersAndActions/Status/StatusActionsDefinition.js","components/Rules/index.js","components/Modal/index.js","components/ObjectA/index.js","components/ProSideBarCustom/sidebar_bg.png","components/ProSideBarCustom/vnpt.svg","components/ProSideBarCustom/index.js","components/Property/index.js","App.js","reportWebVitals.js","components/Redux/ReducersAndActions/SideBar/SideBarReducer.js","components/Redux/ReducersAndActions/Status/StatusReducer.js","components/Redux/RootReducer.js","components/Redux/StoreRedux.js","index.js"],"names":["OPEN_SIDEBAR","CLOSE_SIDEBAR","SELECT_ITEM","BASE_URL","process","WEB_BASE_NAME","GET_PRO_BY_OBJ_ID","OBJECT_URL","LIST_OBJ_TYPE","OBJECT_TYPE_URL","LIST_PROPERTY","PROPERTY_URL","LIST_RULES","RULES_URL","NotFound","props","_title","dispatch","useDispatch","useEffect","document","title","className","to","onClick","type","index","LOADING","LOADED","ERROR","SUCCESS","Rules","useState","DetailData","setDetailData","showAppBox","setShowAppBox","rulesData","setRulesData","searchKeyWord","setSearchKeyWord","notMatchRegex","value","testRegex","setTestRegex","OriginRulesData","__FetchFunction","URL","body","callback","myHeaders","Headers","append","requestOptions","method","headers","JSON","stringify","redirect","fetch","then","res","json","result","code","msg","toast","error","catch","e","GetRuleInfo","item","GetListRule","undefined","response","ListAPI","url","Promise","all","map","responses","resp","results","console","log","HasErr","i","length","id","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","theme","draggable","pauseOnHover","style","height","padding","display","width","disabled","onKeyDown","target","keyCode","trim","MatchingSearchData","name","toLowerCase","includes","push","placeholder","_","rule_name","marginLeft","marginTop","overflow","htmlFor","onChange","rule_desc","pathname","rule_regex","regex","RegExp","test","created_at","updated_at","swal","text","icon","buttons","dangerMode","isConfirm","BodyData","rule_id","success","Provider","size","color","stopPropagation","Modal","show","children","onClickOut","WrapClass","CloseModal","ModalWidth","maxHeight","overflowY","overflowX","ObjectA","_obj_type_id","_obj_type_name","obj_id","obj_name","data","ObjectData","setObjectData","ShowAppBox","mode","ModalData","setModalData","ModalSelectData","setModalSelectData","uploaded","file","selectedFile","setSelectedFile","link","createElement","href","setAttribute","appendChild","click","removeChild","ChangeProDataWithExcel","GetListObject","match_regex","GetObjectInfo","ObjectDataCopy","obj","obj_index","selected","ChangeProperty","tempArr","list_property_assign","isAssigned","pro_id","Array","isArray","RemoveProperty","is_required","splice","UploadExcel","URI","FormData","_msg","ChangeFiles","files","cursor","textDecoration","accept","fontStyle","minHeight","minWidth","textTransform","obj_desc","options","list_property","noOptionsMessage","pro_name","ListNewProID","err","textAlign","pro_desc","pro_value","CopyDetailData","reg","ChangeProValue","val","temp","label","obj_type_id","temp1","temp2","SideBarCustom","list_item","SideBarClosing","setSideBarState","getWindowDimensions","window","innerWidth","innerHeight","windowsSize","setWindowSize","DynamicIcon","IconName","IconComponent","Icons","handleResize","addEventListener","removeEventListener","image","SideBarBackGroundImage","breakPoint","collapsed","alignItems","fontWeight","fontSize","letterSpacing","textOverflow","whiteSpace","iconShape","path","alt","src","VNPTIcon","Property","PropertyData","setPropertyData","ListObjType","setListObjType","ListRule","setListRule","ModalSelectData1","setModalSelectData1","err_cb","GetPropertyInfo","TempItem","obj_type_name","rule","GetListProperty","TempArr","isMulti","checked","CloneDetailData","ChangeRequiredInModal","list_obj_type","hasOwnProperty","ChangeRequired","App","ListSideBarItem","ListObjectType","setListObjectType","autoRender","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CLOSED","initState","is_open","_index","SideBarReducer","state","payload","loading","StatusReducer","RootReducer","combineReducers","SideBar","Status","store","createStore","ReactDOM","render","Store","getElementById"],"mappings":"4RAAaA,EAAe,OACfC,EAAgB,QAChBC,EAAc,cCFdC,EAAyBC,IAGzBC,EAAyB,iBAOzBC,EAAyBC,uBAUzBC,EAAyBC,iBAIzBC,EAAyBC,YAUzBC,EAAyBC,c,OCEvBC,EA7BE,SAACC,GACd,IAAOC,EAAeD,EAAfC,OACDC,EAAgBC,cAYtB,OAJAC,qBAAU,WACNC,SAASC,MAAQL,EAASX,IAC3B,IAGC,qBAAKiB,UAAU,gBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,sBAAMA,UAAU,iBAAhB,iBACA,uBAAMA,UAAU,gBAAhB,gDAEI,cAAC,IAAD,CAAMC,GAAG,aAAaC,QAjBhB,WAClBP,EAAS,CACLQ,KAAMvB,EACNwB,MAAO,KAcC,2BC3BPC,G,MAAU,WACVC,EAAS,SACTC,EAAQ,QACRC,EAAU,U,+DCsTRC,MA7Sf,SAAgBhB,GACZ,IAAOC,EAAuCD,EAAvCC,OACDC,EAAwCC,cAC9C,EAA8Cc,mBAAS,IAAvD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAA8CR,mBAAS,CAACS,eAAe,EAAOC,MAAO,KAArF,mBAAOC,EAAP,KAAkBC,EAAlB,KACIC,EAAkB,GAEhBC,EAAkB,SAACC,EAAKC,EAAMC,GAChC,IAAIC,EAAY,IAAIC,QACpBD,EAAUE,OAAO,eAAgB,oBAEjC,IAAIC,EAAiB,CACjBC,OAAQ,OACRC,QAASL,EACTF,KAAMQ,KAAKC,UAAUT,GACrBU,SAAU,UAGdC,MAAMZ,EAAKM,GACNO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACkB,MAAhBA,EAAOC,MACP/C,EAAS,CAACQ,KAAMG,IAChBqB,EAASc,EAAOE,IAAK,QAErBC,IAAMC,MAAMJ,EAAOE,KACnBhD,EAAS,CACLQ,KAAMI,EACNoC,IAAKF,EAAOE,IAAI,SAI3BG,OAAM,SAAAC,GACHH,IAAMC,MAAME,GACZpD,EAAS,CACLQ,KAAMI,EACNoC,IAAKI,QA2BfC,EAAc,SAAAC,GAChB3B,EAAa,2BACND,GADK,IAERF,eAAe,EACfC,MAAO,MAGXR,EAAcqC,IAiCZC,EAAc,WAClB1B,EAAgBlC,OAAY6D,GAAW,SAAUC,GAC7CJ,EAAYI,EAAS,IACrBpC,EAAaoC,OA6DnB,OAzDAvD,qBAAU,WACNC,SAASC,MAAQL,EAASX,EAC1B,IAAIsE,EAAU,CAAC,CACZC,IAAKhE,EACLyC,eAAgB,CACZC,OAAQ,OACRI,SAAU,YAYjBmB,QAAQC,IAAIH,EAAQI,KAAI,SAAAR,GAAI,OAAIZ,MAAMY,EAAKK,IAAKL,EAAKlB,oBAChDO,MAAK,SAAAoB,GAAS,OAAIH,QAAQC,IAAIE,EAAUD,KAAI,SAAAE,GAAI,OAAIA,EAAKnB,cACzDF,MAAK,SAAAsB,GACFC,QAAQC,IAAIF,GACZ,IAFa,EAETG,GAAS,EAFA,cAGCH,GAHD,IAGb,2BAAuB,CAAC,IAAfI,EAAc,QACJ,MAAXA,EAAEtB,OACF/C,EAAS,CACLQ,KAAMI,EACNoC,IAAKqB,EAAErB,MAEXoB,GAAS,GAERA,IACDpE,EAAS,CAACQ,KAAMG,IAChBU,EAAa4C,EAAQ,GAAGjB,KACxBK,EAAYY,EAAQ,GAAGjB,IAAI,IASvBiB,EAAQ,GAAGjB,IAAIsB,OAAS,GACxBjB,EAAY,CAACkB,GAAIN,EAAQ,GAAGM,OAxB3B,kCA6BhBpB,OAAM,SAAAC,GACHpD,EAAS,CACLQ,KAAMI,EACNoC,IAAKI,SAGlB,IAGC,sBAAK/C,UAAU,YAAYE,QAAS,kBAAMY,GAAc,IAAxD,UACI,cAAC,IAAD,CACIqD,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAc,EACdC,KAAK,EACLC,kBAAkB,EAClBC,MAAM,UACNC,WAAW,EACXC,cAAY,IAEhB,sBAAK5E,UAAU,YAAY6E,MAAO,CAACC,OAAQ,oBAAqBC,QAAS,OAAQC,QAAS,OAAQb,SAAU,YAA5G,UAEI,sBAAKU,MAAO,CAACI,MAAO,QAASH,OAAQ,oBAAqBE,QAAS,gBAAnE,UACI,uBAAOhF,UAAU,eAAekF,UAAU,EAAMC,UA1IvC,SAAApC,GAErB,GADA7B,EAAiB6B,EAAEqC,OAAOhE,OACR,KAAd2B,EAAEsC,QAAgB,CAClB,GAA6B,KAAzBpE,EAAcqE,OAEd,YADAtE,EAAaO,GAGjB,IAAIgE,EAAqB,GACzBxE,EAAU0C,KAAI,SAACR,EAAM7C,GACb6C,EAAKuC,KAAKC,cAAcC,SAASzE,EAAcwE,gBAC/CF,EAAmBI,KAAK1C,MAGhCjC,EAAauE,KA6HwEK,YAAY,4BACzF,qBAAK5F,UAAU,+BAAf,SAC0B,IAArBe,EAAUkD,OACP,8BACI,sDAEJlD,EAAU0C,KAAI,SAACR,EAAM7C,GACrB,OACI,qBAEIJ,UAAU,YACVE,QAAS,SAAA2F,GAAC,OAAI7C,EAAYC,IAH9B,SAIKA,EAAK6C,WAHD1F,WAUzB,sBAAKyE,MAAO,CACRI,MAAO,qBACPH,OAAQ,oBACRiB,WAAY,OACZC,UAAW,OACXhB,QAAS,eACTiB,SAAU,OACVlB,QAAS,QAPb,UASI,sBAAK/E,UAAU,gBAAf,UACI,uBAAOkG,QAAQ,OAAf,SACI,sBAAMlG,UAAU,OAAhB,4BAEJ,uBAAOA,UAAU,eAAekE,GAAG,OAAO9C,MAAOT,EAAWmF,UAAWK,SAAU,SAAApD,GAC7EnC,EAAc,2BACPD,GADM,IAETmF,UAAW/C,EAAEqC,OAAOhE,eAKhC,sBAAKpB,UAAU,gBAAf,UACI,uBAAOkG,QAAQ,OAAf,SACI,sBAAMlG,UAAU,OAAhB,mCAEJ,uBAAOA,UAAU,eAAekE,GAAG,OAAO9C,MAAOT,EAAWyF,UAAWD,SAAU,SAAApD,GAC7EnC,EAAc,2BACPD,GADM,IAETyF,UAAWrD,EAAEqC,OAAOhE,eAKhC,sBAAKpB,UAAU,gBAAf,UACI,wBAAOkG,QAAQ,MAAf,UACI,sBAAMlG,UAAU,OAAhB,4BADJ,sBAEuB,cAAC,IAAD,CAAMoF,OAAO,SAASnF,GAAI,CAACoG,SAAU,2GAArC,kBAFvB,OAIA,uBAAOrG,UAAU,eAAekE,GAAG,MAAM9C,MAAOT,EAAW2F,WAAYH,SAAU,SAAApD,GAC7EnC,EAAc,2BACPD,GADM,IAET2F,WAAYvD,EAAEqC,OAAOhE,eAKjC,sBAAKpB,UAAU,gBAAf,UACI,uBAAOkG,QAAQ,aAAf,SACI,sBAAMlG,UAAU,OAAhB,4BAEJ,uBAAOA,UAAU,eAAekE,GAAG,aAAa0B,YAAY,iBAAiBxE,MAAOC,EAAUD,MAAO+E,SApLtG,SAAApD,GACf,IAAIwD,EAAQ,IAAIC,OAAO7F,EAAW4F,MAAO,KACzCjF,EAAa,2BACND,GADK,IAERD,MAAO2B,EAAEqC,OAAOhE,MAChBD,cAAkC,KAAnB4B,EAAEqC,OAAOhE,QAAwBmF,EAAME,KAAK1D,EAAEqC,OAAOhE,aAgLvDC,EAAUF,eAAiB,uBAAOnB,UAAU,QAAjB,gCAGhC,qBAAKA,UAAU,gBAAf,SACI,wBAAOA,UAAU,SAAjB,uBAAqCW,EAAW+F,WAAhD,kBAA2E/F,EAAWgG,WAAtF,SAGJ,sBAAK3G,UAAU,gBAAf,UACI,yBAAQA,UAAU,0CAA0CE,QApL7D,WACjB0G,IAAK,CACD7G,MAAO,SACP8G,KAAK,2DACLC,KAAM,UACNC,SAAS,EACTC,YAAY,IACX1E,MAAK,SAAA2E,GACF,GAAIA,EAAW,CACX,IAAIC,EAAW,CACX,QAAWvG,EAAWwG,SAE1B3F,EHxEoBjC,gBGwES2H,GAAU,SAAS9D,GAC5CF,IACAN,IAAMwE,QAAQhE,WAsKZ,UACI,cAAC,IAAYiE,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAIC,MAAO,QAASvH,UAAW,cAAnE,SACI,cAAC,KAAD,MAFR,qBAMA,yBAAQA,UAAU,4BAAlB,UACI,cAAC,IAAYqH,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAIC,MAAO,QAASvH,UAAW,cAAnE,SACI,cAAC,KAAD,MAFR,2BASR,sBAAKE,QAAS,SAAA6C,GAAC,OAAIA,EAAEyE,mBAArB,UACI,sBAAMxH,UAAU,aAAaE,QA7OhB,SAAC6C,GAC1BA,EAAEyE,kBACF1G,GAAeD,IA2OH,SACI,cAAC,IAAYwG,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAIC,MAAO,SAA/C,SACI,cAAC,KAAD,QAIR,qBAAKvH,UAAWa,EAAa,uBAAyB,kBAAtD,SACI,yBAAQb,UAAU,+BAAlB,UACI,cAAC,IAAYqH,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAItH,UAAW,cAAnD,SACI,cAAC,IAAD,MAFR,8B,wCC1QTyH,G,MA7BD,SAAChI,GACX,IAAQiI,EAAyEjI,EAAzEiI,KAAM3H,EAAmEN,EAAnEM,MAAO4H,EAA4DlI,EAA5DkI,SAAUC,EAAkDnI,EAAlDmI,WAAYC,EAAsCpI,EAAtCoI,UAAWC,EAA2BrI,EAA3BqI,WAAYC,EAAetI,EAAfsI,WAClE,OAAa,IAATL,EAAsB,KAEtB,qBAAK1H,UAAW6H,EAAW3H,QAAS0H,EAApC,SACI,sBAAK5H,UAAW,kBAAmB6E,MAAOkD,EAAa,CAAC9C,MAAO8C,QAAc5E,EAAWjD,QAAS,SAAA6C,GAAC,OAAIA,EAAEyE,mBAAxG,UACI,sBAAKxH,UAAU,cAAf,UACI,sBAAMA,UAAW,kBAAmBE,QAAS4H,EAA7C,SACI,cAAC,IAAYT,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAIC,MAAO,WAA/C,SACI,cAAC,KAAD,QAGR,4BAAIxH,OAIR,qBAAK8E,MAAO,CACRmD,UAAW,OACXC,UAAW,OACXC,UAAW,OACXnD,QAAS,UAJb,SAMK4C,W,QC4xBNQ,MA5xBf,SAAiB1I,GACb,IAKOC,EAA2CD,EAA3CC,OAAQ0I,EAAmC3I,EAAnC2I,aAAcC,EAAqB5I,EAArB4I,eACvB1I,EAA4CC,cAClD,EAAkDc,mBAAS,CAAC4H,QAAS,EAAGC,SAAU,GAAIC,KAAM,KAA5F,mBAAO7H,EAAP,KAAmBC,EAAnB,KACA,EAAkDF,mBAAS,IAA3D,mBAAO+H,EAAP,KAAmBC,EAAnB,KACA,EAAkDhI,oBAAS,GAA3D,mBAAOiI,EAAP,KAAmB7H,EAAnB,KACA,EAAkDJ,mBAAS,CAACkI,MAAO,EAAGJ,KAAM,GAAId,MAAM,EAAO3H,MAAO,aAApG,mBAAO8I,EAAP,KAAkBC,EAAlB,KACA,EAAkDpI,mBAAS,MAA3D,mBAAOqI,EAAP,KAAwBC,EAAxB,KACA,EAAkDtI,mBAAS,CAACuI,UAAU,EAAOzD,KAAM,UAAW0D,KAAM,OAApG,mBAAOC,EAAP,KAAqBC,EAArB,KAEM5H,GAAkB,SAACC,EAAKC,EAAMC,GAChC,IAAIC,EAAY,IAAIC,QACpBD,EAAUE,OAAO,eAAgB,oBAEjC,IAAIC,EAAiB,CACjBC,OAAQ,OACRC,QAASL,EACTF,KAAMQ,KAAKC,UAAUT,GACrBU,SAAU,UAGdC,MAAMZ,EAAKM,GACNO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,GAAoB,MAAhBA,EAAOC,KACP/C,EAAS,CAACQ,KAAMG,IAChBqB,EAASc,EAAOE,IAAK,WAClB,GAAoB,MAAhBF,EAAOC,KAAc,CAC5B5B,GAAc,GACd,IAAMuI,EAAOvJ,SAASwJ,cAAc,KACpCD,EAAKE,KAAO1K,EAAW4D,EAAOE,IAC9B0G,EAAKG,aAAa,SAAU,UAC5B1J,SAAS4B,KAAK+H,YAAYJ,GAC1BA,EAAKK,QACL5J,SAAS4B,KAAKiI,YAAYN,QAE1B1J,EAAS,CACLQ,KAAMI,EACNoC,IAAKF,EAAOE,MAEhBhB,EAAS,KAAMc,EAAOE,KACtBC,IAAMC,MAAMJ,EAAOE,QAG1BG,OAAM,SAAAC,GACHpD,EAAS,CACLQ,KAAMI,EACNoC,IAAKI,IAETH,IAAMC,MAAME,OA+ClB6G,GAAyB,WAAgB,IAAfhB,EAAc,wDAAN,GACtB,IAAVA,GACAQ,EAAgB,CACZ5D,KAAM,UACNyD,UAAU,EACVC,KAAM,OAvGQ,IA0GlBN,EACAE,EAAa,CACTpB,MAAM,EACN3H,MAAO,+CACPyI,KAAM,GACNI,KA/Gc,KACA,IAgHXA,GA/GW,IA2HVA,IAXRhC,IAAK,CACD7G,MAAO,sBACP8G,KAAK,kEACLC,KAAM,UA4GZ+C,GAAgB,WAIlBrI,GL1P8BvC,YKuPf,CACX,YAAemJ,IAEoB,SAAShF,GAAW,IAAD,gBACxCA,GADwC,IACtD,2BAAwB,SAClB0G,aAAc,GAFkC,8BAItDpB,EAActF,GACVA,EAASa,OAAS,GAClB8F,GAAc3G,EAAS,GAAI,OAKjC2G,GAAgB,SAAC9G,GAAsB,IAAhB7C,EAAe,wDAAN,EAClC,GAAIA,GAAS,EAAG,CACZ,IAAM4J,EAAc,YAAOvB,GAC3BuB,EAAevG,KAAI,SAASwG,EAAKC,GAC7BD,EAAIE,SAAYD,IAAc9J,KAItC,IAAI8G,EAAW,CACX,OAAUjE,EAAKqF,QAEnB9G,GAAgBxC,EAAmBkI,GAAU,SAAU9D,GACnDxC,EAAc,CACV0H,OAAQrF,EAAKqF,OACbC,SAAUtF,EAAKsF,SACfC,KAAMpF,QAgBZgH,GAAiB,SAACnH,GACpB,IAD6B,EACzBoH,EAAUxB,EAAUL,KAAK8B,qBACzBC,GAAa,EAFY,cAGfF,GAHe,IAG7B,2BAAuB,CACnB,GADmB,QACbG,SAAWvH,EAAK7B,MAAO,CACzBmJ,GAAa,EACb,QANqB,8BASzBE,MAAMC,QAAQL,KAAaE,IAC3BF,EAAQ1E,KAAK1C,GACb6F,EAAa,2BACND,GADK,IAERL,KAAK,2BACEK,EAAUL,MADb,IAEA8B,qBAAsBD,OAG9BrB,EAAmB/F,KAIrB0H,GAAiB,SAAC1H,GACpB,IAAyB,IAArBA,EAAK2H,YAAT,CAIA,IAAIP,EAAUxB,EAAUL,KAAK8B,qBAC7BG,MAAMC,QAAQL,IAAYA,EAAQ5G,KAAI,SAASO,EAAG5D,GAC1C6C,EAAK7B,QAAU4C,EAAE5C,OACjBiJ,EAAQQ,OAAOzK,EAAO,MAG9B0I,EAAa,2BACND,GADK,IAERL,KAAK,2BACEK,EAAUL,MADb,IAEA8B,qBAAsBD,YAb1BzH,IAAMC,MAAM,kCA0EdiI,GAAc,WAChB,IAAIC,EAAM,GACV,GAA0B,OAAtB5B,EAAaD,MAajB,GAhYsB,IAwXlBL,EAAUD,KACVmC,ELxY0B9L,4BKgBR,IAyXX4J,EAAUD,MAxXC,IA0XXC,EAAUD,QADjBmC,EAAM,IAKE,KAARA,EAAY,CACZpL,EAAS,CACLQ,KAAME,IAEV,IAAImI,EAAO,IAAIwC,SACfxC,EAAK1G,OAAO,aAAcqH,EAAaD,MACvCV,EAAK1G,OAAO,cAAesG,GAQ3B/F,MAAM0I,EANe,CACjB/I,OAAQ,OACRN,KAAM8G,EACNpG,SAAU,WAITE,MAAK,SAAAc,GAAQ,OAAIA,EAASZ,UAC1BF,MAAK,SAAAG,GACkB,MAAhBA,EAAOC,MACP/C,EAAS,CACLQ,KAAMG,EACN2K,KAAMxI,EAAOE,MAEjBkH,KACAjH,IAAMwE,QAAQ3E,EAAOE,OAErBhD,EAAS,CACLQ,KAAMI,EACN0K,KAAMxI,EAAOE,MAEjBC,IAAMC,MAAMJ,EAAOE,SAG1BG,OAAM,SAAAC,GACHpD,EAAS,CACLQ,KAAMI,EACN0K,KAAMlI,aA/ClBH,IAAMC,MAAM,mBA8DdqI,GAAc,SAAAnI,GAChBqG,EAAgB,2BACTD,GADQ,IAEXF,UAAU,EACVzD,KAAMzC,EAAEqC,OAAO+F,MAAM,GAAG3F,KACxB0D,KAAMnG,EAAEqC,OAAO+F,MAAM,OAS7B,OALAtL,qBAAU,WACNC,SAASC,MAAQL,EAASX,EAC1B8K,OACD,CAACzB,IAGA,sBAAKpI,UAAU,YAAYE,QAAS,kBAAMY,GAAc,IAAxD,UACI,cAAC,IAAD,CACIqD,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAc,EACdC,KAAK,EACLC,kBAAkB,EAClBC,MAAM,UACNC,WAAW,EACXC,cAAY,IAEhB,eAAC,EAAD,CACI8C,KAAMmB,EAAUnB,KAChB3H,MAAO8I,EAAU9I,MACjB6H,WAxSW,SAAC7E,GACpB+F,EAAa,2BACND,GADK,IAERnB,MAAM,MAsSFI,WAAY,SAAAjC,GAAC,OAAIiD,EAAa,2BAAID,GAAL,IAAgBnB,MAAM,MACnDG,UAAW,aALf,UA9ckB,IAsdVgB,EAAUD,MACN,qCACI,gCACI,+BACI,oDAAsB,sBAAM1I,QAvHxC,WAIhBsB,GLvX8BvC,0BKoXf,CACX,YAAemJ,IAEqB,SAAUhF,GAC9C,IAAMiG,EAAOvJ,SAASwJ,cAAc,KACpCD,EAAKE,KAAO1K,EAAWuE,EACvBiG,EAAKG,aAAa,SAAU,UAC5B1J,SAAS4B,KAAK+H,YAAYJ,GAC1BA,EAAKK,QACL5J,SAAS4B,KAAKiI,YAAYN,OA6GgDxE,MAAO,CAACuG,OAAQ,UAAWC,eAAgB,aAAvE,qBACtB,uDACA,+BAAI,uBAAOrL,UAAU,aAAakG,QAAQ,cAAtC,wBAAJ,gCAEJ,uBAAOlG,UAAU,OAAOmG,SAAU+E,GAAahH,GAAG,cAAc/D,KAAK,OAAOmL,OAAO,sEAC5D,OAAtBnC,EAAaD,KAAgB,uBAAMlJ,UAAU,gBAAhB,kBAAqC,sBAAMA,UAAW,OAAjB,SAA0BmJ,EAAa3D,OAA5E,kBAA8G,sBAAMxF,UAAU,gBAAgB6E,MAAO,CAAC0G,UAAW,UAAnD,+BAAuF,uBACnO,uBAAM1G,MAAO,CAAC0G,UAAW,SAAUhE,MAAO,MAAOvB,UAAW,OAAQhB,QAAS,SAA7E,uFAAkKqD,EAAe5C,cAAjL,gCACA,sBAAMZ,MAAO,CAAC0G,UAAW,SAAUhE,MAAO,OAA1C,gHAEJ,sBAAKvH,UAAW,gBAAhB,UACI,wBAAQA,UAAW,iBAAkBE,QAAS,SAAA2F,GAAC,OAAIiD,EAAa,2BAAID,GAAL,IAAgBnB,MAAM,MAArF,oBACA,wBAAQ1H,UAAW,4CAA6CE,QAAS4K,GAAzE,0BApeF,IA2eTjC,EAAUD,MACP,qCACI,gCACI,6BACI,+BAAI,uBAAO5I,UAAU,aAAakG,QAAQ,cAAtC,wBAAJ,wBAEJ,uBAAOlG,UAAU,OAAOmG,SAAU+E,GAAahH,GAAG,cAAc/D,KAAK,OAAOmL,OAAO,sEAC5D,OAAtBnC,EAAaD,KAAgB,uBAAMlJ,UAAU,gBAAhB,kBAAqC,sBAAMA,UAAW,OAAjB,SAA0BmJ,EAAa3D,OAA5E,kBAA8G,sBAAMxF,UAAU,gBAAgB6E,MAAO,CAAC0G,UAAW,UAAnD,+BAAuF,0BAEvO,sBAAKvL,UAAW,gBAAhB,UACI,wBAAQA,UAAW,iBAAkBE,QAAS,SAAA2F,GAAC,OAAIiD,EAAa,2BAAID,GAAL,IAAgBnB,MAAM,MAArF,oBACA,wBAAQ1H,UAAW,mCAtfrB,IAsf0D6I,EAAUD,KAA4B,cAAgB,aAAc1I,QAAS4K,GAArI,0BArfF,IA4fVjC,EAAUD,MACN,qCACI,gCACI,uBAAM5I,UAAW,2BAAjB,gDAAiFqI,EAAjF,yFACA,6BACI,+BAAI,uBAAOrI,UAAU,aAAakG,QAAQ,cAAtC,wBAAJ,wBAEJ,uBAAOlG,UAAU,OAAOmG,SAAU+E,GAAahH,GAAG,cAAc/D,KAAK,OAAOmL,OAAO,sEAC5D,OAAtBnC,EAAaD,KAAgB,uBAAMlJ,UAAU,gBAAhB,kBAAqC,sBAAMA,UAAW,OAAjB,SAA0BmJ,EAAa3D,OAA5E,kBAA8G,sBAAMxF,UAAU,gBAAgB6E,MAAO,CAAC0G,UAAW,UAAnD,+BAAuF,0BAEvO,sBAAKvL,UAAW,gBAAhB,UACI,wBAAQA,UAAW,iBAAkBE,QAAS,SAAA2F,GAAC,OAAIiD,EAAa,2BAAID,GAAL,IAAgBnB,MAAM,MAArF,oBACA,wBAAQ1H,UAAW,mCAzgBrB,IAygB0D6I,EAAUD,KAA4B,cAAgB,aAAc1I,QAAS4K,GAArI,0BA3gBF,IAihBbjC,EAAUD,MACP,sBAAK/D,MAAO,CACR2G,UAAW,OACXC,SAAU,QAFd,UAII,wBAAOzL,UAAW,UAAlB,eAAgCqI,EAAhC,wFACA,uBAAOrI,UAAW,uBAAlB,8DACA,sBAAKA,UAAU,gBAAf,UACI,uBAAOkG,QAAS,sBAAhB,SACI,sBAAMlG,UAAU,OAAO6E,MAAO,CAAC6G,cAAe,cAA9C,8BAEJ,uBAAO1L,UAAW,eAAgBkE,GAAI,sBAAuB0B,YAAa,iBAAkBxE,MAAOyH,EAAUL,KAAKD,SAAUpC,SAAU,SAAApD,GAAM+F,EAAa,2BAClJD,GADiJ,IAEpJL,KAAK,2BACEK,EAAUL,MADb,IAEAD,SAAUxF,EAAEqC,OAAOhE,iBAI/B,sBAAKpB,UAAU,gBAAf,UACI,uBAAOkG,QAAS,sBAAhB,SACI,sBAAMlG,UAAU,OAAO6E,MAAO,CAAC6G,cAAe,cAA9C,4BAEJ,uBAAO1L,UAAW,eAAgBkE,GAAI,sBAAuB0B,YAAa,cAAexE,MAAOyH,EAAUL,KAAKmD,SAAUxF,SAAU,SAAApD,GAAM+F,EAAa,2BAC/ID,GAD8I,IAEjJL,KAAK,2BACEK,EAAUL,MADb,IAEAmD,SAAU5I,EAAEqC,OAAOhE,iBAI/B,sBAAKpB,UAAU,iCAAf,UACI,gCACI,sBAAMA,UAAU,OAAO6E,MAAO,CAAC6G,cAAe,cAA9C,gCAEJ,cAAC,IAAD,CACIE,QAAS/C,EAAUL,KAAKqD,cACxBzK,MAAO2H,EACP5C,SAAUiE,GACVxE,YAAa,oBACbkG,iBAAgB,qCAAgCzD,QAIxD,gCACCoC,MAAMC,QAAQ7B,EAAUL,KAAK8B,uBAAyBzB,EAAUL,KAAK8B,qBAAqBrG,OAAS,GAChG,wBAAOjE,UAAU,2BAA2B6E,MAAO,CAC/C4G,SAAU,SADd,UAGI,uBAAOzL,UAAU,cAAjB,SACA,+BACI,uCACA,0CACA,6CAGJ,gCAEIyK,MAAMC,QAAQ7B,EAAUL,KAAK8B,uBAAyBzB,EAAUL,KAAK8B,qBAAqB7G,KAAI,SAACR,EAAM7C,GACjG,OACI,+BACI,oBAAIJ,UAAU,cAAd,SAA6BI,EAAM,IACnC,oBAAIJ,UAAU,OAAd,SAAsBiD,EAAK8I,WAC3B,oBAAI/L,UAAU,cAAd,UACyB,IAArBiD,EAAK2H,YACG,sBAAM1K,QAAS,SAAA2F,GAAC,OAAI8E,GAAe1H,IAAnC,SACA,cAAC,IAAYoE,SAAb,CAAsBjG,MAAO,CAACmG,MAAO,MAAOD,KAAM,MAAlD,SACI,cAAC,KAAD,QAIP,gDAXJrE,EAAKiB,YAoB9B,wBAAQlE,UAAW,iBAAkBE,QAAS,SAAA2F,GAAC,OAAIiD,EAAa,2BAAID,GAAL,IAAgBnB,MAAM,MAArF,oBACA,wBAAQ1H,UAAW,6CAA8CE,QAvRpE,WACjB,GAAuC,KAAnC2I,EAAUL,KAAKD,SAASjD,OAA5B,CAIA,IALuB,EAKnB+E,EAAU,GALS,cAMTxB,EAAUL,KAAK8B,sBANN,IAMvB,2BAAmD,CAAC,IAA3CtG,EAA0C,QAC/CqG,EAAQ1E,KAAK3B,EAAE5C,QAPI,8BASvB,IAAI8F,EAAW,CACX,YAAekB,EACf,SAAYS,EAAUL,KAAKD,SAC3B,SAAYM,EAAUL,KAAKmD,SAC3B,YAAetB,GAEnB7I,GL1W8BvC,cK0WCiI,GAAU,SAAS9D,GAC9C0F,EAAa,2BACND,GADK,IAERnB,MAAM,KAEVmC,KACDjH,IAAMwE,QAAQhE,WAnBbR,IAAMC,MAAM,yBAqRI,0BAnmBE,IAwmBbgG,EAAUD,MACP,sBAAK/D,MAAO,CACR2G,UAAW,OACXC,SAAU,QAFd,UAII,sBAAKzL,UAAW,gBAAhB,UACI,gCACI,sBAAMA,UAAU,OAAO6E,MAAO,CAAC6G,cAAe,cAA9C,gCAEJ,cAAC,IAAD,CACIE,QAAS/C,EAAUL,KAAKqD,cACxBzK,MAAO2H,EACP5C,SAAUiE,QAGlB,gCACKK,MAAMC,QAAQ7B,EAAUL,KAAK8B,uBAAyBzB,EAAUL,KAAK8B,qBAAqBrG,OAAS,GAChG,wBAAOjE,UAAU,2BAA2B6E,MAAO,CAC/C4G,SAAU,SADd,UAGI,uBAAOzL,UAAU,cAAjB,SACA,+BACI,uCACA,0CACA,6CAGJ,gCAEIyK,MAAMC,QAAQ7B,EAAUL,KAAK8B,uBAAyBzB,EAAUL,KAAK8B,qBAAqB7G,KAAI,SAACR,EAAM7C,GACjG,OACI,+BACI,oBAAIJ,UAAU,cAAd,SAA6BI,EAAM,IACnC,oBAAIJ,UAAU,OAAd,SAAsBiD,EAAK8I,WAC3B,oBAAI/L,UAAU,cAAd,UACyB,IAArBiD,EAAK2H,YACG,sBAAM1K,QAAS,SAAA2F,GAAC,OAAI8E,GAAe1H,IAAnC,SACI,cAAC,IAAYoE,SAAb,CAAsBjG,MAAO,CAACmG,MAAO,MAAOD,KAAM,MAAlD,SACI,cAAC,KAAD,QAIX,gDAXJrE,EAAKiB,YAoBlC,wBAAQlE,UAAW,iBAAkBE,QAAS,SAAA2F,GAAC,OAAIiD,EAAa,2BAAID,GAAL,IAAgBnB,MAAM,MAArF,oBACA,wBAAQ1H,UAAW,8CAA+CE,QAjW3D,WAC3B,IADiC,EAC7B8L,EAAe,GADc,cAEnBnD,EAAUL,KAAK8B,sBAFI,IAEjC,2BAAmD,CAAC,IAA3CtG,EAA0C,QAC/CgI,EAAarG,KAAK3B,EAAE5C,QAHS,8BAKjC,IAAI8F,EAAW,CACX,OAAUvG,EAAW2H,OACrB,YAAe0D,EACf,YAAe5D,GAEnB5G,GLnU8BnC,8BKmUK6H,GAAU,SAAS9D,EAAU6I,GAC7DlC,GAAcpJ,EAAY,GAC1BmI,EAAa,2BAAID,GAAL,IAAgBnB,MAAM,KAClC9E,IAAMwE,QAAQhE,OAoVG,2BAMhB,sBAAKpD,UAAU,YAAY6E,MAAO,CAACC,OAAQ,oBAAqBC,QAAS,OAAQC,QAAS,OAAQb,SAAU,YAA5G,UAEI,sBAAKU,MAAO,CAACI,MAAO,QAASH,OAAQ,oBAAqBE,QAAS,gBAAnE,UACI,uBAAOhF,UAAU,eAAekF,UAAU,EAAMC,UAvmBrC,aAumBoES,YAAW,kBAAayC,EAAe5C,cAA5B,eAC1F,qBAAKzF,UAAU,+BAAf,SACKyK,MAAMC,QAAQjC,IAAqC,IAAtBA,EAAWxE,OACrC,8BACI,gDAEJwG,MAAMC,QAAQjC,IAAeA,EAAWhF,KAAI,SAACR,EAAM7C,GACnD,OACI,qBAEIJ,WAA6B,IAAlBiD,EAAKkH,SAAoB,wBAA0B,YAC9DjK,QAAS,SAAA2F,GAAC,OAAIkE,GAAc9G,EAAM7C,IAHtC,SAIK6C,EAAKsF,UAHDnI,WAUxBqK,MAAMC,QAAQjC,IAAeA,EAAWxE,OAAS,GAE1C,sBAAKY,MAAO,CACRI,MAAO,qBACPH,OAAQ,oBACRiB,WAAY,OACZf,QAAS,eACTiB,SAAU,OACVlB,QAAS,QANb,UAOI,qBAAKF,MAAO,CACRI,MAAO,OACPD,QAAS,QACTkH,UAAW,QACXR,cAAe,cAJnB,SAMI,+BAAKrD,EAAe5C,cAApB,MAAsC9E,EAAW4H,cAGjD5H,EAAW6H,KAAK/E,KAAI,SAASR,EAAM7C,GAC/B,OACI,sBAAKJ,UAAU,gBAAf,UACI,uBAAOkG,QAAS,aAAe9F,EAA/B,SACI,uBAAMJ,UAAU,OAAO6E,MAAO,CAAC6G,cAAe,cAA9C,UAA8DzI,EAAK8I,SAAStG,cAA5E,SAEJ,uBAAOzF,WAAiC,IAArBiD,EAAK6G,YAAyB,gCAAkC,eAAgBlE,YAAgC,KAAlB3C,EAAKkJ,SAAmBlJ,EAAKkJ,SAAW,aAAcjI,GAAI,aAAe9D,EAAOgB,MAAO6B,EAAKmJ,UAAWjG,SAAU,SAAApD,GAAC,OA1cpP,SAACA,EAAG3C,GACvB,IAAIiM,EAAc,YAAwB1L,EAAW6H,MACjD8D,EAAkC,IAAI9F,OAAO6F,EAAejM,GAAOkG,WAAY,KACnF+F,EAAejM,GAAOgM,UAAgBrJ,EAAEqC,OAAOhE,MAC/CiL,EAAejM,GAAO0J,YAAgBwC,EAAI7F,KAAK1D,EAAEqC,OAAOhE,OACxDR,EAAc,2BACPD,GADM,IAET0L,oBAmcuQE,CAAexJ,EAAG3C,MACzP,wBAAOJ,UAAU,SAAjB,uBAAqCiD,EAAKyD,WAA1C,kBAAqEzD,EAAK0D,WAA1E,OAA8F,wBACxE,IAArB1D,EAAK6G,aAA0B,wBAAOjF,MAAO,CAAC0C,MAAO,OAAtB,+BAAiDtE,EAAK8I,SAAStG,cAA/D,SANArF,MAYhD,sBAAKJ,UAAU,gBAAf,UACI,yBAAQA,UAAU,0CAA0CE,QA3gBlE,WAClB0G,IAAK,CACD7G,MAAO,SACP8G,KAAK,WAAD,OAAalG,EAAW4H,SAAxB,kDACJzB,KAAM,UACNC,SAAS,EACTC,YAAY,IACb1E,MAAK,SAAAkK,GACJ,GAAIA,EAAK,CACL,IAAItF,EAAW,CACX,OAAUvG,EAAW2H,QAEzB9G,GL1OsBvC,cK0OSiI,GAAU,SAAS9D,EAAU6I,GAC7C,MAAPA,IACJpC,KACAjH,IAAMwE,QAAQhE,YA4fF,UACI,cAAC,IAAYiE,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAIC,MAAO,QAASvH,UAAW,cAAnE,SACI,cAAC,KAAD,MAFR,gBAMA,yBAAQA,UAAU,4BAA4BE,QA7iBjD,WACrB,IAD2B,EACvB6D,GAAS,EADc,cAEbpD,EAAW6H,MAFE,IAE3B,2BAA+B,CAAC,IAAvBxE,EAAsB,QAC3B,IAAsB,IAAlBA,EAAE8F,YAAuB,CACzBlH,IAAMC,MAAN,mBAAwBmB,EAAE+H,SAA1B,yCACAhI,GAAS,EACT,QANmB,8BAS3B,IAAKA,EAAQ,CACT,IADS,EACL8H,EAAgB,GADX,cAEKlL,EAAW6H,MAFhB,IAET,2BAA+B,CAAC,IAAvBxE,EAAsB,QAC3B6H,EAAclG,KAAK,CACf,OAAU3B,EAAEsE,OACZ,OAAUtE,EAAEwG,OACZ,UAAaxG,EAAEoI,aANd,8BAYT5K,GLxN0BvC,uBKqNX,CACX,cAAiB4M,IAEuB,SAAUzI,GAClDR,IAAMwE,QAAQhE,GACd2G,GAAcpJ,EAAY,QAshBV,UACI,cAAC,IAAY0G,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAIC,MAAO,QAASvH,UAAW,cAAnE,SACI,cAAC,KAAD,MAFR,2BAUZ,sBAAKE,QAAS,SAAA6C,GAAC,OAAIA,EAAEyE,mBAArB,UACI,sBAAMxH,UAAU,aAAaE,QAjrBpB,SAAC6C,GAC1BA,EAAEyE,kBACF1G,GAAe6H,IA+qBC,SACI,cAAC,IAAYtB,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAIC,MAAO,SAA/C,SACI,cAAC,KAAD,QAIR,sBAAKvH,UAAW2I,EAAa,uBAAyB,kBAAtD,UACI,yBAAQ3I,UAAU,2BAA2BE,QAtUlD,WAIjBsB,GL3bgCvC,mBKwbf,CACX,YAAemJ,IAEkB,SAAShF,QAkU1B,UACI,cAAC,IAAYiE,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAItH,UAAW,cAAnD,SACI,cAAC,KAAD,MAFR,kBAIsBqI,EAJtB,WAMA,yBAAQrI,UAAU,6BAA6BE,QAAS,SAAA2F,GAAC,OAAI+D,GArvB3D,IAqvBF,UACI,cAAC,IAAYvC,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAItH,UAAW,cAAnD,SACI,cAAC,KAAD,MAFR,+BAMA,yBAAQA,UAAU,6BAA6BE,QAAS,SAAA2F,GAAC,OAAI+D,GA1vB3D,IA0vBF,UACI,cAAC,IAAYvC,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAItH,UAAW,cAAnD,SACI,cAAC,KAAD,MAFR,+BAMA,yBAAQA,UAAU,6BAA6BE,QAAS,SAAA2F,GAAC,OAAI+D,GA/vB3D,IA+vBF,UACI,cAAC,IAAYvC,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAItH,UAAW,cAAnD,SACI,cAAC,KAAD,MAFR,+BAMA,yBAAQA,UAAU,+BAA+BE,QA3nBjD,WAIpBsB,GAAgBpC,EAHD,CACX,YAAegJ,IAEsB,SAAShF,EAAU6I,GACxD,IAD6D,EACzDQ,EAAO,GADkD,cAE/CrJ,GAF+C,IAE7D,2BAAwB,CAAC,IAAhBY,EAAe,QACpByI,EAAK9G,KAAL,aACIvE,MAAO4C,EAAEwG,OACTkC,MAAO1I,EAAE+H,UACN/H,KANkD,8BAS7DgF,EAAmB,MACnBF,EAAa,CACTpB,MAAM,EACN3H,MAAO,oBACPyI,KAAM,CACFD,SAAU,GACVoD,SAAU,GACVgB,YAAavE,EACbyD,cAAeY,EACfnC,qBAAsB,IAE1B1B,KArKc,QAwwBF,UACI,cAAC,IAAYvB,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAItH,UAAW,cAAnD,SACI,cAAC,IAAD,MAFR,gCAMA,yBAAQA,UAAU,4BAA4BE,QA7sBlD,WAChB,IAAIgH,EAAW,CACb,OAAUvG,EAAW2H,QAEvB9G,GLrE8BnC,8BKqEU6H,GAAU,SAAS9D,GACvD,IADiE,EAC7DwJ,EAAQ,GAAIC,EAAQ,GADyC,cAEnDzJ,EAASyI,eAF0C,IAEjE,2BAAsC,CAAC,IAA9B7H,EAA6B,QAClC4I,EAAMjH,KAAN,aACIvE,MAAO4C,EAAEwG,OACTkC,MAAO1I,EAAE+H,UACN/H,KANsD,kDASnDZ,EAASkH,sBAT0C,IASjE,2BAA6C,CAAC,IAArCtG,EAAoC,QACzC6I,EAAMlH,KAAN,aACIvE,MAAO4C,EAAEwG,OACTkC,MAAO1I,EAAE+H,UACN/H,KAbsD,8BAgBjEgF,EAAmB,MACnBF,EAAa,2BACND,GADK,IAERnB,MAAM,EACNkB,KA1Fc,EA2FdJ,KAAM,CACFqD,cAAee,EACftC,qBAAsBuC,GAE1B9M,MAAM,mBAAD,OAAqBY,EAAW4H,iBAgrBzB,UACI,cAAC,IAAYlB,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAItH,UAAW,cAAnD,SACI,cAAC,IAAD,MAFR,uBAI2BW,EAAW4H,yB,wBC/yBnD,MAA0B,uCCA1B,MAA0B,iCCkG1BuE,MAxFf,SAAuBrN,GACnB,IAAOsN,EAAatN,EAAbsN,UACP,EAA0CrM,oBAAS,GAAnD,mBAAOsM,EAAP,KAAuBC,EAAvB,KACMC,EAAsB,WACxB,MAAmDC,OACnD,MAAO,CAAElI,MADT,EAAQmI,WACQtI,OADhB,EAA2BuI,cAG/B,EAAqC3M,mBAASwM,KAA9C,mBAAOI,EAAP,KAAoBC,EAApB,KAEMC,EAAc,SAACC,GAEjB,IAAMC,EAAgBC,EAAMF,GAC5B,OAAKC,EAGE,cAACA,EAAD,IAFI,cAAC,KAAD,KAef,OAVA7N,qBAAU,WACN,SAAS+N,IACLL,EAAcL,KAGlB,OADAC,OAAOU,iBAAiB,SAAUD,GAC3B,WACHT,OAAOW,oBAAoB,SAAUF,MAE1C,IAGC,eAAC,IAAD,CACIG,MAAOC,EACPC,WAAW,KACXC,UAAWlB,EACXnI,MAAO,CACH,OAAUyI,EAAYxI,OAAS,KAC/B,QAAW,eACX,SAAY,QACZ,IAAO,IACP,KAAQ,KAThB,UAYI,cAAC,IAAD,UACI,sBACID,MAAO,CACHG,QAAS,OACTmJ,WAAY,SACZpJ,QAAS,OACT2G,cAAe,YACf0C,WAAY,OACZC,SAAU,GACVC,cAAe,MACfrI,SAAU,SACVsI,aAAc,WACdC,WAAY,SACZjH,MAAO,WAZf,UAeI,sBAAMrH,QAAS,kBAAM+M,GAAiBD,IAAtC,SACI,cAAC,IAAY3F,SAAb,CAAsBjG,MAAO,CAAC,KAAQ,MAAtC,UACwB,IAAnB4L,EAA2B,cAAC,IAAD,IAAoC,cAAC,IAAD,SAGpD,IAAnBA,GAA4B,sBAAMnI,MAAO,CAACG,QAAS,eAAgB,WAAc,QAArD,6BAGrC,cAAC,IAAD,UAEY+H,EAAUtJ,KAAI,SAASR,EAAM7C,GACzB,OACI,cAAC,IAAD,CAAoCqO,UAAU,SAA9C,SACI,eAAC,IAAD,CAAU3H,KAAM0G,EAAYvK,EAAK6D,MAAjC,UAAyC7D,EAAKuC,KAAK,cAAC,IAAD,CAAMtF,QAAS,kBAAM+M,GAAgB,IAAOhN,GAAIgD,EAAKyL,WAD5G,uBAA2BtO,SAO/C,cAAC,IAAD,CAAeyE,MAAO,CAAEqH,UAAW,UAAnC,SACI,qBACIrH,MAAO,CACHE,QAAS,aAFjB,SAII,qBAAK4J,IAAK,YAAa1J,MAAO,KAAM2J,IAAKC,YC+b9CC,MAxgBf,SAAkBrP,GACd,IACOC,EAAUD,EAAVC,OACDC,EAAWC,cACjB,EAA8Cc,oBAAS,GAAvD,mBAAOiI,EAAP,KAAmB7H,EAAnB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAOqO,EAAP,KAAqBC,EAArB,KACA,EAA8CtO,mBAAS,IAAvD,mBAAOuO,EAAP,KAAoBC,EAApB,KACA,EAA8CxO,mBAAS,IAAvD,mBAAOyO,EAAP,KAAiBC,EAAjB,KACA,EAA8C1O,mBAAS,IAAvD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8CF,mBAAS,MAAvD,mBAAOqI,EAAP,KAAwBC,EAAxB,KACA,EAAgDtI,mBAAS,MAAzD,mBAAO2O,EAAP,KAAyBC,EAAzB,KACA,EAA8C5O,mBAAS,CAACkI,MAAO,EAAGJ,KAAM,CAACqD,cAAe,GAAIvB,qBAAsB,IAAK5C,MAAM,EAAO3H,MAAO,aAA3I,mBAAO8I,GAAP,KAAkBC,GAAlB,KAEMtH,GAAkB,SAACC,EAAKC,EAAMC,EAAU4N,GAC1C,IAAI3N,EAAY,IAAIC,QACpBD,EAAUE,OAAO,eAAgB,oBAEjC,IAAIC,EAAiB,CACjBC,OAAQ,OACRC,QAASL,EACTF,KAAMQ,KAAKC,UAAUT,GACrBU,SAAU,UAGdC,MAAMZ,EAAKM,GACNO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACkB,MAAhBA,EAAOC,MACP/C,EAAS,CAACQ,KAAMG,IAChBqB,EAASc,EAAOE,IAAK,QAErBhB,EAAS,KAAMc,EAAOE,KACtBhD,EAAS,CACLQ,KAAMI,EACNoC,IAAKF,EAAOE,MAEhBC,IAAMC,MAAMJ,EAAOE,SAG1BG,OAAM,SAAAC,GACHpD,EAAS,CACLQ,KAAMI,EACNoC,IAAKI,QA2HfyM,GAAkB,SAACvM,GACrB,IAAIiE,EAAW,CACX,OAAUjE,EAAKuH,QAEnBhJ,GTlK8BnC,oBSkKA6H,GAAU,SAAU9D,GAC9C,IAAIqM,EAAQ,eAAOxM,GACnBwM,EAASR,YAAc,GAFiC,oBAG1C7L,GAH0C,IAGxD,2BAAwB,CAAC,IAAhBY,EAAe,QACpByL,EAASR,YAAYtJ,KAAK,CACtBvE,MAAO4C,EAAE2I,YACTD,MAAO1I,EAAE0L,cACT9E,YAAa5G,EAAE4G,eAPiC,kDAU1CuE,GAV0C,IAUxD,2BAAwB,CAAC,IAAhBnL,EAAe,QACpB,GAAIA,EAAE5C,QAAUqO,EAAStI,QAAS,CAC9BsI,EAASE,KAAO3L,EAChB,QAbgD,8BAgBxDpD,EAAc6O,OA+BhBG,GAAkB,WACpBpO,GAAgBpC,OAAe+D,GAAW,SAASC,GAC/C,IADyD,EACrDX,EAAS,GAD4C,cAE3CW,GAF2C,IAEzD,2BAAwB,CAAC,IAAhBY,EAAe,QACpBA,EAAEiL,YAAc,GAChBxM,EAAOkD,KAAK3B,IAJyC,8BAMzDgL,EAAgBvM,OA0ExB,OAtEA5C,qBAAU,WACNC,SAASC,MAAQL,EAASX,EAC1B,IAAIsE,EAAU,CAAC,CACXC,IAAKlE,EACL2C,eAAgB,CACZC,OAAQ,OACRI,SAAU,WAEf,CACCkB,IAAKpE,EACL6C,eAAgB,CACZC,OAAQ,OACRI,SAAU,WAEf,CACCkB,IAAKhE,EACLyC,eAAgB,CACZC,OAAQ,OACRI,SAAU,YAIlBmB,QAAQC,IAAIH,EAAQI,KAAK,SAAAR,GAAI,OAAIZ,MAAMY,EAAKK,IAAKL,EAAKlB,oBACjDO,MAAK,SAAAoB,GAAS,OAAIH,QAAQC,IAAIE,EAAUD,KAAI,SAAAE,GAAI,OAAIA,EAAKnB,cACzDF,MAAK,SAAAqB,GACF,IADU,EACNI,GAAS,EADH,cAEIJ,GAFJ,IAEV,2BAAoB,CACD,MADC,QACVjB,OACFqB,GAAS,EACTpE,EAAS,CACLQ,KAAMI,EACNoC,IAAKgB,EAAKhB,QAPZ,8BAWV,IAAKoB,EAAQ,CACT,IADS,EACLtB,EAAS,GADJ,cAEKkB,EAAK,GAAGhB,KAFb,IAET,2BAA2B,CAAC,IAAnBqB,EAAkB,QACvBA,EAAEiL,YAAc,GAChBxM,EAAOkD,KAAK3B,IAJP,8BAMTgL,EAAgBvM,GAChB+M,GAAgB/M,EAAO,IACvB,IARS,EAQLoN,EAAU,GARL,cASKlM,EAAK,GAAGhB,KATb,IAST,2BAA2B,CAAC,IAAnBqB,EAAkB,QACvB6L,EAAQlK,KAAK,CACVvE,MAAO4C,EAAE2I,YACTD,MAAO1I,EAAE0L,cACR9E,aAAa,KAbZ,8BAgBTsE,EAAeW,GACfA,EAAU,GAjBD,oBAkBKlM,EAAK,GAAGhB,KAlBb,IAkBT,2BAA2B,CAAC,IAAnBqB,EAAkB,QACvB6L,EAAQlK,KAAK,CACTvE,MAAO4C,EAAEmD,QACTuF,MAAO1I,EAAE8B,aArBR,8BAwBTsJ,EAAYS,OAGnB/M,OAAM,SAAAC,GACHpD,EAAS,CACLQ,KAAMI,EACNoC,IAAKI,SAGlB,IAGC,sBAAK/C,UAAU,YAAYE,QAAS,kBAAMY,GAAc,IAAxD,UACI,cAAC,IAAD,CACIqD,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAc,EACdC,KAAK,EACLC,kBAAkB,EAClBC,MAAM,UACNC,WAAW,EACXC,cAAY,IAEhB,cAAC,EAAD,CACI8C,KAAMmB,GAAUnB,KAChB3H,MAAO8I,GAAU9I,MACjB6H,WAzGW,SAAC7E,GACpB+F,GAAa,2BACND,IADK,IAERnB,MAAM,MAuGFI,WAAY,SAAAjC,GAAC,OAAIiD,GAAa,2BAAID,IAAL,IAAgBnB,MAAM,MACnDG,UAAW,aALf,SAtTgB,IA4TXgB,GAAUD,MACP,qCACI,sBAAK5I,UAAU,gBAAf,UACI,uBAAOkG,QAAS,wBAAhB,SACI,sBAAMlG,UAAU,OAAO6E,MAAO,CAAC6G,cAAe,cAA9C,gCAEJ,uBAAO1L,UAAW,eAAgBkE,GAAI,wBAAyB0B,YAAa,iBAAkBxE,MAAOyH,GAAUL,KAAKuD,SAAU5F,SAAU,SAAApD,GAAM+F,GAAa,2BACpJD,IADmJ,IAEtJL,KAAK,2BACEK,GAAUL,MADb,IAEAuD,SAAUhJ,EAAEqC,OAAOhE,iBAI/B,sBAAKpB,UAAU,gBAAf,UACI,uBAAOkG,QAAS,wBAAhB,SACI,sBAAMlG,UAAU,OAAO6E,MAAO,CAAC6G,cAAe,cAA9C,4BAEJ,uBAAO1L,UAAW,eAAgBkE,GAAI,wBAAyB0B,YAAa,cAAexE,MAAOyH,GAAUL,KAAK2D,SAAUhG,SAAU,SAAApD,GAAM+F,GAAa,2BACjJD,IADgJ,IAEnJL,KAAK,2BACEK,GAAUL,MADb,IAEA2D,SAAUpJ,EAAEqC,OAAOhE,iBAK/B,sBAAKpB,UAAU,iCAAf,UACI,gCACI,sBAAMA,UAAU,OAAO6E,MAAO,CAAC6G,cAAe,cAA9C,mCAEJ,cAAC,IAAD,CACIE,QAASqD,EACT7N,MAAOiO,EACPlJ,SAjPI,SAAClD,GAC/BqM,EAAoBrM,IAiPM6M,SAAO,EACPlK,YAAa,uBACbkG,iBAAkB,sBAI1B,sBAAK9L,UAAU,iCAAf,UACI,gCACI,sBAAMA,UAAU,OAAO6E,MAAO,CAAC6G,cAAe,cAA9C,4BAEJ,cAAC,IAAD,CACIE,QAASuD,EACT/N,MAAO2H,EACP5C,SAnQL,SAAClD,GACpB+F,EAAmB/F,IAmQK2C,YAAa,gBACbkG,iBAAkB,eAKtBrB,MAAMC,QAAQ2E,IAAqBA,EAAiB5L,KAAI,SAACR,EAAM7C,GAC3D,OACI,sBAAKJ,UAAW,gBAAhB,UACI,uBAAOkE,GAAI,aAAe9D,EAAOD,KAAM,WAAY4P,QAAS9M,EAAK2H,YAAazE,SAAU,SAAApD,GAAC,OA9S/F,SAAC3C,GAC3B,IAAI4P,EAAe,YAAOX,GAC1BW,EAAgB5P,GAAOwK,aAAeyE,EAAiBjP,GAAOwK,YAC9D0E,EAAoBU,GA2SyGC,CAAsB7P,MACnH,wBAAO8F,QAAS,aAAe9F,EAAOJ,UAAW,gBAAjD,0CAAgGiD,EAAKyJ,WAFnEtM,MAQlD,wBAAQJ,UAAW,iBAAkBE,QAAS,SAAA2F,GAAC,OAAIiD,GAAa,2BAAID,IAAL,IAAgBnB,MAAM,MAArF,oBACA,wBAAQ1H,UAAW,6CAA8CE,QA7Q9D,WACnB,GAAuC,KAAnC2I,GAAUL,KAAKuD,SAASzG,OAI5B,GAAwB,OAApByD,EAKJ,GAAyB,OAArBsG,EAAJ,CAKF,IAf2B,EAevBnI,EAAW,CACX,SAAY2B,GAAUL,KAAKuD,SAC3B,SAAYlD,GAAUL,KAAK2D,SAC3B,QAAWpD,EAAgB3H,MAC3B,cAAiB,IAnBM,cAqBXiO,GArBW,IAqBzB,2BAAgC,CAAC,IAAxBrL,EAAuB,QAC5BkD,EAASgJ,cAAcvK,KAAK,CACxBgH,YAAa3I,EAAE5C,MACfwJ,YAAa5G,EAAE4G,eAxBE,8BA2B3BpJ,GTpIgCnC,cSoIC6H,GAAU,SAAS9D,EAAU6I,GAC9C,OAARA,IACJnD,GAAa,2BACND,IADK,IAERnB,MAAM,KAEVkI,KACAhN,IAAMwE,QAAQhE,YAvBZR,IAAMC,MAAM,uCALZD,IAAMC,MAAM,oCAJZD,IAAMC,MAAM,2BA2QA,yBAKZ,sBAAK7C,UAAU,YAAY6E,MAAO,CAACC,OAAQ,oBAAqBC,QAAS,OAAQC,QAAS,OAAQb,SAAU,YAA5G,UAEI,sBAAKU,MAAO,CAACI,MAAO,QAASH,OAAQ,oBAAqBE,QAAS,gBAAnE,UACI,uBAAOhF,UAAU,eAAekF,UAAU,EAAMC,UAxVnC,SAACpC,KAwVmE6C,YAAY,gCAC7F,qBAAK5F,UAAU,+BAAf,SAC6B,IAAxB+O,EAAa9K,OACV,8BACI,0DAEJ8K,EAAatL,KAAI,SAACR,EAAM7C,GACxB,OACI,qBAEIJ,UAAU,YACVE,QAAS,SAAA2F,GAAC,OAAI2J,GAAgBvM,IAHlC,SAIKA,EAAK8I,UAHD3L,WAUzB,sBAAKyE,MAAO,CACRI,MAAO,qBACPH,OAAQ,oBACRiB,WAAY,OACZC,UAAW,OACXhB,QAAS,eACTiB,SAAU,OACVlB,QAAS,QAPb,UASI,sBAAK/E,UAAU,gBAAf,UACI,uBAAOkG,QAAQ,OAAf,SACI,sBAAMlG,UAAU,OAAhB,gCAEJ,uBAAOA,UAAU,eAAekE,GAAG,OAAO9C,MAAOT,EAAWoL,SAAU5F,SAAU,SAAApD,GAC5EnC,EAAc,2BACPD,GADM,IAEToL,SAAUhJ,EAAEqC,OAAOhE,eAK/B,sBAAKpB,UAAU,gBAAf,UACI,uBAAOkG,QAAQ,OAAf,SACI,sBAAMlG,UAAU,OAAhB,uCAEJ,uBAAOA,UAAU,eAAekE,GAAG,OAAO9C,MAAOT,EAAWwL,SAAUhG,SAAU,SAAApD,GAC5EnC,EAAc,2BACPD,GADM,IAETwL,SAAUpJ,EAAEqC,OAAOhE,eAK/B,sBAAKpB,UAAU,gBAAf,UACI,uBAAOkG,QAAQ,OAAf,SACI,sBAAMlG,UAAU,OAAhB,4BAEJ,cAAC,IAAD,CACIkE,GAAG,OACH4L,SAAO,EACP1O,MAAOT,EAAWsO,YAClBrD,QAASqD,EACT9I,SAvQF,SAAClD,GACnBY,QAAQC,IAAIb,GACZrC,EAAc,2BACPD,GADM,IAETsO,YAAahM,WAuQL,sBAAKjD,UAAU,gBAAf,UACI,uBAAOkG,QAAQ,OAAf,SACI,sBAAMlG,UAAU,OAAhB,qBAEJ,cAAC,IAAD,CACIkE,GAAG,OACH9C,MAAOT,EAAWgP,KAClB/D,QAASuD,EACThJ,SA3QL,SAAClD,GAChBrC,EAAc,2BACPD,GADM,IAETgP,KAAM1M,WA6QMtC,EAAWwP,eAAe,gBAAkBxP,EAAWsO,YAAYxL,KAAI,SAACR,EAAM7C,GAC1E,OACI,sBAAKJ,UAAW,gBAAhB,UACI,uBAAOkE,GAAI,OAAS9D,EAAOD,KAAM,WAAY4P,QAAS9M,EAAK2H,YAAazE,SAAU,SAAApD,GAAC,OArZ5F,SAACA,EAAG3C,GACvB,IAAI4P,EAAe,eAAOrP,GAC1BqP,EAAgBf,YAAY7O,GAAOwK,aAAejK,EAAWsO,YAAY7O,GAAOwK,YAChFhK,EAAcoP,GAkZqGI,CAAerN,EAAG3C,MACzG,wBAAO8F,QAAS,OAAS9F,EAAOJ,UAAW,gBAA3C,cAA8DW,EAAWoL,SAAzE,oBAAoG9I,EAAKyJ,WAFvEtM,MAQlD,qBAAKJ,UAAU,gBAAf,SACI,wBAAOA,UAAU,SAAjB,uBAAqCW,EAAW+F,WAAhD,kBAA2E/F,EAAWgG,WAAtF,SAGJ,sBAAK3G,UAAU,gBAAf,UACI,yBAAQA,UAAU,0CAA0CE,QA5UzD,WACnB,IAAIgH,EAAW,CACX,OAAUvG,EAAW6J,QAEzBhJ,GTlJ8BnC,cSkJG6H,GAAU,SAAS9D,GAChD5B,GAAgBpC,OAAe+D,GAAW,SAASQ,GAC/CqL,EAAgBrL,GAChB6L,GAAgB7L,EAAK,OAEzBf,IAAMwE,QAAQhE,OAmUF,UACI,cAAC,IAAYiE,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAIC,MAAO,QAASvH,UAAW,cAAnE,SACI,cAAC,KAAD,MAFR,gBAMA,yBAAQA,UAAU,4BAA4BE,QA3Z3C,WACnB,IADyB,EACrBgH,EAAW,CACX,OAAUvG,EAAW6J,OACrB,SAAY7J,EAAWoL,SACvB,SAAYpL,EAAWwL,SACvB,QAAWxL,EAAWgP,KAAKvO,MAC3B,cAAiB,IANI,cAQXT,EAAWsO,aARA,IAQzB,2BAAsC,CAAC,IAA9BjL,EAA6B,QAClCkD,EAASgJ,cAAcvK,KAAK,CACxB,YAAe3B,EAAE5C,MACjB,YAAe4C,EAAE4G,eAXA,8BAczBpJ,GTrF8BnC,cSqFG6H,GAAU,SAAS9D,GAChD5B,GAAgBpC,OAAe+D,GAAW,SAASQ,EAAMsI,GACzC,OAARA,GACA+C,EAAgBrL,GAChB6L,GAAgB7L,EAAK,KAErB6L,GAAgB7O,MAGxBiC,IAAMwE,QAAQhE,OAoYF,UACI,cAAC,IAAYiE,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAIC,MAAO,QAASvH,UAAW,cAAnE,SACI,cAAC,KAAD,MAFR,2BASR,sBAAKE,QAAS,SAAA6C,GAAC,OAAIA,EAAEyE,mBAArB,UACI,sBAAMxH,UAAU,aAAaE,QAxShB,SAAC6C,GAC1BA,EAAEyE,kBACF1G,GAAe6H,IAsSH,SACI,cAAC,IAAYtB,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAIC,MAAO,SAA/C,SACI,cAAC,KAAD,QAIR,qBAAKvH,UAAW2I,EAAa,uBAAyB,kBAAtD,SACI,yBAAQ3I,UAAU,+BAA+BE,QAxc9C,WACnB8I,EAAmB,MACnBsG,EAAoB,MACpBxG,GAAa,CACTpB,MAAM,EACNc,KAAM,CACF,SAAY,GACZ,SAAY,GACZ,SAAY,EACZ,cAAiB,IAErBzI,MAAO,kBACP6I,KA9DgB,KA0fJ,UACI,cAAC,IAAYvB,SAAb,CAAsBjG,MAAO,CAACkG,KAAM,GAAItH,UAAW,cAAnD,SACI,cAAC,IAAD,MAFR,qCC5aTqQ,EApFH,WACR,IAAIC,EAAkB,GAChB3Q,EAAWC,cACjB,EAA4Cc,mBAAS,IAArD,mBAAO6P,EAAP,KAAuBC,EAAvB,KAgDA,OA9CA3Q,qBAAU,WAMNwC,MAAMnD,EALe,CACjB8C,OAAQ,OACRI,SAAU,WAITE,MAAK,SAAAc,GAAQ,OAAIA,EAASZ,UAC1BF,MAAK,SAAAG,GACF,GAAoB,MAAhBA,EAAOC,KAAc,CACrB/C,EAAS,CAACQ,KAAMG,IADK,oBAEPmC,EAAOE,KAFA,IAErB,2BAA0B,CAAC,IAAlBqB,EAAiB,QACtBsM,EAAgB3K,KAAhB,2BACO3B,GADP,IAEI0K,KAAK,IAAD,OAAM1K,EAAE0L,cAAcjK,eAC1BD,KAAMxB,EAAE0L,cACRe,YAAY,MAPC,8BAUrBH,EAAgB3K,KAAK,CACjBmB,KAAM,aACN4H,KAAM,SACNlJ,KAAM,QACNiL,YAAY,GACb,CACC3J,KAAM,0BACN4H,KAAM,YACNlJ,KAAM,WACNiL,YAAY,IAEhBD,EAAkBF,QAElB3Q,EAAS,CACLQ,KAAMI,EACNoC,IAAKF,EAAOE,IAAI,QAI3BG,OAAM,SAAAC,GACHpD,EAAS,CACLQ,KAAMI,EACNoC,IAAKI,SAGlB,IAGC,eAAC,IAAD,WACI,cAAC,EAAD,CAAegK,UAAWwD,IAC1B,eAAC,IAAD,WAEQA,EAAe9M,KAAI,SAASR,EAAM7C,GAC9B,OACwB,IAApB6C,EAAKwN,YACD,cAAC,IAAD,CAAOC,OAAK,EAAChC,KAAMzL,EAAKyL,KAAxB,SACI,cAAC,EAAD,CAAShP,OAAQuD,EAAKuC,KAAM4C,aAAcnF,EAAK0J,YAAatE,eAAgBpF,EAAKyM,qBAOrG,cAAC,IAAD,CAAOgB,OAAK,EAAChC,KAAK,SAAlB,SACI,cAAC,EAAD,CAAOhP,OAAO,YAGlB,cAAC,IAAD,CAAOgR,OAAK,EAAChC,KAAK,YAAlB,SACI,cAAC,EAAD,CAAUhP,OAAO,YAGrB,cAAC,IAAD,UACI,cAAC,EAAD,CAAUA,OAAO,aAGzB,cAAC,IAAD,CAAUO,GAAKwK,MAAMC,QAAQ6F,IAAmBA,EAAetM,OAAS,EAAKsM,EAAe,GAAG7B,KAAO,eChFnGiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvO,MAAK,YAAkD,IAA/CwO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCJRO,GAAS,EAETC,EAAY,CACdC,QAASF,EACTG,OAAQ,GA6BGC,GA1BQ,WAAiC,IAAhCC,EAA+B,uDAAvBJ,EAAWK,EAAY,uCAC7CtR,EAAUsR,EAAVtR,KACN,OAAOA,GACH,KAAKzB,EACD,OAAO,2BACA8S,GADP,IAEIH,QAZH,OAeL,KAAK1S,EACD,OAAO,2BACA6S,GADP,IAEIH,QAASF,IAGjB,KAAKvS,EACD,OAAO,2BACA4S,GADP,IAEIH,QAASF,EACTG,OAAQG,EAAQrR,QAExB,QACI,OAAOoR,IC9BbJ,GAAY,CACdM,SAAS,EACT7O,OAAO,EACPoI,KAAM,IA2CK0G,GAxCO,WAAiC,IAAhCH,EAA+B,uDAAvBJ,GAAWK,EAAY,uCAC1CtR,EAASsR,EAATtR,KACR,OAAQA,GACJ,KAAKE,EACD,OAAO,2BACAmR,GADP,IAEIE,SAAS,EACT7O,OAAO,EACPoI,KAAM,YAGd,KAAK1K,EACD,OAAO,2BACAiR,GADP,IAEI3O,OAAO,EACP6O,SAAS,EACTzG,KAAMwG,EAAQxG,OAGtB,KAAK3K,EAQL,KAAKE,EACD,OAAO,2BACAgR,GADP,IAEIE,SAAS,EACT7O,OAAO,EACPoI,KAAM,KAGd,QACI,OAAOuG,ICnCJI,GALKC,YAAgB,CAChCC,QAASP,GACTQ,OAAQJ,KCHZ9N,QAAQC,IAAIhF,cAQGkT,OAHHC,YAAYL,ICAxBM,IAASC,OAKP,cAAC,IAAD,CAAUH,MAAOI,GAAjB,SACE,cAAC,EAAD,MAEFtS,SAASuS,eAAe,SAM1B1B,M","file":"static/js/main.eb7d4acb.chunk.js","sourcesContent":["export const OPEN_SIDEBAR = \"OPEN\";\r\nexport const CLOSE_SIDEBAR = \"CLOSE\";\r\nexport const SELECT_ITEM = \"SELECT_ITEM\";","export const BASE_URL               = process.env.REACT_APP_BASEURL;\r\nexport const TEMPLATE_URL           = BASE_URL + \"asset/template/\";\r\nexport const REPORT_URL             = BASE_URL + \"asset/report/\";\r\nexport const WEB_BASE_NAME          = \" | IP  Manager\";\r\n\r\nexport const LOGIN                  = BASE_URL + 'login';\r\n\r\n/*      OBJECT API URL       */\r\nconst OBJECT_URL                    = BASE_URL + 'obj/';\r\nexport const LIST_OBJECT            = OBJECT_URL + 'list';\r\nexport const GET_PRO_BY_OBJ_ID      = OBJECT_URL + 'get_object_info';\r\nexport const UPDATE_PRO_VALUE       = OBJECT_URL + 'update_property';\r\nexport const DELETE_OBJECT          = OBJECT_URL + 'delete';\r\nexport const INSERT_OBJECT          = OBJECT_URL + 'insert';\r\nexport const GET_TEMPLATE           = OBJECT_URL + 'get_excel_template';\r\nexport const INSERT_OBJECT_EXCEL    = OBJECT_URL + 'insert_object_excel';\r\nexport const EXPORT_DATA            = OBJECT_URL + 'export_data';\r\n\r\n/*      OBJECT TYPE API URL    */\r\nconst OBJECT_TYPE_URL               = BASE_URL + 'obj_type/';\r\nexport const LIST_OBJ_TYPE          = OBJECT_TYPE_URL + 'list';\r\n\r\n/*      PROPERTY API URL    */\r\nconst PROPERTY_URL                  = BASE_URL + 'pro/';\r\nexport const LIST_PROPERTY          = PROPERTY_URL + 'list';\r\nexport const Get_PRO_INFO           = PROPERTY_URL + 'get_pro_info';\r\nexport const UPDATE_PROPERTY        = PROPERTY_URL + 'update';\r\nexport const INSERT_PROPERTY        = PROPERTY_URL + 'insert';\r\nexport const DELETE_PROPERTY        = PROPERTY_URL + 'delete';\r\nexport const GET_LIST_PRO_BY_OBJ_ID = PROPERTY_URL + 'get_list_pro_by_obj_id';\r\nexport const ADD_PRO_TO_OBJECT      = PROPERTY_URL + 'add_property_to_object';\r\n\r\n/*      Rules API URL   */\r\nconst RULES_URL                     = BASE_URL + 'rules/';\r\nexport const LIST_RULES             = RULES_URL + 'list';\r\nexport const ADD_RULE               = RULES_URL + 'add_new_rule';\r\nexport const RULE_INFO              = RULES_URL + 'get_rule_info';\r\nexport const DELETE_RULE            = RULES_URL + 'delete';\r\nexport const UPDATE_RULE            = RULES_URL + 'update';","import React, {useEffect} from \"react\";\r\nimport './NotFound.sass';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SELECT_ITEM} from \"../Redux/ReducersAndActions/SideBar/SideBarActionsDefinition\";\r\nimport {WEB_BASE_NAME} from \"../API_URL\";\r\n\r\nconst NotFound = (props) => {\r\n    const {_title}      = props;\r\n    const dispatch      = useDispatch();\r\n    const ChangeState   = () => {\r\n        dispatch({\r\n            type: SELECT_ITEM,\r\n            index: 0\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = _title + WEB_BASE_NAME;\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"notfound_wrap\">\r\n            <div className=\"center-div text-center\">\r\n                <span className=\"notfound_title\">404</span>\r\n                <span className=\"notfound_desc\">\r\n                    Hmm, seem you're lost! Let's go&nbsp;\r\n                    <Link to=\"/blacklist\" onClick={ChangeState}>\r\n                        back\r\n                    </Link>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","export const LOADING = \"loading\";\r\nexport const LOADED = \"loaded\";\r\nexport const ERROR = \"error\";\r\nexport const SUCCESS = \"success\";","import React, {useEffect, useState} from 'react';\r\nimport './../../GlobalStyle.sass';\r\nimport {DELETE_RULE, LIST_OBJ_TYPE, LIST_RULES, RULE_INFO, WEB_BASE_NAME} from \"../API_URL\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ERROR, LOADED} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FaRegWindowClose, RiFunctionLine, MdOutlineSave, BiAddToQueue} from \"react-icons/all\";\r\nimport {IconContext} from \"react-icons\";\r\nimport swal from \"sweetalert\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\n\r\n\r\nfunction Rules (props) {\r\n    const {_title}                              = props;\r\n    const dispatch                              = useDispatch();\r\n    const [DetailData, setDetailData]           = useState({});\r\n    const [showAppBox, setShowAppBox]           = useState(false);\r\n    const [rulesData, setRulesData]             = useState([]);\r\n    const [searchKeyWord, setSearchKeyWord]     = useState(\"\");\r\n    const [testRegex, setTestRegex]             = useState({notMatchRegex: false, value: \"\"});\r\n    let OriginRulesData = [];\r\n\r\n    const __FetchFunction = (URL, body, callback) => {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body),\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(URL, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    dispatch({type: LOADED})\r\n                    callback(result.msg, null);\r\n                } else {\r\n                    toast.error(result.msg);\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: result.msg[0]\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                toast.error(e);\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n            });\r\n    }\r\n\r\n    const ToggleApplicationBox = (e) => {\r\n        e.stopPropagation();\r\n        setShowAppBox(!showAppBox);\r\n    }\r\n\r\n    const SearchByRuleName = e => {\r\n        setSearchKeyWord(e.target.value);\r\n        if (e.keyCode === 13) {\r\n            if (searchKeyWord.trim() === \"\") {\r\n                setRulesData(OriginRulesData);\r\n                return;\r\n            }\r\n            let MatchingSearchData = [];\r\n            rulesData.map((item, index) => {\r\n                if (item.name.toLowerCase().includes(searchKeyWord.toLowerCase())) {\r\n                    MatchingSearchData.push(item);\r\n                }\r\n            });\r\n            setRulesData(MatchingSearchData);\r\n        }\r\n    }\r\n\r\n    const GetRuleInfo = item => {\r\n        setTestRegex({\r\n            ...testRegex,\r\n            notMatchRegex: false,\r\n            value: \"\"\r\n        });\r\n        // for (let i of )\r\n        setDetailData(item);\r\n    }\r\n\r\n    const CheckRegex = e => {\r\n        let regex = new RegExp(DetailData.regex, 'g');\r\n        setTestRegex({\r\n            ...testRegex,\r\n            value: e.target.value,\r\n            notMatchRegex: e.target.value === \"\" ? false : !regex.test(e.target.value)\r\n        });\r\n    }\r\n    \r\n    const DeleteRule = () => {\r\n      swal({\r\n          title: \"Delete\",\r\n          text: `Rule data will be removed and CAN NOT recover. Continue?`,\r\n          icon: \"warning\",\r\n          buttons: true,\r\n          dangerMode: true})\r\n          .then(isConfirm => {\r\n              if (isConfirm) {\r\n                  let BodyData = {\r\n                      \"rule_id\": DetailData.rule_id\r\n                  };\r\n                  __FetchFunction(DELETE_RULE, BodyData, function(response) {\r\n                      GetListRule();\r\n                      toast.success(response);\r\n                  });\r\n              }\r\n          })\r\n    }\r\n\r\n\r\n    const GetListRule = () => {\r\n      __FetchFunction(LIST_RULES, undefined, function (response) {\r\n          GetRuleInfo(response[0]);\r\n          setRulesData(response);\r\n      });\r\n    }\r\n\r\n    useEffect(function() {\r\n        document.title = _title + WEB_BASE_NAME;\r\n        let ListAPI = [{\r\n           url: LIST_RULES,\r\n           requestOptions: {\r\n               method: 'POST',\r\n               redirect: 'follow'\r\n           }\r\n        }\r\n        // , {\r\n        //     url: LIST_OBJ_TYPE,\r\n        //     requestOptions: {\r\n        //         method: 'POST',\r\n        //         redirect: 'follow'\r\n        //     }\r\n        // }\r\n        ];\r\n\r\n        Promise.all(ListAPI.map(item => fetch(item.url, item.requestOptions)))\r\n            .then(responses => Promise.all(responses.map(resp => resp.json())))\r\n            .then(results => {\r\n                console.log(results);\r\n                let HasErr = false;\r\n                for (let i of results) {\r\n                    if (i.code !== 200) {\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            msg: i.msg\r\n                        });\r\n                        HasErr = true;\r\n                    }\r\n                    if (!HasErr) {\r\n                        dispatch({type: LOADED});\r\n                        setRulesData(results[0].msg);\r\n                        GetRuleInfo(results[0].msg[0]);\r\n                        // let TempArr = [];\r\n                        // for (let i of results[1].msg) {\r\n                        //     TempArr.push({\r\n                        //         value: i.obj_type_id,\r\n                        //         label: i.obj_type_name\r\n                        //     });\r\n                        // }\r\n                        // setListObjectType(TempArr);\r\n                        if (results[0].msg.length > 0) {\r\n                            GetRuleInfo({id: results[0].id});\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n            });\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"container\" onClick={() => setShowAppBox(false)}>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            <div className=\"box-style\" style={{height: \"calc(100% - 40px)\", padding: '20px', display: 'flex', position: 'relative'}}>\r\n\r\n                <div style={{width: '300px', height: 'calc(100% - 30px)', display: 'inline-block'}}>\r\n                    <input className=\"form-control\" disabled={true} onKeyDown={SearchByRuleName} placeholder=\"Find by rule's name ...\"/>\r\n                    <div className=\"list-container margin-top-10\">\r\n                        {rulesData.length === 0 ? (\r\n                            <div>\r\n                                <span>No rule founded!</span>\r\n                            </div>\r\n                        ) : rulesData.map((item, index) => {\r\n                            return (\r\n                                <div\r\n                                    key={index}\r\n                                    className=\"list-item\"\r\n                                    onClick={_ => GetRuleInfo(item)}>\r\n                                    {item.rule_name}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{\r\n                    width: 'calc(100% - 350px)',\r\n                    height: 'calc(100% - 70px)',\r\n                    marginLeft: '50px',\r\n                    marginTop: '50px',\r\n                    display: 'inline-block',\r\n                    overflow: 'auto',\r\n                    padding: '10px'}}>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"name\">\r\n                            <span className=\"bold\">Rule's name:</span>\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"name\" value={DetailData.rule_name} onChange={e => {\r\n                            setDetailData({\r\n                                ...DetailData,\r\n                                rule_name: e.target.value\r\n                            })\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"desc\">\r\n                            <span className=\"bold\">Rule's description:</span>\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"desc\" value={DetailData.rule_desc} onChange={e => {\r\n                            setDetailData({\r\n                                ...DetailData,\r\n                                rule_desc: e.target.value\r\n                            })\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"reg\">\r\n                            <span className=\"bold\">Rule's regex: </span>\r\n                            (Regex instruction <Link target=\"_blank\" to={{pathname: \"https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference\"}}>here</Link>)\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"reg\" value={DetailData.rule_regex} onChange={e => {\r\n                            setDetailData({\r\n                                ...DetailData,\r\n                                rule_regex: e.target.value\r\n                            })\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"test_regex\">\r\n                            <span className=\"bold\">Test regex: </span>\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"test_regex\" placeholder=\"Type something\" value={testRegex.value} onChange={CheckRegex}/>\r\n                        {testRegex.notMatchRegex && <small className=\"error\">Not match regex</small>}\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <small className=\"italic\">(Created: {DetailData.created_at}, Last update: {DetailData.updated_at})</small>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <button className=\"btn pull-right theme_red margin-left-10\" onClick={DeleteRule}>\r\n                            <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                <FaRegWindowClose/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Delete rule\r\n                        </button>\r\n                        <button className=\"btn pull-right theme_cyan\">\r\n                            <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                <MdOutlineSave/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Save change\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div onClick={e => e.stopPropagation()}>\r\n                    <span className=\"fab-button\" onClick={ToggleApplicationBox}>\r\n                        <IconContext.Provider value={{size: 25, color: 'white'}}>\r\n                            <RiFunctionLine/>\r\n                        </IconContext.Provider>\r\n                    </span>\r\n\r\n                    <div className={showAppBox ? \"application-box flex\" : \"application-box\"}>\r\n                        <button className=\"btn theme_green700 margin-10\">\r\n                            <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                <BiAddToQueue/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;New Rule</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport { IoMdCloseCircle } from \"react-icons/io\";\r\nimport {IconContext} from \"react-icons\";\r\nimport \"./Modal.sass\";\r\n\r\nconst Modal = (props) => {\r\n    const { show, title, children, onClickOut, WrapClass, CloseModal, ModalWidth } = props;\r\n    if (show !== true) return null;\r\n    return (\r\n        <div className={WrapClass} onClick={onClickOut}>\r\n            <div className={\"modal_container\"} style={ModalWidth ? {width: ModalWidth} : undefined} onClick={e => e.stopPropagation()}>\r\n                <div className=\"modal_title\">\r\n                    <span className={\"modal_close_btn\"} onClick={CloseModal}>\r\n                        <IconContext.Provider value={{size: 16, color: \"#939393\"}}>\r\n                            <IoMdCloseCircle/>\r\n                        </IconContext.Provider>\r\n                    </span>\r\n                    <p>{title}</p>\r\n                </div>\r\n\r\n                {/*Doc: https://reactjs.org/docs/jsx-in-depth.html*/}\r\n                <div style={{\r\n                    maxHeight: '95vh',\r\n                    overflowY: 'auto',\r\n                    overflowX: 'auto',\r\n                    padding: '0 10px',\r\n                }}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ERROR, LOADED, LOADING} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {\r\n    ADD_PRO_TO_OBJECT, BASE_URL, DELETE_OBJECT, EXPORT_DATA,\r\n    GET_LIST_PRO_BY_OBJ_ID,\r\n    GET_PRO_BY_OBJ_ID, GET_TEMPLATE, INSERT_OBJECT, INSERT_OBJECT_EXCEL,\r\n    LIST_OBJECT, LIST_PROPERTY,\r\n    UPDATE_PRO_VALUE,\r\n    WEB_BASE_NAME\r\n} from \"../API_URL\";\r\nimport {IconContext} from \"react-icons\";\r\nimport {\r\n    BiAddToQueue,\r\n    FaRegTimesCircle,\r\n    FaRegWindowClose,\r\n    MdOutlineSave,\r\n    RiFunctionLine,\r\n    SiMicrosoftexcel,\r\n    HiDocumentReport\r\n} from \"react-icons/all\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Modal from \"../Modal\";\r\nimport Select from \"react-select\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction ObjectA(props) {\r\n    const ADD_PROPERTY      = 1;\r\n    const ADD_OBJECT        = 2;\r\n    const CREATE_OBJ_EXCEL  = 3;\r\n    const UPDATE_OBJ_EXCEL  = 4;\r\n    const DELETE_OBJ_EXCEL  = 5;\r\n    const {_title, _obj_type_id, _obj_type_name}    = props;\r\n    const dispatch                                  = useDispatch();\r\n    const [DetailData, setDetailData]               = useState({obj_id: -1, obj_name: \"\", data: []});\r\n    const [ObjectData, setObjectData]               = useState([]);\r\n    const [ShowAppBox, setShowAppBox]               = useState(false);\r\n    const [ModalData, setModalData]                 = useState({mode: -1, data: {}, show: false, title: \"no title\"});\r\n    const [ModalSelectData, setModalSelectData]     = useState(null);\r\n    const [selectedFile, setSelectedFile]           = useState({uploaded: false, name: \"No file\", file: null});\r\n\r\n    const __FetchFunction = (URL, body, callback) => {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body),\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(URL, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    dispatch({type: LOADED})\r\n                    callback(result.msg, null);\r\n                } else if (result.code === 202) {\r\n                    setShowAppBox(false);\r\n                    const link = document.createElement('a');\r\n                    link.href = BASE_URL + result.msg;\r\n                    link.setAttribute(\"target\", \"_blank\");\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                    document.body.removeChild(link);\r\n                } else {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: result.msg\r\n                    });\r\n                    callback(null, result.msg);\r\n                    toast.error(result.msg);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                });\r\n                toast.error(e);\r\n            });\r\n    }\r\n\r\n    const ToggleApplicationBox = (e) => {\r\n        e.stopPropagation();\r\n        setShowAppBox(!ShowAppBox);\r\n    }\r\n\r\n    const SearchByObjectName = () => {\r\n\r\n    }\r\n    \r\n    const AddProperty = () => {\r\n        let BodyData = {\r\n          \"obj_id\": DetailData.obj_id\r\n        };\r\n        __FetchFunction(GET_LIST_PRO_BY_OBJ_ID, BodyData, function(response) {\r\n            let temp1 = [], temp2 = [];\r\n            for (let i of response.list_property) {\r\n                temp1.push({\r\n                    value: i.pro_id,\r\n                    label: i.pro_name,\r\n                    ...i\r\n                })\r\n            }\r\n            for (let i of response.list_property_assign) {\r\n                temp2.push({\r\n                    value: i.pro_id,\r\n                    label: i.pro_name,\r\n                    ...i\r\n                })\r\n            }\r\n            setModalSelectData(null);\r\n            setModalData({\r\n                ...ModalData,\r\n                show: true,\r\n                mode: ADD_PROPERTY,\r\n                data: {\r\n                    list_property: temp1,\r\n                    list_property_assign: temp2\r\n                },\r\n                title: `Add property to ${DetailData.obj_name}`\r\n            });\r\n        });\r\n    }\r\n\r\n    const ChangeProDataWithExcel = (mode = -1) => {\r\n        if (mode !== -1) {\r\n            setSelectedFile({\r\n                name: \"No file\",\r\n                uploaded: false,\r\n                file: null\r\n            });\r\n        }\r\n        if (mode === CREATE_OBJ_EXCEL) {\r\n            setModalData({\r\n                show: true,\r\n                title: \"Instruction to create object with Excel file\",\r\n                data: {},\r\n                mode: CREATE_OBJ_EXCEL\r\n            });\r\n        } else if (mode === UPDATE_OBJ_EXCEL) {\r\n            swal({\r\n                title: \"Developing features\",\r\n                text: `This features will coming soon. We're sorry about this problem!`,\r\n                icon: \"info\"\r\n            });\r\n            // setModalData({\r\n            //     show: true,\r\n            //     title: \"Instruction to update object with Excel file\",\r\n            //     data: {},\r\n            //     mode: UPDATE_OBJ_EXCEL\r\n            // });\r\n        }  else if (mode === DELETE_OBJ_EXCEL) {\r\n            swal({\r\n                title: \"Developing features\",\r\n                text: `This features will coming soon. We're sorry about this problem!`,\r\n                icon: \"info\"\r\n            });\r\n            // setModalData({\r\n            //     show: true,\r\n            //     title: \"Instruction to delete object with Excel file\",\r\n            //     data: {},\r\n            //     mode: DELETE_OBJ_EXCEL\r\n            // });\r\n        }\r\n    }\r\n\r\n    const CreateNewObject = () => {\r\n        let BodyData = {\r\n            \"obj_type_id\": _obj_type_id\r\n        }\r\n        __FetchFunction(LIST_PROPERTY, BodyData, function(response, err) {\r\n            let temp = [];\r\n            for (let i of response) {\r\n                temp.push({\r\n                    value: i.pro_id,\r\n                    label: i.pro_name,\r\n                    ...i\r\n                });\r\n            }\r\n            setModalSelectData(null);\r\n            setModalData({\r\n                show: true,\r\n                title: \"Create new object\",\r\n                data: {\r\n                    obj_name: \"\",\r\n                    obj_desc: \"\",\r\n                    obj_type_id: _obj_type_id,\r\n                    list_property: temp,\r\n                    list_property_assign: []\r\n                },\r\n                mode: ADD_OBJECT\r\n            })\r\n        });\r\n    }\r\n\r\n    const HandleClickOut = (e) => {\r\n        setModalData({\r\n            ...ModalData,\r\n            show: false\r\n        })\r\n    }\r\n\r\n    const SaveChangeObject = () => {\r\n        let HasErr = false;\r\n        for (let i of DetailData.data) {\r\n            if (i.match_regex === false) {\r\n                toast.error(`Value of ${i.pro_name} property is not match rule's regex!`);\r\n                HasErr = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!HasErr) {\r\n            let list_property = [];\r\n            for (let i of DetailData.data) {\r\n                list_property.push({\r\n                    \"obj_id\": i.obj_id,\r\n                    \"pro_id\": i.pro_id,\r\n                    \"pro_value\": i.pro_value\r\n                });\r\n            }\r\n            let BodyData = {\r\n                \"list_property\": list_property\r\n            }\r\n            __FetchFunction(UPDATE_PRO_VALUE, BodyData, function (response) {\r\n                toast.success(response);\r\n                GetObjectInfo(DetailData, 0);\r\n            });\r\n        }\r\n    }\r\n\r\n    const DeleteObjectA = () => {\r\n        swal({\r\n            title: \"DELETE\",\r\n            text: `Delete '${DetailData.obj_name}' will delete all object's property. Continue?`,\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true\r\n        }).then(val => {\r\n            if (val) {\r\n                let BodyData = {\r\n                    \"obj_id\": DetailData.obj_id\r\n                }\r\n                __FetchFunction(DELETE_OBJECT, BodyData, function(response, err) {\r\n                    if (err != null) return;\r\n                    GetListObject();\r\n                    toast.success(response);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const GetListObject = () => {\r\n        let BodyData = {\r\n            \"obj_type_id\": _obj_type_id\r\n        };\r\n        __FetchFunction(LIST_OBJECT, BodyData, function(response) {\r\n            for (let i of response) {\r\n                i.match_regex = true;\r\n            }\r\n            setObjectData(response);\r\n            if (response.length > 0) {\r\n                GetObjectInfo(response[0], 0);\r\n            }\r\n        });\r\n    }\r\n\r\n    const GetObjectInfo = (item, index = -1) => {\r\n        if (index > -1) {\r\n            const ObjectDataCopy = [...ObjectData];\r\n            ObjectDataCopy.map(function(obj, obj_index) {\r\n                obj.selected = (obj_index === index);\r\n            });\r\n            // setObjectData(ObjectDataCopy);\r\n        }\r\n        let BodyData = {\r\n            \"obj_id\": item.obj_id\r\n        };\r\n        __FetchFunction(GET_PRO_BY_OBJ_ID, BodyData, function (response) {\r\n            setDetailData({\r\n                obj_id: item.obj_id,\r\n                obj_name: item.obj_name,\r\n                data: response\r\n            });\r\n        });\r\n    }\r\n\r\n    const ChangeProValue = (e, index) => {\r\n        let CopyDetailData                  = [...DetailData.data];\r\n        let reg                             = new RegExp(CopyDetailData[index].rule_regex, \"g\");\r\n        CopyDetailData[index].pro_value     = e.target.value;\r\n        CopyDetailData[index].match_regex   = reg.test(e.target.value);\r\n        setDetailData({\r\n            ...DetailData,\r\n            CopyDetailData\r\n        });\r\n    }\r\n\r\n    const ChangeProperty = (item) => {\r\n        let tempArr = ModalData.data.list_property_assign;\r\n        let isAssigned = false;\r\n        for (let i of tempArr) {\r\n            if (i.pro_id === item.value) {\r\n                isAssigned = true;\r\n                break;\r\n            }\r\n        }\r\n        if (Array.isArray(tempArr) && !isAssigned) {\r\n            tempArr.push(item);\r\n            setModalData({\r\n                ...ModalData,\r\n                data: {\r\n                    ...ModalData.data,\r\n                    list_property_assign: tempArr\r\n                }\r\n            })\r\n            setModalSelectData(item);\r\n        }\r\n    }\r\n\r\n    const RemoveProperty = (item) => {\r\n        if (item.is_required === true) {\r\n            toast.error(\"Can not remove this property!\");\r\n            return;\r\n        }\r\n        let tempArr = ModalData.data.list_property_assign;\r\n        Array.isArray(tempArr) && tempArr.map(function(i, index) {\r\n            if (item.value === i.value) {\r\n                tempArr.splice(index, 1);\r\n            }\r\n        });\r\n        setModalData({\r\n            ...ModalData,\r\n            data: {\r\n                ...ModalData.data,\r\n                list_property_assign: tempArr\r\n            }\r\n        });\r\n    }\r\n\r\n    const UpdatePropertyOfObject = () => {\r\n        let ListNewProID = [];\r\n        for (let i of ModalData.data.list_property_assign) {\r\n            ListNewProID.push(i.value);\r\n        }\r\n        let BodyData = {\r\n            \"obj_id\": DetailData.obj_id,\r\n            \"list_pro_id\": ListNewProID,\r\n            \"obj_type_id\": _obj_type_id\r\n        }\r\n        __FetchFunction(ADD_PRO_TO_OBJECT, BodyData, function(response, err) {\r\n           GetObjectInfo(DetailData, 0);\r\n           setModalData({...ModalData, show: false});\r\n           toast.success(response);\r\n        });\r\n    }\r\n\r\n    const InsertObject = () => {\r\n        if (ModalData.data.obj_name.trim() === \"\") {\r\n            toast.error(\"Object needs a name!\");\r\n            return;\r\n        }\r\n        let tempArr = [];\r\n        for (let i of ModalData.data.list_property_assign) {\r\n            tempArr.push(i.value);\r\n        }\r\n        let BodyData = {\r\n            \"obj_type_id\": _obj_type_id,\r\n            \"obj_name\": ModalData.data.obj_name,\r\n            \"obj_desc\": ModalData.data.obj_desc,\r\n            \"list_pro_id\": tempArr\r\n        }\r\n        __FetchFunction(INSERT_OBJECT, BodyData, function(response) {\r\n            setModalData({\r\n                ...ModalData,\r\n                show: false\r\n            });\r\n            GetListObject();\r\n           toast.success(response);\r\n        });\r\n    }\r\n    \r\n    const GetTemplate = () => {\r\n        let BodyData = {\r\n            \"obj_type_id\": _obj_type_id\r\n        }\r\n        __FetchFunction(GET_TEMPLATE, BodyData, function (response) {\r\n            const link = document.createElement('a');\r\n            link.href = BASE_URL + response;\r\n            link.setAttribute(\"target\", \"_blank\");\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n    }\r\n\r\n    const UploadExcel = () => {\r\n        let URI = \"\";\r\n        if (selectedFile.file === null) {\r\n            toast.error(\"Choose a file!\");\r\n            return;\r\n        }\r\n\r\n        if (ModalData.mode === CREATE_OBJ_EXCEL) {\r\n            URI = INSERT_OBJECT_EXCEL;\r\n        } else if (ModalData.mode === UPDATE_OBJ_EXCEL) {\r\n            URI = \"\";\r\n        } else if (ModalData.mode === DELETE_OBJ_EXCEL) {\r\n            URI = \"\";\r\n        }\r\n\r\n        if (URI !== \"\") {\r\n            dispatch({\r\n                type: LOADING\r\n            });\r\n            let data = new FormData();\r\n            data.append(\"excel_file\", selectedFile.file);\r\n            data.append(\"obj_type_id\", _obj_type_id);\r\n\r\n            let requestOptions = {\r\n                method: 'POST',\r\n                body: data,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(URI, requestOptions)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    if (result.code === 200) {\r\n                        dispatch({\r\n                            type: LOADED,\r\n                            _msg: result.msg\r\n                        });\r\n                        GetListObject();\r\n                        toast.success(result.msg);\r\n                    } else {\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            _msg: result.msg\r\n                        });\r\n                        toast.error(result.msg);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        _msg: e\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    const ExportData = () => {\r\n        let BodyData = {\r\n            \"obj_type_id\": _obj_type_id\r\n        }\r\n      __FetchFunction(EXPORT_DATA, BodyData, function(response) {\r\n\r\n      });\r\n    }\r\n\r\n    const ChangeFiles = e => {\r\n        setSelectedFile({\r\n            ...selectedFile,\r\n            uploaded: true,\r\n            name: e.target.files[0].name,\r\n            file: e.target.files[0]\r\n        });\r\n    }\r\n\r\n    useEffect(function() {\r\n        document.title = _title + WEB_BASE_NAME;\r\n        GetListObject();\r\n    }, [_obj_type_id]);\r\n\r\n    return(\r\n        <div className=\"container\" onClick={() => setShowAppBox(false)}>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            <Modal\r\n                show={ModalData.show}\r\n                title={ModalData.title}\r\n                onClickOut={HandleClickOut}\r\n                CloseModal={_ => setModalData({...ModalData, show: false})}\r\n                WrapClass={\"modal_wrap\"}>\r\n\r\n                {\r\n                    ModalData.mode === CREATE_OBJ_EXCEL && (\r\n                        <>\r\n                            <div>\r\n                                <ol>\r\n                                    <li>Download template <span onClick={GetTemplate} style={{cursor: \"pointer\", textDecoration: \"underline\"}}>here</span></li>\r\n                                    <li>Fill value into Excel</li>\r\n                                    <li><label className=\"link_style\" htmlFor=\"upload_file\">Click here</label> to upload filled Excel</li>\r\n                                </ol>\r\n                                <input className=\"hide\" onChange={ChangeFiles} id=\"upload_file\" type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\r\n                                {selectedFile.file !== null ? <span className=\"margin-left-5\">File <span className={\"bold\"}>{selectedFile.name}</span> is selected</span> : <span className=\"margin-left-5\" style={{fontStyle: \"italic\"}}>No file selected!</span>}<br/>\r\n                                <span style={{fontStyle: \"italic\", color: \"red\", marginTop: '10px', display: \"block\"}}>* Download new template whenever creating object because list property of {_obj_type_name.toLowerCase()} can be changed in setting</span>\r\n                                <span style={{fontStyle: \"italic\", color: \"red\"}}>* If you want to remove a property away from object, insert '#' character to this property cell</span>\r\n                            </div>\r\n                            <div className={\"margin-top-25\"}>\r\n                                <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                                <button className={\"btn theme_blue pull-right margin-right-10\"} onClick={UploadExcel}>Upload</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    (ModalData.mode === UPDATE_OBJ_EXCEL) && (\r\n                        <>\r\n                            <div>\r\n                                <ol>\r\n                                    <li><label className=\"link_style\" htmlFor=\"upload_file\">Click here</label> to upload Excel</li>\r\n                                </ol>\r\n                                <input className=\"hide\" onChange={ChangeFiles} id=\"upload_file\" type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\r\n                                {selectedFile.file !== null ? <span className=\"margin-left-5\">File <span className={\"bold\"}>{selectedFile.name}</span> is selected</span> : <span className=\"margin-left-5\" style={{fontStyle: \"italic\"}}>No file selected!</span>}<br/>\r\n                            </div>\r\n                            <div className={\"margin-top-25\"}>\r\n                                <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                                <button className={\"btn pull-right margin-right-10 \" + (ModalData.mode === UPDATE_OBJ_EXCEL ? \"theme_green\" : \"theme_red\")} onClick={UploadExcel}>Upload</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    ModalData.mode === DELETE_OBJ_EXCEL && (\r\n                        <>\r\n                            <div>\r\n                                <span className={\"err_msg margin-bottom-10\"}>* System will delete all object in {_obj_type_name} depend on 'Object ID' column in Excel file and CAN NOT recover. Please be careful!</span>\r\n                                <ol>\r\n                                    <li><label className=\"link_style\" htmlFor=\"upload_file\">Click here</label> to upload Excel</li>\r\n                                </ol>\r\n                                <input className=\"hide\" onChange={ChangeFiles} id=\"upload_file\" type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\r\n                                {selectedFile.file !== null ? <span className=\"margin-left-5\">File <span className={\"bold\"}>{selectedFile.name}</span> is selected</span> : <span className=\"margin-left-5\" style={{fontStyle: \"italic\"}}>No file selected!</span>}<br/>\r\n                            </div>\r\n                            <div className={\"margin-top-25\"}>\r\n                                <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                                <button className={\"btn pull-right margin-right-10 \" + (ModalData.mode === UPDATE_OBJ_EXCEL ? \"theme_green\" : \"theme_red\")} onClick={UploadExcel}>Upload</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                {ModalData.mode === ADD_OBJECT && (\r\n                    <div style={{\r\n                        minHeight: '60vh',\r\n                        minWidth: '60vw',\r\n                    }}>\r\n                        <small className={\"err_msg\"}>* {_obj_type_name} has a lot of required property that will be add automatic when you create object!</small>\r\n                        <small className={\"err_msg margin-top-5\"}>* Required property CAN NOT removed by manually!</small>\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor={\"_insert_object_name\"}>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Object's name:</span>\r\n                            </label>\r\n                            <input className={\"form-control\"} id={\"_insert_object_name\"} placeholder={\"Type a name...\"} value={ModalData.data.obj_name} onChange={e => {setModalData({\r\n                                ...ModalData,\r\n                                data: {\r\n                                    ...ModalData.data,\r\n                                    obj_name: e.target.value\r\n                                }\r\n                            })}}/>\r\n                        </div>\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor={\"_insert_object_desc\"}>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Description:</span>\r\n                            </label>\r\n                            <input className={\"form-control\"} id={\"_insert_object_desc\"} placeholder={\"Description\"} value={ModalData.data.obj_desc} onChange={e => {setModalData({\r\n                                ...ModalData,\r\n                                data: {\r\n                                    ...ModalData.data,\r\n                                    obj_desc: e.target.value\r\n                                }\r\n                            })}}/>\r\n                        </div>\r\n                        <div className=\"margin-top-20 margin-bottom-20\">\r\n                            <label>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Select property:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={ModalData.data.list_property}\r\n                                value={ModalSelectData}\r\n                                onChange={ChangeProperty}\r\n                                placeholder={\"Select a property\"}\r\n                                noOptionsMessage={`No property is assigned to ${_obj_type_name}`}\r\n                            />\r\n                        </div>\r\n\r\n                        <div>\r\n                        {Array.isArray(ModalData.data.list_property_assign) && ModalData.data.list_property_assign.length > 0 && (\r\n                            <table className=\"nice_theme margin-top-20\" style={{\r\n                                minWidth: \"650px\"\r\n                            }}>\r\n                                <thead className=\"text-center\">\r\n                                <tr>\r\n                                    <th>Index</th>\r\n                                    <th>Property</th>\r\n                                    <th>Remove</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    Array.isArray(ModalData.data.list_property_assign) && ModalData.data.list_property_assign.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={item.id}>\r\n                                                <td className=\"text-center\">{index+1}</td>\r\n                                                <td className=\"bold\">{item.pro_name}</td>\r\n                                                <td className=\"text-center\">{\r\n                                                    item.is_required === false ? (\r\n                                                            <span onClick={_ => RemoveProperty(item)}>\r\n                                                            <IconContext.Provider value={{color: \"red\", size: \"20\"}} >\r\n                                                                <FaRegTimesCircle/>\r\n                                                            </IconContext.Provider>\r\n                                                        </span>\r\n                                                        ) :\r\n                                                        (<span>Required</span>)\r\n                                                }</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                            <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                            <button className={\"btn theme_green pull-right margin-right-10\"} onClick={InsertObject}>Create</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                \r\n                {ModalData.mode === ADD_PROPERTY && (\r\n                    <div style={{\r\n                        minHeight: '60vh',\r\n                        minWidth: '60vw',\r\n                    }}>\r\n                        <div className={\"margin-top-20\"}>\r\n                            <label>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Select property:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={ModalData.data.list_property}\r\n                                value={ModalSelectData}\r\n                                onChange={ChangeProperty}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            {Array.isArray(ModalData.data.list_property_assign) && ModalData.data.list_property_assign.length > 0 && (\r\n                                <table className=\"nice_theme margin-top-20\" style={{\r\n                                    minWidth: \"650px\"\r\n                                }}>\r\n                                    <thead className=\"text-center\">\r\n                                    <tr>\r\n                                        <th>Index</th>\r\n                                        <th>Property</th>\r\n                                        <th>Remove</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {\r\n                                        Array.isArray(ModalData.data.list_property_assign) && ModalData.data.list_property_assign.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={item.id}>\r\n                                                    <td className=\"text-center\">{index+1}</td>\r\n                                                    <td className=\"bold\">{item.pro_name}</td>\r\n                                                    <td className=\"text-center\">{\r\n                                                        item.is_required === false ? (\r\n                                                                <span onClick={_ => RemoveProperty(item)}>\r\n                                                                    <IconContext.Provider value={{color: \"red\", size: \"20\"}} >\r\n                                                                        <FaRegTimesCircle/>\r\n                                                                    </IconContext.Provider>\r\n                                                                </span>\r\n                                                            ) :\r\n                                                            (<span>Required</span>)\r\n                                                    }</td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    </tbody>\r\n                                </table>\r\n                            )}\r\n                            <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                            <button className={\"btn theme_yellow pull-right margin-right-10\"} onClick={UpdatePropertyOfObject}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Modal>\r\n\r\n            <div className=\"box-style\" style={{height: \"calc(100% - 40px)\", padding: '20px', display: 'flex', position: 'relative'}}>\r\n\r\n                <div style={{width: '300px', height: 'calc(100% - 30px)', display: 'inline-block'}}>\r\n                    <input className=\"form-control\" disabled={true} onKeyDown={SearchByObjectName} placeholder={`Find by ${_obj_type_name.toLowerCase()} name ...`}/>\r\n                    <div className=\"list-container margin-top-10\">\r\n                        {Array.isArray(ObjectData) && ObjectData.length === 0 ? (\r\n                            <div>\r\n                                <span>No object!</span>\r\n                            </div>\r\n                        ) : Array.isArray(ObjectData) && ObjectData.map((item, index) => {\r\n                            return (\r\n                                <div\r\n                                    key={index}\r\n                                    className={item.selected === true ? \"list-item theme_green\" : \"list-item\"}\r\n                                    onClick={_ => GetObjectInfo(item, index)}>\r\n                                    {item.obj_name}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {Array.isArray(ObjectData) && ObjectData.length > 0 &&\r\n                    (\r\n                        <div style={{\r\n                            width: 'calc(100% - 350px)',\r\n                            height: 'calc(100% - 70px)',\r\n                            marginLeft: '50px',\r\n                            display: 'inline-block',\r\n                            overflow: 'auto',\r\n                            padding: '10px'}}>\r\n                            <div style={{\r\n                                width: \"100%\",\r\n                                display: \"block\",\r\n                                textAlign: \"right\",\r\n                                textTransform: \"capitalize\"\r\n                            }}>\r\n                                <h2>{_obj_type_name.toLowerCase()} : {DetailData.obj_name}</h2>\r\n                            </div>\r\n                            {\r\n                                DetailData.data.map(function(item, index) {\r\n                                    return (\r\n                                        <div className=\"margin-top-20\" key={index}>\r\n                                            <label htmlFor={\"_pro_item_\" + index}>\r\n                                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>{item.pro_name.toLowerCase()}:</span>\r\n                                            </label>\r\n                                            <input className={(item.match_regex === false) ? \"form-control form-control-err\" : \"form-control\"} placeholder={(item.pro_desc !== \"\") ? item.pro_desc : \"Fill value\"} id={\"_pro_item_\" + index} value={item.pro_value} onChange={e => ChangeProValue(e, index)}/>\r\n                                            <small className=\"italic\">(Created: {item.created_at}, Last update: {item.updated_at})</small><br/>\r\n                                            {item.match_regex === false && (<small style={{color: \"red\"}}>Not match rule of {item.pro_name.toLowerCase()}!</small>)}\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <button className=\"btn pull-right theme_red margin-left-10\" onClick={DeleteObjectA}>\r\n                                    <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                        <FaRegWindowClose/>\r\n                                    </IconContext.Provider>\r\n                                    &nbsp;Delete\r\n                                </button>\r\n                                <button className=\"btn pull-right theme_cyan\" onClick={SaveChangeObject}>\r\n                                    <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                        <MdOutlineSave/>\r\n                                    </IconContext.Provider>\r\n                                    &nbsp;Save change\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div onClick={e => e.stopPropagation()}>\r\n                        <span className=\"fab-button\" onClick={ToggleApplicationBox}>\r\n                            <IconContext.Provider value={{size: 25, color: 'white'}}>\r\n                                <RiFunctionLine/>\r\n                            </IconContext.Provider>\r\n                        </span>\r\n\r\n                        <div className={ShowAppBox ? \"application-box flex\" : \"application-box\"}>\r\n                            <button className=\"btn theme_cyan margin-10\" onClick={ExportData}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <HiDocumentReport/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Export all {_obj_type_name} data</button>\r\n\r\n                            <button className=\"btn theme_orange margin-10\" onClick={_ => ChangeProDataWithExcel(CREATE_OBJ_EXCEL)}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <SiMicrosoftexcel/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Create object (Excel)</button>\r\n\r\n                            <button className=\"btn theme_orange margin-10\" onClick={_ => ChangeProDataWithExcel(UPDATE_OBJ_EXCEL)}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <SiMicrosoftexcel/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Update object (Excel)</button>\r\n\r\n                            <button className=\"btn theme_orange margin-10\" onClick={_ => ChangeProDataWithExcel(DELETE_OBJ_EXCEL)}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <SiMicrosoftexcel/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Delete object (Excel)</button>\r\n\r\n                            <button className=\"btn theme_green700 margin-10\" onClick={CreateNewObject}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <BiAddToQueue/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Create object (Manual)</button>\r\n\r\n                            <button className=\"btn theme_brown margin-10\" onClick={AddProperty}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <BiAddToQueue/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Add property to {DetailData.obj_name}</button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ObjectA;","export default __webpack_public_path__ + \"static/media/sidebar_bg.4093c966.png\";","export default __webpack_public_path__ + \"static/media/vnpt.ac4800f4.svg\";","import {Menu, MenuItem, ProSidebar, SidebarContent, SidebarFooter, SidebarHeader} from \"react-pro-sidebar\";\r\nimport * as Icons from \"react-icons/all\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SideBarBackGroundImage from './sidebar_bg.png';\r\nimport VNPTIcon from './vnpt.svg';\r\nimport {IconContext} from \"react-icons/lib\";\r\n\r\n// ProSidebar: https://www.npmjs.com/package/react-pro-sidebar\r\n\r\nfunction SideBarCustom(props) {\r\n    const {list_item} = props;\r\n    const [SideBarClosing, setSideBarState] = useState(true);\r\n    const getWindowDimensions = () => {\r\n        const { innerWidth: width, innerHeight: height } = window;\r\n        return { width, height };\r\n    }\r\n    const [windowsSize, setWindowSize] = useState(getWindowDimensions());\r\n\r\n    const DynamicIcon = (IconName) => {\r\n        //Doc: https://stackoverflow.com/questions/65576629/how-to-render-react-icon-depending-on-string-from-database\r\n        const IconComponent = Icons[IconName];\r\n        if (!IconComponent) { // Return a default one\r\n            return <Icons.FaBeer />;\r\n        }\r\n        return <IconComponent />;\r\n    }\r\n\r\n    useEffect(function() {\r\n        function handleResize()  {\r\n            setWindowSize(getWindowDimensions());\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return function() {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <ProSidebar\r\n            image={SideBarBackGroundImage}\r\n            breakPoint=\"md\"\r\n            collapsed={SideBarClosing}\r\n            style={{\r\n                \"height\": windowsSize.height + 'px',\r\n                \"display\": \"inline-block\",\r\n                \"position\": \"fixed\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\"\r\n            }}\r\n        >\r\n            <SidebarHeader>\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        padding: '24px',\r\n                        textTransform: 'uppercase',\r\n                        fontWeight: 'bold',\r\n                        fontSize: 18,\r\n                        letterSpacing: '1px',\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis',\r\n                        whiteSpace: 'nowrap',\r\n                        color: \"#e5e5e5\"\r\n                    }}\r\n                >\r\n                    <span onClick={() => setSideBarState(!SideBarClosing)}>\r\n                        <IconContext.Provider value={{\"size\": \"30\"}}>\r\n                            {SideBarClosing === false ? <Icons.IoIosArrowDropleftCircle/> : <Icons.IoIosArrowDroprightCircle/>}\r\n                        </IconContext.Provider>\r\n                    </span>\r\n                    {SideBarClosing === false && <span style={{display: \"inline-block\", \"marginLeft\": \"10px\"}}>IP Manager</span>}\r\n                </div>\r\n            </SidebarHeader>\r\n            <SidebarContent>\r\n                    {\r\n                        list_item.map(function(item, index) {\r\n                            return(\r\n                                <Menu key={`sidebar_item_${index}`} iconShape=\"circle\">\r\n                                    <MenuItem icon={DynamicIcon(item.icon)}>{item.name}<Link onClick={() => setSideBarState(true)} to={item.path}/></MenuItem>\r\n                                </Menu>\r\n                            )\r\n                        })\r\n                    }\r\n            </SidebarContent>\r\n            <SidebarFooter style={{ textAlign: 'center' }}>\r\n                <div\r\n                    style={{\r\n                        padding: '20px 24px',\r\n                    }}>\r\n                    <img alt={\"VNPT Icon\"} width={\"30\"} src={VNPTIcon}/>\r\n                </div>\r\n            </SidebarFooter>\r\n        </ProSidebar>\r\n    );\r\n}\r\n\r\nexport default SideBarCustom;","import {ERROR, LOADED} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {IconContext} from \"react-icons\";\r\nimport {BiAddToQueue, FaRegWindowClose, MdOutlineSave, RiFunctionLine} from \"react-icons/all\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {\r\n    DELETE_PROPERTY,\r\n    Get_PRO_INFO, INSERT_PROPERTY,\r\n    LIST_OBJ_TYPE,\r\n    LIST_PROPERTY,\r\n    LIST_RULES,\r\n    UPDATE_PROPERTY,\r\n    WEB_BASE_NAME\r\n} from \"../API_URL\";\r\nimport Select from \"react-select\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport Modal from \"../Modal\";\r\n\r\nfunction Property(props) {\r\n    const CREATE_PROPERTY = 1;\r\n    const {_title} = props;\r\n    const dispatch = useDispatch();\r\n    const [ShowAppBox, setShowAppBox]           = useState(false);\r\n    const [PropertyData, setPropertyData]       = useState([]);\r\n    const [ListObjType, setListObjType]         = useState([]);\r\n    const [ListRule, setListRule]               = useState([]);\r\n    const [DetailData, setDetailData]           = useState({});\r\n    const [ModalSelectData, setModalSelectData] = useState(null);\r\n    const [ModalSelectData1, setModalSelectData1] = useState(null);\r\n    const [ModalData, setModalData]             = useState({mode: -1, data: {list_property: [], list_property_assign: []}, show: false, title: \"no title\"});\r\n\r\n    const __FetchFunction = (URL, body, callback, err_cb) => {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body),\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(URL, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    dispatch({type: LOADED})\r\n                    callback(result.msg, null);\r\n                } else {\r\n                    callback(null, result.msg);\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: result.msg\r\n                    });\r\n                    toast.error(result.msg);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n            });\r\n    }\r\n\r\n    const SearchByPropertyName = (e) => {\r\n\r\n    }\r\n\r\n    const CreateProperty = () => {\r\n        setModalSelectData(null);\r\n        setModalSelectData1(null);\r\n        setModalData({\r\n            show: true,\r\n            data: {\r\n                \"pro_name\": \"\",\r\n                \"pro_desc\": \"\",\r\n                \"rule_id\": -1,\r\n                \"list_obj_type\": []\r\n            },\r\n            title: \"Create property\",\r\n            mode: CREATE_PROPERTY\r\n        });\r\n    }\r\n\r\n    const ChangeRequired = (e, index) => {\r\n        let CloneDetailData = {...DetailData};\r\n        CloneDetailData.ListObjType[index].is_required = !DetailData.ListObjType[index].is_required;\r\n        setDetailData(CloneDetailData);\r\n    }\r\n\r\n    const ChangeRequiredInModal = (index) => {\r\n        let CloneDetailData = [...ModalSelectData1];\r\n        CloneDetailData[index].is_required = !ModalSelectData1[index].is_required;\r\n        setModalSelectData1(CloneDetailData);\r\n    }\r\n\r\n    const UpdateProperty = () => {\r\n        let BodyData = {\r\n            \"pro_id\": DetailData.pro_id,\r\n            \"pro_name\": DetailData.pro_name,\r\n            \"pro_desc\": DetailData.pro_desc,\r\n            \"rule_id\": DetailData.rule.value,\r\n            \"list_obj_type\": []\r\n        };\r\n        for (let i of DetailData.ListObjType) {\r\n            BodyData.list_obj_type.push({\r\n                \"obj_type_id\": i.value,\r\n                \"is_required\": i.is_required\r\n            });\r\n        }\r\n        __FetchFunction(UPDATE_PROPERTY, BodyData, function(response) {\r\n            __FetchFunction(LIST_PROPERTY, undefined, function(resp, err) {\r\n                if (err !== null) {\r\n                    setPropertyData(resp);\r\n                    GetPropertyInfo(resp[0]);\r\n                } else {\r\n                    GetPropertyInfo(DetailData);\r\n                }\r\n            });\r\n            toast.success(response);\r\n        });\r\n    }\r\n\r\n    const ChangeProperty = (item) => {\r\n        setModalSelectData(item);\r\n    }\r\n\r\n    const ChangeObjectTypeinModal = (item) => {\r\n      setModalSelectData1(item);\r\n    }\r\n\r\n    const InsertProperty = () => {\r\n        if (ModalData.data.pro_name.trim() === \"\") {\r\n            toast.error(\"Property needs a name!\");\r\n            return;\r\n        }\r\n        if (ModalSelectData === null) {\r\n            toast.error(\"Select a rule for property!\");\r\n            return;\r\n        }\r\n\r\n        if (ModalSelectData1 === null) {\r\n            toast.error(\"Select a least an object type!\");\r\n            return;\r\n        }\r\n\r\n      let BodyData = {\r\n          \"pro_name\": ModalData.data.pro_name,\r\n          \"pro_desc\": ModalData.data.pro_desc,\r\n          \"rule_id\": ModalSelectData.value,\r\n          \"list_obj_type\": []\r\n      }\r\n        for (let i of ModalSelectData1) {\r\n            BodyData.list_obj_type.push({\r\n                obj_type_id: i.value,\r\n                is_required: i.is_required\r\n            });\r\n        }\r\n      __FetchFunction(INSERT_PROPERTY, BodyData, function(response, err) {\r\n          if (err !== null) return;\r\n          setModalData({\r\n              ...ModalData,\r\n              show: false\r\n          });\r\n          GetListProperty();\r\n          toast.success(response);\r\n      });\r\n    }\r\n\r\n    const DeleteProperty = () => {\r\n        let BodyData = {\r\n            \"pro_id\": DetailData.pro_id\r\n        };\r\n        __FetchFunction(DELETE_PROPERTY, BodyData, function(response) {\r\n            __FetchFunction(LIST_PROPERTY, undefined, function(resp) {\r\n                setPropertyData(resp);\r\n                GetPropertyInfo(resp[0]);\r\n            });\r\n            toast.success(response);\r\n        });\r\n    }\r\n\r\n    const GetPropertyInfo = (item) => {\r\n        let BodyData = {\r\n            \"pro_id\": item.pro_id\r\n        };\r\n        __FetchFunction(Get_PRO_INFO, BodyData, function (response) {\r\n            let TempItem = {...item};\r\n            TempItem.ListObjType = [];\r\n            for (let i of response) {\r\n                TempItem.ListObjType.push({\r\n                    value: i.obj_type_id,\r\n                    label: i.obj_type_name,\r\n                    is_required: i.is_required\r\n                });\r\n            }\r\n            for (let i of ListRule) {\r\n                if (i.value === TempItem.rule_id) {\r\n                    TempItem.rule = i;\r\n                    break;\r\n                }\r\n            }\r\n            setDetailData(TempItem);\r\n        });\r\n    }\r\n\r\n    const ChangeObjType = (item) => {\r\n        console.log(item);\r\n        setDetailData({\r\n            ...DetailData,\r\n            ListObjType: item\r\n        });\r\n    }\r\n\r\n    const ChangeRule = (item) => {\r\n        setDetailData({\r\n            ...DetailData,\r\n            rule: item\r\n        })\r\n    }\r\n\r\n    const ToggleApplicationBox = (e) => {\r\n        e.stopPropagation();\r\n        setShowAppBox(!ShowAppBox);\r\n    }\r\n\r\n    const HandleClickOut = (e) => {\r\n        setModalData({\r\n            ...ModalData,\r\n            show: false\r\n        })\r\n    }\r\n\r\n    const GetListProperty = () => {\r\n        __FetchFunction(LIST_PROPERTY, undefined, function(response) {\r\n            let result = [];\r\n            for (let i of response) {\r\n                i.ListObjType = [];\r\n                result.push(i);\r\n            }\r\n            setPropertyData(result);\r\n        });\r\n    }\r\n\r\n    useEffect(function() {\r\n        document.title = _title + WEB_BASE_NAME;\r\n        let ListAPI = [{\r\n            url: LIST_PROPERTY,\r\n            requestOptions: {\r\n                method: 'POST',\r\n                redirect: 'follow'\r\n            }\r\n        }, {\r\n            url: LIST_OBJ_TYPE,\r\n            requestOptions: {\r\n                method: 'POST',\r\n                redirect: 'follow'\r\n            }\r\n        }, {\r\n            url: LIST_RULES,\r\n            requestOptions: {\r\n                method: 'POST',\r\n                redirect: 'follow'\r\n            }\r\n        }];\r\n\r\n        Promise.all(ListAPI.map((item => fetch(item.url, item.requestOptions))))\r\n            .then(responses => Promise.all(responses.map(resp => resp.json())))\r\n            .then(resp => {\r\n                let HasErr = false;\r\n                for (let i of resp) {\r\n                    if (i.code !== 200) {\r\n                        HasErr = true;\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            msg: resp.msg\r\n                        });\r\n                    }\r\n                }\r\n                if (!HasErr) {\r\n                    let result = [];\r\n                    for (let i of resp[0].msg) {\r\n                        i.ListObjType = [];\r\n                        result.push(i);\r\n                    }\r\n                    setPropertyData(result);\r\n                    GetPropertyInfo(result[0]);\r\n                    let TempArr = [];\r\n                    for (let i of resp[1].msg) {\r\n                        TempArr.push({\r\n                           value: i.obj_type_id,\r\n                           label: i.obj_type_name,\r\n                            is_required: false\r\n                        });\r\n                    }\r\n                    setListObjType(TempArr);\r\n                    TempArr = [];\r\n                    for (let i of resp[2].msg) {\r\n                        TempArr.push({\r\n                            value: i.rule_id,\r\n                            label: i.rule_name\r\n                        });\r\n                    }\r\n                    setListRule(TempArr);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                });\r\n            });\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"container\" onClick={() => setShowAppBox(false)}>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={4000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            <Modal\r\n                show={ModalData.show}\r\n                title={ModalData.title}\r\n                onClickOut={HandleClickOut}\r\n                CloseModal={_ => setModalData({...ModalData, show: false})}\r\n                WrapClass={\"modal_wrap\"}>\r\n                {ModalData.mode === CREATE_PROPERTY && (\r\n                    <>\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor={\"_insert_property_name\"}>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Property's name:</span>\r\n                            </label>\r\n                            <input className={\"form-control\"} id={\"_insert_property_name\"} placeholder={\"Type a name...\"} value={ModalData.data.pro_name} onChange={e => {setModalData({\r\n                                ...ModalData,\r\n                                data: {\r\n                                    ...ModalData.data,\r\n                                    pro_name: e.target.value\r\n                                }\r\n                            })}}/>\r\n                        </div>\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor={\"_insert_property_desc\"}>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Description:</span>\r\n                            </label>\r\n                            <input className={\"form-control\"} id={\"_insert_property_desc\"} placeholder={\"Description\"} value={ModalData.data.pro_desc} onChange={e => {setModalData({\r\n                                ...ModalData,\r\n                                data: {\r\n                                    ...ModalData.data,\r\n                                    pro_desc: e.target.value\r\n                                }\r\n                            })}}/>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20 margin-bottom-20\">\r\n                            <label>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Select object type:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={ListObjType}\r\n                                value={ModalSelectData1}\r\n                                onChange={ChangeObjectTypeinModal}\r\n                                isMulti\r\n                                placeholder={\"Select a object type\"}\r\n                                noOptionsMessage={\"No object type\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20 margin-bottom-20\">\r\n                            <label>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Select rule:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={ListRule}\r\n                                value={ModalSelectData}\r\n                                onChange={ChangeProperty}\r\n                                placeholder={\"Select a rule\"}\r\n                                noOptionsMessage={\"No rule\"}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            Array.isArray(ModalSelectData1) && ModalSelectData1.map((item, index) => {\r\n                                return (\r\n                                    <div className={\"margin-top-20\"} key={index}>\r\n                                        <input id={\"__cb_modal\" + index} type={\"checkbox\"} checked={item.is_required} onChange={e => ChangeRequiredInModal(index)}/>\r\n                                        <label htmlFor={\"__cb_modal\" + index} className={\"margin-left-5\"}>This property is required in {item.label}</label>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                        <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                        <button className={\"btn theme_green pull-right margin-right-10\"} onClick={InsertProperty}>Create</button>\r\n                    </>\r\n                )}\r\n            </Modal>\r\n\r\n            <div className=\"box-style\" style={{height: \"calc(100% - 40px)\", padding: '20px', display: 'flex', position: 'relative'}}>\r\n\r\n                <div style={{width: '300px', height: 'calc(100% - 30px)', display: 'inline-block'}}>\r\n                    <input className=\"form-control\" disabled={true} onKeyDown={SearchByPropertyName} placeholder=\"Find by property's name ...\"/>\r\n                    <div className=\"list-container margin-top-10\">\r\n                        {PropertyData.length === 0 ? (\r\n                            <div>\r\n                                <span>No property founded!</span>\r\n                            </div>\r\n                        ) : PropertyData.map((item, index) => {\r\n                            return (\r\n                                <div\r\n                                    key={index}\r\n                                    className=\"list-item\"\r\n                                    onClick={_ => GetPropertyInfo(item)}>\r\n                                    {item.pro_name}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{\r\n                    width: 'calc(100% - 350px)',\r\n                    height: 'calc(100% - 70px)',\r\n                    marginLeft: '50px',\r\n                    marginTop: '50px',\r\n                    display: 'inline-block',\r\n                    overflow: 'auto',\r\n                    padding: '10px'}}>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"name\">\r\n                            <span className=\"bold\">Property's name:</span>\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"name\" value={DetailData.pro_name} onChange={e => {\r\n                            setDetailData({\r\n                                ...DetailData,\r\n                                pro_name: e.target.value\r\n                            })\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"desc\">\r\n                            <span className=\"bold\">Property's description:</span>\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"desc\" value={DetailData.pro_desc} onChange={e => {\r\n                            setDetailData({\r\n                                ...DetailData,\r\n                                pro_desc: e.target.value\r\n                            })\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"type\">\r\n                            <span className=\"bold\">Object type:</span>\r\n                        </label>\r\n                        <Select\r\n                            id=\"type\"\r\n                            isMulti\r\n                            value={DetailData.ListObjType}\r\n                            options={ListObjType}\r\n                            onChange={ChangeObjType}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"rule\">\r\n                            <span className=\"bold\">Rule:</span>\r\n                        </label>\r\n                        <Select\r\n                            id=\"rule\"\r\n                            value={DetailData.rule}\r\n                            options={ListRule}\r\n                            onChange={ChangeRule}\r\n                        />\r\n                    </div>\r\n\r\n                    {\r\n                        DetailData.hasOwnProperty(\"ListObjType\") && DetailData.ListObjType.map((item, index) => {\r\n                            return (\r\n                                <div className={\"margin-top-20\"} key={index}>\r\n                                    <input id={\"__cb\" + index} type={\"checkbox\"} checked={item.is_required} onChange={e => ChangeRequired(e, index)}/>\r\n                                    <label htmlFor={\"__cb\" + index} className={\"margin-left-5\"}>'{DetailData.pro_name}' is required in {item.label}</label>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <small className=\"italic\">(Created: {DetailData.created_at}, Last update: {DetailData.updated_at})</small>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <button className=\"btn pull-right theme_red margin-left-10\" onClick={DeleteProperty}>\r\n                            <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                <FaRegWindowClose/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Delete\r\n                        </button>\r\n                        <button className=\"btn pull-right theme_cyan\" onClick={UpdateProperty}>\r\n                            <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                <MdOutlineSave/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Save change\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div onClick={e => e.stopPropagation()}>\r\n                    <span className=\"fab-button\" onClick={ToggleApplicationBox}>\r\n                        <IconContext.Provider value={{size: 25, color: 'white'}}>\r\n                            <RiFunctionLine/>\r\n                        </IconContext.Provider>\r\n                    </span>\r\n\r\n                    <div className={ShowAppBox ? \"application-box flex\" : \"application-box\"}>\r\n                        <button className=\"btn theme_green700 margin-10\" onClick={CreateProperty}>\r\n                            <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                <BiAddToQueue/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Create property</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Property;","import React, {useEffect, useState} from \"react\";\r\nimport {Route, BrowserRouter as Router, Switch, Redirect} from \"react-router-dom\";\r\nimport { FaHeart, BsCardList} from \"react-icons/all\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Rules from \"./components/Rules\";\r\nimport {LIST_OBJ_TYPE} from \"./components/API_URL\";\r\nimport {ERROR, LOADED} from \"./components/Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport ObjectA from \"./components/ObjectA\";\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport SideBarCustom from \"./components/ProSideBarCustom\";\r\nimport Property from \"./components/Property\";\r\n\r\nconst App = () => {\r\n    let ListSideBarItem = [];\r\n    const dispatch = useDispatch();\r\n    const [ListObjectType, setListObjectType] = useState([]);\r\n\r\n    useEffect(function() {\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(LIST_OBJ_TYPE, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    dispatch({type: LOADED});\r\n                    for (let i of result.msg) {\r\n                        ListSideBarItem.push({\r\n                            ...i,\r\n                            path: `/${i.obj_type_name.toLowerCase()}`,\r\n                            name: i.obj_type_name,\r\n                            autoRender: true\r\n                        });\r\n                    }\r\n                    ListSideBarItem.push({\r\n                        icon: \"BsCardList\",\r\n                        path: \"/rules\",\r\n                        name: \"Rules\",\r\n                        autoRender: false\r\n                    }, {\r\n                        icon: \"AiOutlinePropertySafety\",\r\n                        path: \"/property\",\r\n                        name: \"Property\",\r\n                        autoRender: false\r\n                    });\r\n                    setListObjectType(ListSideBarItem);\r\n                } else {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: result.msg[0]\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n            });\r\n    }, []);\r\n\r\n    return(\r\n        <Router>\r\n            <SideBarCustom list_item={ListObjectType}/>\r\n            <Switch>\r\n                {\r\n                    ListObjectType.map(function(item, index) {\r\n                        return (\r\n                            item.autoRender === true && (\r\n                                <Route exact path={item.path}>\r\n                                    <ObjectA _title={item.name} _obj_type_id={item.obj_type_id} _obj_type_name={item.obj_type_name}/>\r\n                                </Route>\r\n                            )\r\n                        )\r\n                    })\r\n                }\r\n\r\n                <Route exact path=\"/rules\">\r\n                    <Rules _title=\"Rules\"/>\r\n                </Route>\r\n\r\n                <Route exact path=\"/property\">\r\n                    <Property _title=\"Rules\"/>\r\n                </Route>\r\n\r\n                <Route>\r\n                    <NotFound _title=\"404\"/>\r\n                </Route>\r\n            </Switch>\r\n            <Redirect to={(Array.isArray(ListObjectType) && ListObjectType.length > 0) ? ListObjectType[0].path : \"/rules\"}/>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { CLOSE_SIDEBAR, OPEN_SIDEBAR, SELECT_ITEM } from './SideBarActionsDefinition';\r\n\r\n\r\nconst CLOSED = false;\r\nconst OPEN = true;\r\nconst initState = {\r\n    is_open: CLOSED,\r\n    _index: 0 //Index of current selected item\r\n};\r\n\r\nconst SideBarReducer = (state = initState, payload) => {\r\n    let { type } =  payload;\r\n    switch(type) {\r\n        case OPEN_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                is_open: OPEN\r\n            }\r\n\r\n        case CLOSE_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                is_open: CLOSED\r\n            }\r\n\r\n        case SELECT_ITEM:\r\n            return {\r\n                ...state,\r\n                is_open: CLOSED,\r\n                _index: payload.index\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default SideBarReducer;","import {ERROR, LOADING, LOADED, SUCCESS} from \"./StatusActionsDefinition\";\r\n\r\nconst initState = {\r\n    loading: true,\r\n    error: false,\r\n    _msg: \"\"\r\n}\r\n\r\nconst StatusReducer = (state = initState, payload) => {\r\n    const { type } = payload;\r\n    switch (type) {\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n                _msg: \"loading\"\r\n            }\r\n\r\n        case ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false,\r\n                _msg: payload._msg\r\n            }\r\n\r\n        case LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                _msg: \"\"\r\n            }\r\n\r\n        case SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                _msg: \"\"\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default StatusReducer;","import { combineReducers } from \"redux\";\r\nimport SideBarReducer from './ReducersAndActions/SideBar/SideBarReducer';\r\nimport StatusReducer from './ReducersAndActions/Status/StatusReducer';\r\n\r\nconst RootReducer = combineReducers({\r\n    SideBar: SideBarReducer,\r\n    Status: StatusReducer\r\n});\r\n\r\nexport default RootReducer;","import { createStore } from \"redux\";\r\nimport RootReducer from './RootReducer';\r\n\r\nconsole.log(process.env.NODE_ENV);\r\nlet store;\r\nif (process.env.NODE_ENV === \"development\") {\r\n    store = createStore(RootReducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n} else {\r\n    store = createStore(RootReducer);\r\n}\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport Store from './components/Redux/StoreRedux';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>,\r\n\r\n  <Provider store={Store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}