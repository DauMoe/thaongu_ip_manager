{"version":3,"sources":["components/Redux/ReducersAndActions/SideBar/SideBarActionsDefinition.js","components/API_URL.js","components/NotFound/index.js","components/Redux/ReducersAndActions/Status/StatusActionsDefinition.js","components/Modal/index.js","components/Rules/index.js","components/ObjectA/index.js","components/ProSideBarCustom/sidebar_bg.png","components/ProSideBarCustom/vnpt.svg","components/ProSideBarCustom/index.js","components/Property/index.js","components/Loading/index.js","App.js","reportWebVitals.js","components/Redux/ReducersAndActions/Status/StatusReducer.js","components/Redux/RootReducer.js","components/Redux/StoreRedux.js","index.js"],"names":["SELECT_ITEM","BASE_URL","process","WEB_BASE_NAME","GET_PRO_BY_OBJ_ID","OBJECT_URL","LIST_OBJ_TYPE","OBJECT_TYPE_URL","LIST_PROPERTY","PROPERTY_URL","LIST_RULES","RULES_URL","NotFound","props","_title","dispatch","useDispatch","useEffect","document","title","className","to","onClick","type","index","LOADING","LOADED","ERROR","SUCCESS","Modal","show","children","onClickOut","WrapClass","CloseModal","ModalWidth","style","width","undefined","e","stopPropagation","Provider","value","size","color","maxHeight","overflowY","overflowX","padding","Rules","useState","DetailData","setDetailData","showAppBox","setShowAppBox","rulesData","setRulesData","SearchBoxValue","setSearchBoxValue","mode","data","ModalData","setModalData","useSelector","state","Status","loading","error","_msg","notMatchRegex","testRegex","setTestRegex","__FetchFunction","URL","body","callback","dismiss","myHeaders","Headers","append","requestOptions","method","headers","JSON","stringify","redirect","fetch","then","res","json","result","code","msg","toast","catch","GetRuleInfo","item","GetListRule","response","length","ListAPI","url","Promise","all","map","responses","resp","results","HasErr","i","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","theme","draggable","pauseOnHover","_","minWidth","htmlFor","textTransform","id","placeholder","rule_name","onChange","target","rule_desc","rule_regex","trim","BodyData","success","height","display","onKeyDown","keyCode","Array","isArray","marginLeft","marginTop","overflow","pathname","regex","RegExp","test","created_at","updated_at","swal","text","icon","buttons","dangerMode","isConfirm","rule_id","ObjectA","_obj_type_id","_obj_type_name","obj_id","obj_name","ObjectData","setObjectData","ShowAppBox","ModalSelectData","setModalSelectData","uploaded","name","file","selectedFile","setSelectedFile","link","createElement","href","setAttribute","appendChild","click","removeChild","ChangeProDataWithExcel","GetListObject","cb","match_regex","GetObjectInfo","ObjectDataCopy","obj","obj_index","selected","reg","pro_value","ChangeProperty","tempArr","list_property_assign","isAssigned","pro_id","push","RemoveProperty","is_required","splice","UploadExcel","URI","FormData","ChangeFiles","files","cursor","textDecoration","accept","fontStyle","toLowerCase","minHeight","obj_desc","options","list_property","pro_name","ListNewProID","err","fontWeight","fontSize","temp1","temp2","label","pro_desc","CopyDetailData","ChangeProValue","val","temp","obj_type_id","SideBarCustom","list_item","SideBarClosing","setSideBarState","getWindowDimensions","window","innerWidth","innerHeight","windowsSize","setWindowSize","DynamicIcon","IconName","IconComponent","Icons","handleResize","addEventListener","removeEventListener","image","SideBarBackGroundImage","breakPoint","collapsed","alignItems","letterSpacing","textOverflow","whiteSpace","iconShape","path","textAlign","alt","src","VNPTIcon","Property","PropertyData","setPropertyData","ListObjType","setListObjType","ListRule","setListRule","ModalSelectData1","setModalSelectData1","err_cb","GetPropertyInfo","TempItem","obj_type_name","rule","GetListProperty","TempArr","isMulti","checked","CloneDetailData","ChangeRequiredInModal","list_obj_type","disabled","console","log","hasOwnProperty","ChangeRequired","Loading","App","ListSideBarItem","ListObjectType","setListObjectType","autoRender","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","StatusReducer","payload","RootReducer","combineReducers","store","createStore","ReactDOM","render","Store","getElementById"],"mappings":"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","file":"static/js/main.01a13bd1.chunk.js","sourcesContent":["export const OPEN_SIDEBAR = \"OPEN\";\r\nexport const CLOSE_SIDEBAR = \"CLOSE\";\r\nexport const SELECT_ITEM = \"SELECT_ITEM\";","export const BASE_URL               = process.env.REACT_APP_BASEURL;\r\nexport const TEMPLATE_URL           = BASE_URL + \"asset/template/\";\r\nexport const REPORT_URL             = BASE_URL + \"asset/report/\";\r\nexport const WEB_BASE_NAME          = \" | IP  Manager\";\r\n\r\nexport const LOGIN                  = BASE_URL + 'login';\r\n\r\n/*      OBJECT API URL       */\r\nconst OBJECT_URL                    = BASE_URL + 'obj/';\r\nexport const LIST_OBJECT            = OBJECT_URL + 'list';\r\nexport const GET_PRO_BY_OBJ_ID      = OBJECT_URL + 'get_object_info';\r\nexport const UPDATE_PRO_VALUE       = OBJECT_URL + 'update_property';\r\nexport const DELETE_OBJECT          = OBJECT_URL + 'delete';\r\nexport const INSERT_OBJECT          = OBJECT_URL + 'insert';\r\nexport const GET_TEMPLATE           = OBJECT_URL + 'get_excel_template';\r\nexport const INSERT_OBJECT_EXCEL    = OBJECT_URL + 'insert_object_excel';\r\nexport const EXPORT_DATA            = OBJECT_URL + 'export_data';\r\nexport const SEARCH_OBJECT          = OBJECT_URL + 'search';\r\n\r\n/*      OBJECT TYPE API URL    */\r\nconst OBJECT_TYPE_URL               = BASE_URL + 'obj_type/';\r\nexport const LIST_OBJ_TYPE          = OBJECT_TYPE_URL + 'list';\r\n\r\n/*      PROPERTY API URL    */\r\nconst PROPERTY_URL                  = BASE_URL + 'pro/';\r\nexport const LIST_PROPERTY          = PROPERTY_URL + 'list';\r\nexport const Get_PRO_INFO           = PROPERTY_URL + 'get_pro_info';\r\nexport const UPDATE_PROPERTY        = PROPERTY_URL + 'update';\r\nexport const INSERT_PROPERTY        = PROPERTY_URL + 'insert';\r\nexport const DELETE_PROPERTY        = PROPERTY_URL + 'delete';\r\nexport const GET_LIST_PRO_BY_OBJ_ID = PROPERTY_URL + 'get_list_pro_by_obj_id';\r\nexport const ADD_PRO_TO_OBJECT      = PROPERTY_URL + 'add_property_to_object';\r\n\r\n/*      Rules API URL   */\r\nconst RULES_URL                     = BASE_URL + 'rules/';\r\nexport const LIST_RULES             = RULES_URL + 'list';\r\nexport const INSERT_RULE            = RULES_URL + 'insert';\r\nexport const RULE_INFO              = RULES_URL + 'get_rule_info';\r\nexport const DELETE_RULE            = RULES_URL + 'delete';\r\nexport const UPDATE_RULE            = RULES_URL + 'update';\r\nexport const SEARCH_RULE            = RULES_URL + 'search';","import React, {useEffect} from \"react\";\r\nimport './NotFound.sass';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SELECT_ITEM} from \"../Redux/ReducersAndActions/SideBar/SideBarActionsDefinition\";\r\nimport {WEB_BASE_NAME} from \"../API_URL\";\r\n\r\nconst NotFound = (props) => {\r\n    const {_title}      = props;\r\n    const dispatch      = useDispatch();\r\n    const ChangeState   = () => {\r\n        dispatch({\r\n            type: SELECT_ITEM,\r\n            index: 0\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = _title + WEB_BASE_NAME;\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"notfound_wrap\">\r\n            <div className=\"center-div text-center\">\r\n                <span className=\"notfound_title\">404</span>\r\n                <span className=\"notfound_desc\">\r\n                    Hmm, seem you're lost! Let's go&nbsp;\r\n                    <Link to=\"/blacklist\" onClick={ChangeState}>\r\n                        back\r\n                    </Link>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","export const LOADING    = \"loading\";\r\nexport const LOADED     = \"loaded\";\r\nexport const ERROR      = \"error\";\r\nexport const SUCCESS    = \"success\";","import React from 'react';\r\nimport { IoMdCloseCircle } from \"react-icons/io\";\r\nimport {IconContext} from \"react-icons\";\r\nimport \"./Modal.sass\";\r\n\r\nconst Modal = (props) => {\r\n    const { show, title, children, onClickOut, WrapClass, CloseModal, ModalWidth } = props;\r\n    if (show !== true) return null;\r\n    return (\r\n        <div className={WrapClass} onClick={onClickOut}>\r\n            <div className={\"modal_container\"} style={ModalWidth ? {width: ModalWidth} : undefined} onClick={e => e.stopPropagation()}>\r\n                <div className=\"modal_title\">\r\n                    <span className={\"modal_close_btn\"} onClick={CloseModal}>\r\n                        <IconContext.Provider value={{size: 16, color: \"#939393\"}}>\r\n                            <IoMdCloseCircle/>\r\n                        </IconContext.Provider>\r\n                    </span>\r\n                    <p>{title}</p>\r\n                </div>\r\n\r\n                {/*Doc: https://reactjs.org/docs/jsx-in-depth.html*/}\r\n                <div style={{\r\n                    maxHeight: '95vh',\r\n                    overflowY: 'auto',\r\n                    overflowX: 'auto',\r\n                    padding: '0 10px',\r\n                }}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, {useEffect, useState} from 'react';\r\nimport './../../GlobalStyle.sass';\r\nimport {\r\n    DELETE_RULE,\r\n    INSERT_RULE,\r\n    LIST_OBJ_TYPE,\r\n    LIST_RULES,\r\n    RULE_INFO,\r\n    SEARCH_OBJECT,\r\n    SEARCH_RULE, UPDATE_RULE,\r\n    WEB_BASE_NAME\r\n} from \"../API_URL\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ERROR, LOADED, LOADING} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FaRegWindowClose, RiFunctionLine, MdOutlineSave, BiAddToQueue} from \"react-icons/all\";\r\nimport {IconContext} from \"react-icons\";\r\nimport swal from \"sweetalert\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport Modal from \"../Modal\";\r\n\r\n\r\nfunction Rules (props) {\r\n    const ADD_RULE_MODE                         = 1;\r\n    const {_title}                              = props;\r\n    const dispatch                              = useDispatch();\r\n    const [DetailData, setDetailData]           = useState({});\r\n    const [showAppBox, setShowAppBox]           = useState(false);\r\n    const [rulesData, setRulesData]             = useState([]);\r\n    const [SearchBoxValue, setSearchBoxValue]   = useState(\"\");\r\n    const [ModalData, setModalData]             = useState({mode: -1, data: {}, show: false, title: \"no title\"});\r\n    const { loading, error, _msg }              = useSelector(state => state.Status);\r\n    const [testRegex, setTestRegex]             = useState({notMatchRegex: false, value: \"\"});\r\n\r\n    const __FetchFunction = (URL, body, callback, dismiss = true) => {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body),\r\n            redirect: 'follow'\r\n        };\r\n        dispatch({type: LOADING});\r\n        fetch(URL, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    if (dismiss) dispatch({type: LOADED})\r\n                    callback(result.msg, null);\r\n                } else {\r\n                    if (dismiss) {\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            msg: result.msg[0]\r\n                        });\r\n                    }\r\n                    toast.error(result.msg);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                if (dismiss) {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: e\r\n                    })\r\n                }\r\n                toast.error(e);\r\n            });\r\n    }\r\n\r\n    const ToggleApplicationBox = (e) => {\r\n        e.stopPropagation();\r\n        setShowAppBox(!showAppBox);\r\n    }\r\n\r\n    const SearchByRuleName = (e) => {\r\n        if (e.keyCode === 13 && loading === false) {\r\n            let BodyData = {\r\n                \"rule_name\": SearchBoxValue\r\n            }\r\n            __FetchFunction(SEARCH_RULE, BodyData, function(response) {\r\n                setRulesData(response);\r\n                if (response.length > 0) {\r\n                    GetRuleInfo(response[0]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const GetRuleInfo = item => {\r\n        setTestRegex({\r\n            ...testRegex,\r\n            notMatchRegex: false,\r\n            value: \"\"\r\n        });\r\n        setDetailData(item);\r\n    }\r\n\r\n    const CheckRegex = e => {\r\n        let regex = new RegExp(DetailData.rule_regex, 'g');\r\n        setTestRegex({\r\n            ...testRegex,\r\n            value: e.target.value,\r\n            notMatchRegex: e.target.value === \"\" ? false : !regex.test(e.target.value)\r\n        });\r\n    }\r\n    \r\n    const DeleteRule = () => {\r\n      swal({\r\n          title: \"Delete\",\r\n          text: `Rule data will be removed and CAN NOT recover. Continue?`,\r\n          icon: \"warning\",\r\n          buttons: true,\r\n          dangerMode: true})\r\n          .then(isConfirm => {\r\n              if (isConfirm) {\r\n                  let BodyData = {\r\n                      \"rule_id\": DetailData.rule_id\r\n                  };\r\n                  __FetchFunction(DELETE_RULE, BodyData, function(response) {\r\n                      GetListRule();\r\n                      toast.success(response);\r\n                  }, false);\r\n              }\r\n          })\r\n    }\r\n\r\n    const GetListRule = () => {\r\n      __FetchFunction(LIST_RULES, undefined, function (response) {\r\n          setRulesData(response);\r\n          if (response.length > 0) {\r\n              GetRuleInfo(response[0]);\r\n          }\r\n      });\r\n    }\r\n\r\n    const HandleClickOut = (e) => {\r\n        setModalData({\r\n            ...ModalData,\r\n            show: false\r\n        })\r\n    }\r\n\r\n    const CreateNewRule = () => {\r\n      setModalData({\r\n          mode: ADD_RULE_MODE,\r\n          data: {\r\n              rule_name: \"\",\r\n              rule_desc: \"\",\r\n              rule_regex: \"\"\r\n          },\r\n          show: true,\r\n          title: \"Create new rule\"\r\n      })\r\n    }\r\n\r\n    const InsertRule = () => {\r\n      if (ModalData.data.rule_name.trim() === \"\") {\r\n          toast.error(\"Rule needs a name\");\r\n          return;\r\n      }\r\n      let BodyData = {\r\n          \"rule_name\": ModalData.data.rule_name,\r\n          \"rule_desc\": ModalData.data.rule_desc,\r\n          \"rule_regex\": ModalData.data.rule_regex\r\n      }\r\n      __FetchFunction(INSERT_RULE, BodyData, function(response) {\r\n          setModalData({\r\n              ...ModalData,\r\n              show: false\r\n          });\r\n          GetListRule();\r\n          toast.success(response);\r\n      }, false);\r\n    }\r\n\r\n    const SaveRuleChange = () => {\r\n      if (DetailData.rule_name.trim() === \"\") {\r\n          toast.error(\"Rule needs a name\");\r\n          return;\r\n      }\r\n        let BodyData = {\r\n            \"rule_id\"   : DetailData.rule_id,\r\n            \"rule_name\" : DetailData.rule_name,\r\n            \"rule_desc\" : DetailData.rule_desc,\r\n            \"rule_regex\": DetailData.rule_regex\r\n        }\r\n        __FetchFunction(UPDATE_RULE, BodyData, function(response) {\r\n            setModalData({\r\n                ...ModalData,\r\n                show: false\r\n            });\r\n            GetListRule();\r\n            toast.success(response);\r\n        }, false);\r\n    }\r\n\r\n    useEffect(function() {\r\n        dispatch({type: LOADING});\r\n        document.title = _title + WEB_BASE_NAME;\r\n        let ListAPI = [{\r\n           url: LIST_RULES,\r\n           requestOptions: {\r\n               method: 'POST',\r\n               redirect: 'follow'\r\n           }\r\n        }];\r\n\r\n        Promise.all(ListAPI.map(item => fetch(item.url, item.requestOptions)))\r\n            .then(responses => Promise.all(responses.map(resp => resp.json())))\r\n            .then(results => {\r\n                let HasErr = false;\r\n                for (let i of results) {\r\n                    if (i.code !== 200) {\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            msg: i.msg\r\n                        });\r\n                        HasErr = true;\r\n                    }\r\n                    if (!HasErr) {\r\n                        dispatch({type: LOADED});\r\n                        setRulesData(results[0].msg);\r\n                        if (results[0].msg.length > 0) {\r\n                            GetRuleInfo(results[0].msg[0]);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n            });\r\n        return () => {\r\n            setRulesData([]);\r\n        }\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"container\" onClick={() => setShowAppBox(false)}>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            <Modal\r\n                show={ModalData.show}\r\n                title={ModalData.title}\r\n                onClickOut={HandleClickOut}\r\n                CloseModal={_ => setModalData({...ModalData, show: false})}\r\n                WrapClass={\"modal_wrap\"}>\r\n                {\r\n                    ModalData.mode === ADD_RULE_MODE && (\r\n                        <div style={{\r\n                            minWidth: '60vw',\r\n                        }}>\r\n                            <div className=\"margin-top-20\">\r\n                                <label htmlFor={\"_insert_rule_name\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Rule's name:</span>\r\n                                </label>\r\n                                <input className={\"form-control\"} id={\"_insert_rule_name\"} placeholder={\"Rule's name\"} value={ModalData.data.rule_name} onChange={e => {setModalData({\r\n                                    ...ModalData,\r\n                                    data: {\r\n                                        ...ModalData.data,\r\n                                        rule_name: e.target.value\r\n                                    }\r\n                                })}}/>\r\n                            </div>\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <label htmlFor={\"_insert_rule_desc\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Rule's desc:</span>\r\n                                </label>\r\n                                <input className={\"form-control\"} id={\"_insert_rule_desc\"} placeholder={\"Rule's name\"} value={ModalData.data.rule_desc} onChange={e => {setModalData({\r\n                                    ...ModalData,\r\n                                    data: {\r\n                                        ...ModalData.data,\r\n                                        rule_desc: e.target.value\r\n                                    }\r\n                                })}}/>\r\n                            </div>\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <label htmlFor={\"_insert_rule_regex\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Rule's regex:</span>\r\n                                </label>\r\n                                <input className={\"form-control\"} id={\"_insert_rule_regex\"} placeholder={\"Rule's name\"} value={ModalData.data.rule_regex} onChange={e => {setModalData({\r\n                                    ...ModalData,\r\n                                    data: {\r\n                                        ...ModalData.data,\r\n                                        rule_regex: e.target.value\r\n                                    }\r\n                                })}}/>\r\n                            </div>\r\n                            <div className={\"margin-top-25\"}>\r\n                                <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                                <button className={\"btn pull-right margin-right-10 theme_green\"} onClick={InsertRule}>Create</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </Modal>\r\n\r\n            <div className=\"box-style\" style={{height: \"calc(100% - 40px)\", padding: '20px', display: 'flex', position: 'relative'}}>\r\n\r\n                <div style={{width: '300px', height: 'calc(100% - 30px)', display: 'inline-block'}}>\r\n                    <input className=\"form-control\" onChange={e => setSearchBoxValue(e.target.value)} onKeyDown={SearchByRuleName} placeholder=\"Find by rule's name ...\"/>\r\n                    <div className=\"list-container margin-top-10\">\r\n                        {rulesData.length === 0 ? (\r\n                            <div>\r\n                                <span>No rule founded!</span>\r\n                            </div>\r\n                        ) : rulesData.map((item, index) => {\r\n                            return (\r\n                                <div\r\n                                    key={index}\r\n                                    className=\"list-item\"\r\n                                    onClick={_ => GetRuleInfo(item)}>\r\n                                    {item.rule_name}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {Array.isArray(rulesData) && rulesData.length > 0 && (<div style={{\r\n                    width: 'calc(100% - 350px)',\r\n                    height: 'calc(100% - 70px)',\r\n                    marginLeft: '50px',\r\n                    marginTop: '50px',\r\n                    display: 'inline-block',\r\n                    overflow: 'auto',\r\n                    padding: '10px'}}>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"name\">\r\n                            <span className=\"bold\">Rule's name:</span>\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"name\" value={DetailData.rule_name} onChange={e => {\r\n                            setDetailData({\r\n                                ...DetailData,\r\n                                rule_name: e.target.value\r\n                            })\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"desc\">\r\n                            <span className=\"bold\">Rule's description:</span>\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"desc\" value={DetailData.rule_desc} onChange={e => {\r\n                            setDetailData({\r\n                                ...DetailData,\r\n                                rule_desc: e.target.value\r\n                            })\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"reg\">\r\n                            <span className=\"bold\">Rule's regex: </span>\r\n                            (Regex instruction <Link target=\"_blank\" to={{pathname: \"https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference\"}}>here</Link>)\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"reg\" value={DetailData.rule_regex} onChange={e => {\r\n                            setDetailData({\r\n                                ...DetailData,\r\n                                rule_regex: e.target.value\r\n                            })\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"test_regex\">\r\n                            <span className=\"bold\">Test regex: </span>\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"test_regex\" placeholder=\"Type something\" value={testRegex.value} onChange={CheckRegex}/>\r\n                        {testRegex.notMatchRegex && <small className=\"error\">Not match regex</small>}\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <small className=\"italic\">(Created: {DetailData.created_at}, Last update: {DetailData.updated_at})</small>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <button className=\"btn pull-right theme_red margin-left-10\" onClick={DeleteRule}>\r\n                            <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                <FaRegWindowClose/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Delete rule\r\n                        </button>\r\n                        <button className=\"btn pull-right theme_cyan\" onClick={SaveRuleChange}>\r\n                            <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                <MdOutlineSave/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Save change\r\n                        </button>\r\n                    </div>\r\n                </div>)}\r\n\r\n                <div onClick={e => e.stopPropagation()}>\r\n                    <span className=\"fab-button\" onClick={ToggleApplicationBox}>\r\n                        <IconContext.Provider value={{size: 25, color: 'white'}}>\r\n                            <RiFunctionLine/>\r\n                        </IconContext.Provider>\r\n                    </span>\r\n\r\n                    <div className={showAppBox ? \"application-box flex\" : \"application-box\"}>\r\n                        <button className=\"btn theme_green700 margin-10\" onClick={CreateNewRule}>\r\n                            <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                <BiAddToQueue/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Create Rule</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rules;","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ERROR, LOADED, LOADING} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {\r\n    ADD_PRO_TO_OBJECT, BASE_URL, DELETE_OBJECT, EXPORT_DATA,\r\n    GET_LIST_PRO_BY_OBJ_ID,\r\n    GET_PRO_BY_OBJ_ID, GET_TEMPLATE, INSERT_OBJECT, INSERT_OBJECT_EXCEL,\r\n    LIST_OBJECT, LIST_PROPERTY, SEARCH_OBJECT,\r\n    UPDATE_PRO_VALUE,\r\n    WEB_BASE_NAME\r\n} from \"../API_URL\";\r\nimport {IconContext} from \"react-icons\";\r\nimport {\r\n    BiAddToQueue,\r\n    FaRegTimesCircle,\r\n    FaRegWindowClose,\r\n    MdOutlineSave,\r\n    RiFunctionLine,\r\n    SiMicrosoftexcel,\r\n    HiDocumentReport\r\n} from \"react-icons/all\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Modal from \"../Modal\";\r\nimport Select from \"react-select\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction ObjectA(props) {\r\n    const ADD_PROPERTY      = 1;\r\n    const ADD_OBJECT        = 2;\r\n    const CREATE_OBJ_EXCEL  = 3;\r\n    const UPDATE_OBJ_EXCEL  = 4;\r\n    const DELETE_OBJ_EXCEL  = 5;\r\n    const {_title, _obj_type_id, _obj_type_name}    = props;\r\n    const dispatch                                  = useDispatch();\r\n    const [DetailData, setDetailData]               = useState({obj_id: -1, obj_name: \"\", data: []});\r\n    const [ObjectData, setObjectData]               = useState([]);\r\n    const [ShowAppBox, setShowAppBox]               = useState(false);\r\n    const [ModalData, setModalData]                 = useState({mode: -1, data: {}, show: false, title: \"no title\"});\r\n    const [ModalSelectData, setModalSelectData]     = useState(null);\r\n    const [SearchBoxValue, setSearchBoxValue]       = useState(\"\");\r\n    const [selectedFile, setSelectedFile]           = useState({uploaded: false, name: \"No file\", file: null});\r\n\r\n    const __FetchFunction = (URL, body, callback, dismiss = true) => {\r\n        dispatch({type: LOADING});\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body),\r\n            redirect: 'follow'\r\n        };\r\n        fetch(URL, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    if (dismiss) dispatch({type: LOADED});\r\n                    callback(result.msg, null);\r\n                } else if (result.code === 202) {\r\n                    if (dismiss) dispatch({type: LOADED});\r\n                    setShowAppBox(false);\r\n                    const link = document.createElement('a');\r\n                    link.href = BASE_URL + result.msg;\r\n                    link.setAttribute(\"target\", \"_blank\");\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                    document.body.removeChild(link);\r\n                } else {\r\n                    callback(null, result.msg);\r\n                    if (dismiss) {\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            msg: result.msg\r\n                        });\r\n                    }\r\n                    toast.error(result.msg);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                if (dismiss) {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: e\r\n                    });\r\n                }\r\n                toast.error(e);\r\n            });\r\n    }\r\n\r\n    const ToggleApplicationBox = (e) => {\r\n        e.stopPropagation();\r\n        setShowAppBox(!ShowAppBox);\r\n    }\r\n\r\n    const SearchByObjectName = (e) => {\r\n        if (e.keyCode === 13) {\r\n            let BodyData = {\r\n                \"obj_name\": SearchBoxValue,\r\n                \"obj_type_id\": _obj_type_id\r\n            }\r\n            __FetchFunction(SEARCH_OBJECT, BodyData, function(response) {\r\n                setObjectData(response);\r\n                GetObjectInfo(response[0], 0);\r\n            }, false);\r\n        }\r\n    }\r\n    \r\n    const AddProperty = () => {\r\n        let BodyData = {\r\n          \"obj_id\": DetailData.obj_id\r\n        };\r\n        __FetchFunction(GET_LIST_PRO_BY_OBJ_ID, BodyData, function(response) {\r\n            let temp1 = [], temp2 = [];\r\n            for (let i of response.list_property) {\r\n                temp1.push({\r\n                    value: i.pro_id,\r\n                    label: i.pro_name,\r\n                    ...i\r\n                })\r\n            }\r\n            for (let i of response.list_property_assign) {\r\n                temp2.push({\r\n                    value: i.pro_id,\r\n                    label: i.pro_name,\r\n                    ...i\r\n                })\r\n            }\r\n            setModalSelectData(null);\r\n            setModalData({\r\n                ...ModalData,\r\n                show: true,\r\n                mode: ADD_PROPERTY,\r\n                data: {\r\n                    list_property: temp1,\r\n                    list_property_assign: temp2\r\n                },\r\n                title: `Add property to ${DetailData.obj_name}`\r\n            });\r\n        });\r\n    }\r\n\r\n    const ChangeProDataWithExcel = (mode = -1) => {\r\n        if (mode !== -1) {\r\n            setSelectedFile({\r\n                name: \"No file\",\r\n                uploaded: false,\r\n                file: null\r\n            });\r\n        }\r\n        if (mode === CREATE_OBJ_EXCEL) {\r\n            setModalData({\r\n                show: true,\r\n                title: \"Instruction to create object with Excel file\",\r\n                data: {},\r\n                mode: CREATE_OBJ_EXCEL\r\n            });\r\n        } else if (mode === UPDATE_OBJ_EXCEL) {\r\n            swal({\r\n                title: \"Developing features\",\r\n                text: `This features will coming soon. We're sorry about this problem!`,\r\n                icon: \"info\"\r\n            });\r\n            // setModalData({\r\n            //     show: true,\r\n            //     title: \"Instruction to update object with Excel file\",\r\n            //     data: {},\r\n            //     mode: UPDATE_OBJ_EXCEL\r\n            // });\r\n        }  else if (mode === DELETE_OBJ_EXCEL) {\r\n            swal({\r\n                title: \"Developing features\",\r\n                text: `This features will coming soon. We're sorry about this problem!`,\r\n                icon: \"info\"\r\n            });\r\n            // setModalData({\r\n            //     show: true,\r\n            //     title: \"Instruction to delete object with Excel file\",\r\n            //     data: {},\r\n            //     mode: DELETE_OBJ_EXCEL\r\n            // });\r\n        }\r\n    }\r\n\r\n    const CreateNewObject = () => {\r\n        dispatch({type: LOADING});\r\n        let BodyData = {\r\n            \"obj_type_id\": _obj_type_id\r\n        }\r\n        __FetchFunction(LIST_PROPERTY, BodyData, function(response, err) {\r\n            let temp = [];\r\n            for (let i of response) {\r\n                temp.push({\r\n                    value: i.pro_id,\r\n                    label: i.pro_name,\r\n                    ...i\r\n                });\r\n            }\r\n            setModalSelectData(null);\r\n            setModalData({\r\n                show: true,\r\n                title: \"Create new object\",\r\n                data: {\r\n                    obj_name: \"\",\r\n                    obj_desc: \"\",\r\n                    obj_type_id: _obj_type_id,\r\n                    list_property: temp,\r\n                    list_property_assign: []\r\n                },\r\n                mode: ADD_OBJECT\r\n            })\r\n        });\r\n    }\r\n\r\n    const HandleClickOut = (e) => {\r\n        setModalData({\r\n            ...ModalData,\r\n            show: false\r\n        })\r\n    }\r\n\r\n    const SaveChangeObject = () => {\r\n        let HasErr = false;\r\n        for (let i of DetailData.data) {\r\n            if (i.match_regex === false) {\r\n                toast.error(`Value of ${i.pro_name} property is not match rule's regex!`);\r\n                HasErr = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!HasErr) {\r\n            let list_property = [];\r\n            for (let i of DetailData.data) {\r\n                list_property.push({\r\n                    \"obj_id\": i.obj_id,\r\n                    \"pro_id\": i.pro_id,\r\n                    \"pro_value\": i.pro_value\r\n                });\r\n            }\r\n            let BodyData = {\r\n                \"list_property\": list_property\r\n            }\r\n            __FetchFunction(UPDATE_PRO_VALUE, BodyData, function (response) {\r\n                toast.success(response);\r\n                GetObjectInfo(DetailData, 0);\r\n            });\r\n        }\r\n    }\r\n\r\n    const DeleteObjectA = () => {\r\n        swal({\r\n            title: \"DELETE\",\r\n            text: `Delete '${DetailData.obj_name}' will delete all object's property. Continue?`,\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true\r\n        }).then(val => {\r\n            if (val) {\r\n                let BodyData = {\r\n                    \"obj_id\": DetailData.obj_id\r\n                }\r\n                __FetchFunction(DELETE_OBJECT, BodyData, function(response, err) {\r\n                    if (err != null) return;\r\n                    GetListObject();\r\n                    toast.success(response);\r\n                }, false);\r\n            }\r\n        });\r\n    }\r\n\r\n    const GetListObject = (cb) => {\r\n        let BodyData = {\r\n            \"obj_type_id\": _obj_type_id\r\n        };\r\n        __FetchFunction(LIST_OBJECT, BodyData, function(response) {\r\n            for (let i of response) {\r\n                i.match_regex = true;\r\n            }\r\n            setObjectData(response);\r\n            if (response.length > 0) {\r\n                GetObjectInfo(response[0], 0);\r\n            } else {\r\n                dispatch({type: LOADED});\r\n            }\r\n        },false);\r\n    }\r\n\r\n    const GetObjectInfo = (item, index = -1) => {\r\n        if (index > -1) {\r\n            const ObjectDataCopy = [...ObjectData];\r\n            ObjectDataCopy.map(function(obj, obj_index) {\r\n                obj.selected = (obj_index === index);\r\n            });\r\n            // setObjectData(ObjectDataCopy);\r\n        }\r\n        let BodyData = {\r\n            \"obj_id\": item.obj_id\r\n        };\r\n        __FetchFunction(GET_PRO_BY_OBJ_ID, BodyData, function (response) {\r\n            for (let i of response) {\r\n                let reg = new RegExp(i.rule_regex, 'g');\r\n                i.match_regex = reg.test(i.pro_value);\r\n            }\r\n            setDetailData({\r\n                obj_id: item.obj_id,\r\n                obj_name: item.obj_name,\r\n                data: response\r\n            });\r\n        });\r\n    }\r\n\r\n    const ChangeProValue = (e, index) => {\r\n        let CopyDetailData                  = [...DetailData.data];\r\n        let reg                             = new RegExp(CopyDetailData[index].rule_regex, \"g\");\r\n        CopyDetailData[index].pro_value     = e.target.value;\r\n        CopyDetailData[index].match_regex   = reg.test(e.target.value);\r\n        setDetailData({\r\n            ...DetailData,\r\n            CopyDetailData\r\n        });\r\n    }\r\n\r\n    const ChangeProperty = (item) => {\r\n        let tempArr = ModalData.data.list_property_assign;\r\n        let isAssigned = false;\r\n        for (let i of tempArr) {\r\n            if (i.pro_id === item.value) {\r\n                isAssigned = true;\r\n                break;\r\n            }\r\n        }\r\n        if (Array.isArray(tempArr) && !isAssigned) {\r\n            tempArr.push(item);\r\n            setModalData({\r\n                ...ModalData,\r\n                data: {\r\n                    ...ModalData.data,\r\n                    list_property_assign: tempArr\r\n                }\r\n            })\r\n            setModalSelectData(item);\r\n        }\r\n    }\r\n\r\n    const RemoveProperty = (item) => {\r\n        if (item.is_required === true) {\r\n            toast.error(\"Can not remove this property!\");\r\n            return;\r\n        }\r\n        let tempArr = ModalData.data.list_property_assign;\r\n        Array.isArray(tempArr) && tempArr.map(function(i, index) {\r\n            if (item.value === i.value) {\r\n                tempArr.splice(index, 1);\r\n            }\r\n        });\r\n        setModalData({\r\n            ...ModalData,\r\n            data: {\r\n                ...ModalData.data,\r\n                list_property_assign: tempArr\r\n            }\r\n        });\r\n    }\r\n\r\n    const UpdatePropertyOfObject = () => {\r\n        let ListNewProID = [];\r\n        for (let i of ModalData.data.list_property_assign) {\r\n            ListNewProID.push(i.value);\r\n        }\r\n        let BodyData = {\r\n            \"obj_id\": DetailData.obj_id,\r\n            \"list_pro_id\": ListNewProID,\r\n            \"obj_type_id\": _obj_type_id\r\n        }\r\n        __FetchFunction(ADD_PRO_TO_OBJECT, BodyData, function(response, err) {\r\n           GetObjectInfo(DetailData, 0);\r\n           setModalData({...ModalData, show: false});\r\n           toast.success(response);\r\n        });\r\n    }\r\n\r\n    const InsertObject = () => {\r\n        if (ModalData.data.obj_name.trim() === \"\") {\r\n            toast.error(\"Object needs a name!\");\r\n            return;\r\n        }\r\n        let tempArr = [];\r\n        for (let i of ModalData.data.list_property_assign) {\r\n            tempArr.push(i.value);\r\n        }\r\n        let BodyData = {\r\n            \"obj_type_id\": _obj_type_id,\r\n            \"obj_name\": ModalData.data.obj_name,\r\n            \"obj_desc\": ModalData.data.obj_desc,\r\n            \"list_pro_id\": tempArr\r\n        }\r\n        __FetchFunction(INSERT_OBJECT, BodyData, function(response) {\r\n            setModalData({\r\n                ...ModalData,\r\n                show: false\r\n            });\r\n            GetListObject();\r\n           toast.success(response);\r\n        });\r\n    }\r\n    \r\n    const GetTemplate = () => {\r\n        let BodyData = {\r\n            \"obj_type_id\": _obj_type_id\r\n        }\r\n        __FetchFunction(GET_TEMPLATE, BodyData, function (response) {\r\n            const link = document.createElement('a');\r\n            link.href = BASE_URL + response;\r\n            link.setAttribute(\"target\", \"_blank\");\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n    }\r\n\r\n    const UploadExcel = () => {\r\n        let URI = \"\";\r\n        if (selectedFile.file === null) {\r\n            toast.error(\"Choose a file!\");\r\n            return;\r\n        }\r\n\r\n        if (ModalData.mode === CREATE_OBJ_EXCEL) {\r\n            URI = INSERT_OBJECT_EXCEL;\r\n        } else if (ModalData.mode === UPDATE_OBJ_EXCEL) {\r\n            URI = \"\";\r\n        } else if (ModalData.mode === DELETE_OBJ_EXCEL) {\r\n            URI = \"\";\r\n        }\r\n\r\n        if (URI !== \"\") {\r\n            dispatch({\r\n                type: LOADING\r\n            });\r\n            let data = new FormData();\r\n            data.append(\"excel_file\", selectedFile.file);\r\n            data.append(\"obj_type_id\", _obj_type_id);\r\n\r\n            let requestOptions = {\r\n                method: 'POST',\r\n                body: data,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(URI, requestOptions)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    if (result.code === 200) {\r\n                        dispatch({type: LOADED});\r\n                        setModalData({\r\n                            ...ModalData,\r\n                            show: false\r\n                        });\r\n                        GetListObject();\r\n                        toast.success(result.msg);\r\n                    } else {\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            _msg: result.msg\r\n                        });\r\n                        toast.error(result.msg);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        _msg: e\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    const ExportData = () => {\r\n        let BodyData = {\r\n            \"obj_type_id\": _obj_type_id\r\n        }\r\n      __FetchFunction(EXPORT_DATA, BodyData, function() {});\r\n    }\r\n\r\n    const ChangeFiles = e => {\r\n        setSelectedFile({\r\n            ...selectedFile,\r\n            uploaded: true,\r\n            name: e.target.files[0].name,\r\n            file: e.target.files[0]\r\n        });\r\n    }\r\n\r\n    useEffect(function() {\r\n        dispatch({type: LOADING});\r\n        document.title = _title + WEB_BASE_NAME;\r\n        GetListObject();\r\n        return () => {\r\n            setObjectData([]);\r\n        }\r\n    }, [_obj_type_id]);\r\n\r\n    return(\r\n        <div className=\"container\" onClick={() => setShowAppBox(false)}>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            <Modal\r\n                show={ModalData.show}\r\n                title={ModalData.title}\r\n                onClickOut={HandleClickOut}\r\n                CloseModal={_ => setModalData({...ModalData, show: false})}\r\n                WrapClass={\"modal_wrap\"}>\r\n\r\n                {\r\n                    ModalData.mode === CREATE_OBJ_EXCEL && (\r\n                        <>\r\n                            <div>\r\n                                <ol>\r\n                                    <li>Download template <span onClick={GetTemplate} style={{cursor: \"pointer\", textDecoration: \"underline\"}}>here</span></li>\r\n                                    <li>Fill value into Excel</li>\r\n                                    <li><label className=\"link_style\" htmlFor=\"upload_file\">Click here</label> to upload filled Excel</li>\r\n                                </ol>\r\n                                <input className=\"hide\" onChange={ChangeFiles} id=\"upload_file\" type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\r\n                                {selectedFile.file !== null ? <span className=\"margin-left-5\">File <span className={\"bold\"}>{selectedFile.name}</span> is selected</span> : <span className=\"margin-left-5\" style={{fontStyle: \"italic\"}}>No file selected!</span>}<br/>\r\n                                <span style={{fontStyle: \"italic\", color: \"red\", marginTop: '10px', display: \"block\"}}>* Download new template whenever creating object because list property of {_obj_type_name.toLowerCase()} can be changed in setting</span>\r\n                                <span style={{fontStyle: \"italic\", color: \"red\"}}>* If you want to remove a property away from object, insert '#' character to this property cell</span>\r\n                            </div>\r\n                            <div className={\"margin-top-25\"}>\r\n                                <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                                <button className={\"btn theme_blue pull-right margin-right-10\"} onClick={UploadExcel}>Upload</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    (ModalData.mode === UPDATE_OBJ_EXCEL) && (\r\n                        <>\r\n                            <div>\r\n                                <ol>\r\n                                    <li><label className=\"link_style\" htmlFor=\"upload_file\">Click here</label> to upload Excel</li>\r\n                                </ol>\r\n                                <input className=\"hide\" onChange={ChangeFiles} id=\"upload_file\" type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\r\n                                {selectedFile.file !== null ? <span className=\"margin-left-5\">File <span className={\"bold\"}>{selectedFile.name}</span> is selected</span> : <span className=\"margin-left-5\" style={{fontStyle: \"italic\"}}>No file selected!</span>}<br/>\r\n                            </div>\r\n                            <div className={\"margin-top-25\"}>\r\n                                <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                                <button className={\"btn pull-right margin-right-10 \" + (ModalData.mode === UPDATE_OBJ_EXCEL ? \"theme_green\" : \"theme_red\")} onClick={UploadExcel}>Upload</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    ModalData.mode === DELETE_OBJ_EXCEL && (\r\n                        <>\r\n                            <div>\r\n                                <span className={\"err_msg margin-bottom-10\"}>* System will delete all object in {_obj_type_name} depend on 'Object ID' column in Excel file and CAN NOT recover. Please be careful!</span>\r\n                                <ol>\r\n                                    <li><label className=\"link_style\" htmlFor=\"upload_file\">Click here</label> to upload Excel</li>\r\n                                </ol>\r\n                                <input className=\"hide\" onChange={ChangeFiles} id=\"upload_file\" type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\r\n                                {selectedFile.file !== null ? <span className=\"margin-left-5\">File <span className={\"bold\"}>{selectedFile.name}</span> is selected</span> : <span className=\"margin-left-5\" style={{fontStyle: \"italic\"}}>No file selected!</span>}<br/>\r\n                            </div>\r\n                            <div className={\"margin-top-25\"}>\r\n                                <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                                <button className={\"btn pull-right margin-right-10 \" + (ModalData.mode === UPDATE_OBJ_EXCEL ? \"theme_green\" : \"theme_red\")} onClick={UploadExcel}>Upload</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                {ModalData.mode === ADD_OBJECT && (\r\n                    <div style={{\r\n                        minHeight: '60vh',\r\n                        minWidth: '60vw',\r\n                    }}>\r\n                        <small className={\"err_msg\"}>* {_obj_type_name} has a lot of required property that will be add automatic when you create object!</small>\r\n                        <small className={\"err_msg margin-top-5\"}>* Required property CAN NOT removed by manually!</small>\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor={\"_insert_object_name\"}>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Object's name:</span>\r\n                            </label>\r\n                            <input className={\"form-control\"} id={\"_insert_object_name\"} placeholder={\"Type a name...\"} value={ModalData.data.obj_name} onChange={e => {setModalData({\r\n                                ...ModalData,\r\n                                data: {\r\n                                    ...ModalData.data,\r\n                                    obj_name: e.target.value\r\n                                }\r\n                            })}}/>\r\n                        </div>\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor={\"_insert_object_desc\"}>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Description:</span>\r\n                            </label>\r\n                            <input className={\"form-control\"} id={\"_insert_object_desc\"} placeholder={\"Description\"} value={ModalData.data.obj_desc} onChange={e => {setModalData({\r\n                                ...ModalData,\r\n                                data: {\r\n                                    ...ModalData.data,\r\n                                    obj_desc: e.target.value\r\n                                }\r\n                            })}}/>\r\n                        </div>\r\n                        <div className=\"margin-top-20 margin-bottom-20\">\r\n                            <label>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Select property:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={ModalData.data.list_property}\r\n                                value={ModalSelectData}\r\n                                onChange={ChangeProperty}\r\n                                placeholder={\"Select a property\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div>\r\n                        {Array.isArray(ModalData.data.list_property_assign) && ModalData.data.list_property_assign.length > 0 && (\r\n                            <table className=\"nice_theme margin-top-20\" style={{\r\n                                minWidth: \"650px\"\r\n                            }}>\r\n                                <thead className=\"text-center\">\r\n                                <tr>\r\n                                    <th>Index</th>\r\n                                    <th>Property</th>\r\n                                    <th>Remove</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    Array.isArray(ModalData.data.list_property_assign) && ModalData.data.list_property_assign.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={item.id}>\r\n                                                <td className=\"text-center\">{index+1}</td>\r\n                                                <td className=\"bold\">{item.pro_name}</td>\r\n                                                <td className=\"text-center\">{\r\n                                                    item.is_required === false ? (\r\n                                                            <span onClick={_ => RemoveProperty(item)}>\r\n                                                            <IconContext.Provider value={{color: \"red\", size: \"20\"}} >\r\n                                                                <FaRegTimesCircle/>\r\n                                                            </IconContext.Provider>\r\n                                                        </span>\r\n                                                        ) :\r\n                                                        (<span>Required</span>)\r\n                                                }</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                            <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                            <button className={\"btn theme_green pull-right margin-right-10\"} onClick={InsertObject}>Create</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                \r\n                {ModalData.mode === ADD_PROPERTY && (\r\n                    <div style={{\r\n                        minHeight: '60vh',\r\n                        minWidth: '60vw',\r\n                    }}>\r\n                        <div className={\"margin-top-20\"}>\r\n                            <label>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Select property:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={ModalData.data.list_property}\r\n                                value={ModalSelectData}\r\n                                onChange={ChangeProperty}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            {Array.isArray(ModalData.data.list_property_assign) && ModalData.data.list_property_assign.length > 0 && (\r\n                                <table className=\"nice_theme margin-top-20\" style={{\r\n                                    minWidth: \"650px\"\r\n                                }}>\r\n                                    <thead className=\"text-center\">\r\n                                    <tr>\r\n                                        <th>Index</th>\r\n                                        <th>Property</th>\r\n                                        <th>Remove</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {\r\n                                        Array.isArray(ModalData.data.list_property_assign) && ModalData.data.list_property_assign.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={item.id}>\r\n                                                    <td className=\"text-center\">{index+1}</td>\r\n                                                    <td className=\"bold\">{item.pro_name}</td>\r\n                                                    <td className=\"text-center\">{\r\n                                                        item.is_required === false ? (\r\n                                                                <span onClick={_ => RemoveProperty(item)}>\r\n                                                                    <IconContext.Provider value={{color: \"red\", size: \"20\"}} >\r\n                                                                        <FaRegTimesCircle/>\r\n                                                                    </IconContext.Provider>\r\n                                                                </span>\r\n                                                            ) :\r\n                                                            (<span>Required</span>)\r\n                                                    }</td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    </tbody>\r\n                                </table>\r\n                            )}\r\n                            <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                            <button className={\"btn theme_yellow pull-right margin-right-10\"} onClick={UpdatePropertyOfObject}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Modal>\r\n\r\n            <div className=\"box-style\" style={{height: \"calc(100% - 40px)\", padding: '20px', display: 'flex', position: 'relative'}}>\r\n\r\n                <div style={{width: '300px', height: 'calc(100% - 30px)', display: 'inline-block'}}>\r\n                    <input className=\"form-control\" onKeyDown={SearchByObjectName} onChange={e => setSearchBoxValue(e.target.value)} value={SearchBoxValue} placeholder={`Find by ${_obj_type_name.toLowerCase()} name ...`}/>\r\n                    <div className=\"list-container margin-top-10\">\r\n                        {Array.isArray(ObjectData) && ObjectData.length === 0 ? (\r\n                            <div>\r\n                                <span>No object!</span>\r\n                            </div>\r\n                        ) : Array.isArray(ObjectData) && ObjectData.map((item, index) => {\r\n                            return (\r\n                                <div\r\n                                    key={index}\r\n                                    className={item.selected === true ? \"list-item theme_green\" : \"list-item\"}\r\n                                    onClick={_ => GetObjectInfo(item, index)}>\r\n                                    {item.obj_name}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {Array.isArray(ObjectData) && ObjectData.length > 0 &&\r\n                    (\r\n                        <div style={{\r\n                            width: 'calc(100% - 350px)',\r\n                            height: 'calc(100% - 70px)',\r\n                            marginLeft: '50px',\r\n                            display: 'inline-block',\r\n                            overflow: 'auto',\r\n                            padding: '10px'}}>\r\n                            <div style={{\r\n                                width: \"100%\",\r\n                                display: \"inline-block\",\r\n                                textTransform: \"capitalize\"\r\n                            }}>\r\n                                <span style={{fontWeight: \"bold\", fontSize: \"25px\", display: \"inline-block\", marginTop: \"15px\"}}>{_obj_type_name.toLowerCase()} : {DetailData.obj_name}</span>\r\n                                <button className=\"btn theme_brown margin-10 pull-right\" onClick={AddProperty}>\r\n                                    <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                        <BiAddToQueue/>\r\n                                    </IconContext.Provider>\r\n                                    &nbsp;Add property to {DetailData.obj_name}</button>\r\n                            </div>\r\n                            {\r\n                                DetailData.data.map(function(item, index) {\r\n                                    return (\r\n                                        <div className=\"margin-top-20\" key={index}>\r\n                                            <label htmlFor={\"_pro_item_\" + index}>\r\n                                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>{item.pro_name.toLowerCase()}:</span>\r\n                                            </label>\r\n                                            <input className={(item.match_regex === false) ? \"form-control form-control-err\" : \"form-control\"} placeholder={(item.pro_desc !== \"\") ? item.pro_desc : \"Fill value\"} id={\"_pro_item_\" + index} value={item.pro_value} onChange={e => ChangeProValue(e, index)}/>\r\n                                            <small className=\"italic\">(Created: {item.created_at}, Last update: {item.updated_at})</small><br/>\r\n                                            {item.match_regex === false && (<small className={\"err_msg italic\"}>Not match rule \"{item.rule_name}\"</small>)}\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <button className=\"btn pull-right theme_red margin-left-10\" onClick={DeleteObjectA}>\r\n                                    <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                        <FaRegWindowClose/>\r\n                                    </IconContext.Provider>\r\n                                    &nbsp;Delete\r\n                                </button>\r\n                                <button className=\"btn pull-right theme_cyan\" onClick={SaveChangeObject}>\r\n                                    <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                        <MdOutlineSave/>\r\n                                    </IconContext.Provider>\r\n                                    &nbsp;Save change\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div onClick={e => e.stopPropagation()}>\r\n                        <span className=\"fab-button\" onClick={ToggleApplicationBox}>\r\n                            <IconContext.Provider value={{size: 25, color: 'white'}}>\r\n                                <RiFunctionLine/>\r\n                            </IconContext.Provider>\r\n                        </span>\r\n\r\n                        <div className={ShowAppBox ? \"application-box flex\" : \"application-box\"}>\r\n                            <button className=\"btn theme_cyan margin-10\" onClick={ExportData}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <HiDocumentReport/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Export all {_obj_type_name} data</button>\r\n\r\n                            <button className=\"btn theme_orange margin-10\" onClick={_ => ChangeProDataWithExcel(CREATE_OBJ_EXCEL)}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <SiMicrosoftexcel/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Create object (Excel)</button>\r\n\r\n                            <button className=\"btn theme_orange margin-10\" onClick={_ => ChangeProDataWithExcel(UPDATE_OBJ_EXCEL)}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <SiMicrosoftexcel/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Update object (Excel)</button>\r\n\r\n                            <button className=\"btn theme_orange margin-10\" onClick={_ => ChangeProDataWithExcel(DELETE_OBJ_EXCEL)}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <SiMicrosoftexcel/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Delete object (Excel)</button>\r\n\r\n                            <button className=\"btn theme_green700 margin-10\" onClick={CreateNewObject}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <BiAddToQueue/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Create object (Manual)</button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ObjectA;","export default __webpack_public_path__ + \"static/media/sidebar_bg.4093c966.png\";","export default __webpack_public_path__ + \"static/media/vnpt.ac4800f4.svg\";","import {Menu, MenuItem, ProSidebar, SidebarContent, SidebarFooter, SidebarHeader} from \"react-pro-sidebar\";\r\nimport * as Icons from \"react-icons/all\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SideBarBackGroundImage from './sidebar_bg.png';\r\nimport VNPTIcon from './vnpt.svg';\r\nimport {IconContext} from \"react-icons/lib\";\r\n\r\n// ProSidebar: https://www.npmjs.com/package/react-pro-sidebar\r\n\r\nfunction SideBarCustom(props) {\r\n    const {list_item} = props;\r\n    const [SideBarClosing, setSideBarState] = useState(true);\r\n    const getWindowDimensions = () => {\r\n        const { innerWidth: width, innerHeight: height } = window;\r\n        return { width, height };\r\n    }\r\n    const [windowsSize, setWindowSize] = useState(getWindowDimensions());\r\n\r\n    const DynamicIcon = (IconName) => {\r\n        //Doc: https://stackoverflow.com/questions/65576629/how-to-render-react-icon-depending-on-string-from-database\r\n        const IconComponent = Icons[IconName];\r\n        if (!IconComponent) { // Return a default one\r\n            return <Icons.FaBeer />;\r\n        }\r\n        return <IconComponent />;\r\n    }\r\n\r\n    useEffect(function() {\r\n        function handleResize()  {\r\n            setWindowSize(getWindowDimensions());\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return function() {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <ProSidebar\r\n            image={SideBarBackGroundImage}\r\n            breakPoint=\"md\"\r\n            collapsed={SideBarClosing}\r\n            style={{\r\n                \"height\": windowsSize.height + 'px',\r\n                \"display\": \"inline-block\",\r\n                \"position\": \"fixed\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\"\r\n            }}\r\n        >\r\n            <SidebarHeader>\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        padding: '24px',\r\n                        textTransform: 'uppercase',\r\n                        fontWeight: 'bold',\r\n                        fontSize: 18,\r\n                        letterSpacing: '1px',\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis',\r\n                        whiteSpace: 'nowrap',\r\n                        color: \"#e5e5e5\"\r\n                    }}\r\n                >\r\n                    <span onClick={() => setSideBarState(!SideBarClosing)}>\r\n                        <IconContext.Provider value={{\"size\": \"30\"}}>\r\n                            {SideBarClosing === false ? <Icons.IoIosArrowDropleftCircle/> : <Icons.IoIosArrowDroprightCircle/>}\r\n                        </IconContext.Provider>\r\n                    </span>\r\n                    {SideBarClosing === false && <span style={{display: \"inline-block\", \"marginLeft\": \"10px\"}}>IP Manager</span>}\r\n                </div>\r\n            </SidebarHeader>\r\n            <SidebarContent>\r\n                    {\r\n                        list_item.map(function(item, index) {\r\n                            return(\r\n                                <Menu key={`sidebar_item_${index}`} iconShape=\"circle\">\r\n                                    <MenuItem icon={DynamicIcon(item.icon)}>{item.name}<Link onClick={() => setSideBarState(true)} to={item.path}/></MenuItem>\r\n                                </Menu>\r\n                            )\r\n                        })\r\n                    }\r\n            </SidebarContent>\r\n            <SidebarFooter style={{ textAlign: 'center' }}>\r\n                <div\r\n                    style={{\r\n                        padding: '20px 24px',\r\n                    }}>\r\n                    <img alt={\"VNPT Icon\"} width={\"30\"} src={VNPTIcon}/>\r\n                </div>\r\n            </SidebarFooter>\r\n        </ProSidebar>\r\n    );\r\n}\r\n\r\nexport default SideBarCustom;","import {ERROR, LOADED, LOADING} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {IconContext} from \"react-icons\";\r\nimport {BiAddToQueue, FaRegWindowClose, MdOutlineSave, RiFunctionLine} from \"react-icons/all\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {\r\n    DELETE_PROPERTY,\r\n    Get_PRO_INFO, INSERT_PROPERTY,\r\n    LIST_OBJ_TYPE,\r\n    LIST_PROPERTY,\r\n    LIST_RULES,\r\n    UPDATE_PROPERTY,\r\n    WEB_BASE_NAME\r\n} from \"../API_URL\";\r\nimport Select from \"react-select\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport Modal from \"../Modal\";\r\n\r\nfunction Property(props) {\r\n    const CREATE_PROPERTY = 1;\r\n    const {_title} = props;\r\n    const dispatch = useDispatch();\r\n    const [ShowAppBox, setShowAppBox]           = useState(false);\r\n    const [PropertyData, setPropertyData]       = useState([]);\r\n    const [ListObjType, setListObjType]         = useState([]);\r\n    const [ListRule, setListRule]               = useState([]);\r\n    const [DetailData, setDetailData]           = useState({});\r\n    const [ModalSelectData, setModalSelectData] = useState(null);\r\n    const [ModalSelectData1, setModalSelectData1] = useState(null);\r\n    const [ModalData, setModalData]             = useState({mode: -1, data: {list_property: [], list_property_assign: []}, show: false, title: \"no title\"});\r\n\r\n    const __FetchFunction = (URL, body, callback, err_cb) => {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body),\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(URL, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    dispatch({type: LOADED})\r\n                    callback(result.msg, null);\r\n                } else {\r\n                    callback(null, result.msg);\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: result.msg\r\n                    });\r\n                    toast.error(result.msg);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n            });\r\n    }\r\n\r\n    const SearchByPropertyName = (e) => {\r\n\r\n    }\r\n\r\n    const CreateProperty = () => {\r\n        console.log(ListObjType);\r\n\r\n        setModalSelectData(null);\r\n        setModalSelectData1(null);\r\n        setModalData({\r\n            show: true,\r\n            data: {\r\n                \"pro_name\": \"\",\r\n                \"pro_desc\": \"\",\r\n                \"rule_id\": -1,\r\n                \"list_obj_type\": []\r\n            },\r\n            title: \"Create property\",\r\n            mode: CREATE_PROPERTY\r\n        });\r\n    }\r\n\r\n    const ChangeRequired = (e, index) => {\r\n        let CloneDetailData = {...DetailData};\r\n        CloneDetailData.ListObjType[index].is_required = !DetailData.ListObjType[index].is_required;\r\n        setDetailData(CloneDetailData);\r\n    }\r\n\r\n    const ChangeRequiredInModal = (index) => {\r\n        let CloneDetailData = [...ModalSelectData1];\r\n        CloneDetailData[index].is_required = !ModalSelectData1[index].is_required;\r\n        setModalSelectData1(CloneDetailData);\r\n    }\r\n\r\n    const UpdateProperty = () => {\r\n        let BodyData = {\r\n            \"pro_id\": DetailData.pro_id,\r\n            \"pro_name\": DetailData.pro_name,\r\n            \"pro_desc\": DetailData.pro_desc,\r\n            \"rule_id\": DetailData.rule.value,\r\n            \"list_obj_type\": []\r\n        };\r\n        for (let i of DetailData.ListObjType) {\r\n            BodyData.list_obj_type.push({\r\n                \"obj_type_id\": i.value,\r\n                \"is_required\": i.is_required\r\n            });\r\n        }\r\n        __FetchFunction(UPDATE_PROPERTY, BodyData, function(response) {\r\n            __FetchFunction(LIST_PROPERTY, undefined, function(resp, err) {\r\n                if (err !== null) {\r\n                    setPropertyData(resp);\r\n                    if (resp.length > 0) {\r\n                        GetPropertyInfo(resp[0]);\r\n                    }\r\n                } else {\r\n                    GetPropertyInfo(DetailData);\r\n                }\r\n            });\r\n            toast.success(response);\r\n        });\r\n    }\r\n\r\n    const ChangeProperty = (item) => {\r\n        setModalSelectData(item);\r\n    }\r\n\r\n    const ChangeObjectTypeinModal = (item) => {\r\n      setModalSelectData1(item);\r\n    }\r\n\r\n    const InsertProperty = () => {\r\n        if (ModalData.data.pro_name.trim() === \"\") {\r\n            toast.error(\"Property needs a name!\");\r\n            return;\r\n        }\r\n        if (ModalSelectData === null) {\r\n            toast.error(\"Select a rule for property!\");\r\n            return;\r\n        }\r\n\r\n        if (ModalSelectData1 === null) {\r\n            toast.error(\"Select a least an object type!\");\r\n            return;\r\n        }\r\n\r\n      let BodyData = {\r\n          \"pro_name\": ModalData.data.pro_name,\r\n          \"pro_desc\": ModalData.data.pro_desc,\r\n          \"rule_id\": ModalSelectData.value,\r\n          \"list_obj_type\": []\r\n      }\r\n        for (let i of ModalSelectData1) {\r\n            BodyData.list_obj_type.push({\r\n                obj_type_id: i.value,\r\n                is_required: i.is_required\r\n            });\r\n        }\r\n      __FetchFunction(INSERT_PROPERTY, BodyData, function(response, err) {\r\n          if (err !== null) return;\r\n          setModalData({\r\n              ...ModalData,\r\n              show: false\r\n          });\r\n          GetListProperty();\r\n          toast.success(response);\r\n      });\r\n    }\r\n\r\n    const DeleteProperty = () => {\r\n        let BodyData = {\r\n            \"pro_id\": DetailData.pro_id\r\n        };\r\n        __FetchFunction(DELETE_PROPERTY, BodyData, function(response) {\r\n            __FetchFunction(LIST_PROPERTY, undefined, function(resp) {\r\n                setPropertyData(resp);\r\n                if (resp.length > 0) {\r\n                    GetPropertyInfo(resp[0]);\r\n                }\r\n            });\r\n            toast.success(response);\r\n        });\r\n    }\r\n\r\n    const GetPropertyInfo = (item) => {\r\n        let BodyData = {\r\n            \"pro_id\": item.pro_id\r\n        };\r\n        __FetchFunction(Get_PRO_INFO, BodyData, function (response) {\r\n            let TempItem = {...item};\r\n            TempItem.ListObjType = [];\r\n            for (let i of response) {\r\n                TempItem.ListObjType.push({\r\n                    value: i.obj_type_id,\r\n                    label: i.obj_type_name,\r\n                    is_required: i.is_required\r\n                });\r\n            }\r\n            for (let i of ListRule) {\r\n                if (i.value === TempItem.rule_id) {\r\n                    TempItem.rule = i;\r\n                    break;\r\n                }\r\n            }\r\n            setDetailData(TempItem);\r\n        });\r\n    }\r\n\r\n    const ChangeObjType = (item) => {\r\n        console.log(item);\r\n        setDetailData({\r\n            ...DetailData,\r\n            ListObjType: item\r\n        });\r\n    }\r\n\r\n    const ChangeRule = (item) => {\r\n        setDetailData({\r\n            ...DetailData,\r\n            rule: item\r\n        })\r\n    }\r\n\r\n    const ToggleApplicationBox = (e) => {\r\n        e.stopPropagation();\r\n        setShowAppBox(!ShowAppBox);\r\n    }\r\n\r\n    const HandleClickOut = (e) => {\r\n        setModalData({\r\n            ...ModalData,\r\n            show: false\r\n        })\r\n    }\r\n\r\n    const GetListProperty = () => {\r\n        __FetchFunction(LIST_PROPERTY, undefined, function(response) {\r\n            let result = [];\r\n            for (let i of response) {\r\n                i.ListObjType = [];\r\n                result.push(i);\r\n            }\r\n            setPropertyData(result);\r\n        });\r\n    }\r\n\r\n    useEffect(function() {\r\n        dispatch({type: LOADING});\r\n        document.title = _title + WEB_BASE_NAME;\r\n        let ListAPI = [{\r\n            url: LIST_PROPERTY,\r\n            requestOptions: {\r\n                method: 'POST',\r\n                redirect: 'follow'\r\n            }\r\n        }, {\r\n            url: LIST_OBJ_TYPE,\r\n            requestOptions: {\r\n                method: 'POST',\r\n                redirect: 'follow'\r\n            }\r\n        }, {\r\n            url: LIST_RULES,\r\n            requestOptions: {\r\n                method: 'POST',\r\n                redirect: 'follow'\r\n            }\r\n        }];\r\n\r\n        Promise.all(ListAPI.map((item => fetch(item.url, item.requestOptions))))\r\n            .then(responses => Promise.all(responses.map(resp => resp.json())))\r\n            .then(resp => {\r\n                let HasErr = false;\r\n                for (let i of resp) {\r\n                    if (i.code !== 200) {\r\n                        HasErr = true;\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            msg: resp.msg\r\n                        });\r\n                    }\r\n                }\r\n                if (!HasErr) {\r\n                    dispatch({type: LOADED});\r\n                    let result = [];\r\n                    for (let i of resp[0].msg) {\r\n                        i.ListObjType = [];\r\n                        result.push(i);\r\n                    }\r\n                    setPropertyData(result);\r\n                    if (result.length > 0) {\r\n                        GetPropertyInfo(result[0]);\r\n                    }\r\n                    let TempArr = [];\r\n                    for (let i of resp[1].msg) {\r\n                        TempArr.push({\r\n                            value: i.obj_type_id,\r\n                            label: i.obj_type_name,\r\n                            is_required: false\r\n                        });\r\n                    }\r\n                    setListObjType(TempArr);\r\n                    TempArr = [];\r\n                    for (let i of resp[2].msg) {\r\n                        TempArr.push({\r\n                            value: i.rule_id,\r\n                            label: i.rule_name\r\n                        });\r\n                    }\r\n                    setListRule(TempArr);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                });\r\n            });\r\n        return () => {\r\n            setPropertyData([]);\r\n            setListRule([]);\r\n            setListObjType([]);\r\n        }\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"container\" onClick={() => setShowAppBox(false)}>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={4000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            <Modal\r\n                show={ModalData.show}\r\n                title={ModalData.title}\r\n                onClickOut={HandleClickOut}\r\n                CloseModal={_ => setModalData({...ModalData, show: false})}\r\n                WrapClass={\"modal_wrap\"}>\r\n                {ModalData.mode === CREATE_PROPERTY && (\r\n                    <div style={{\r\n                        minWidth: '60vw',\r\n                    }}>\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor={\"_insert_property_name\"}>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Property's name:</span>\r\n                            </label>\r\n                            <input className={\"form-control\"} id={\"_insert_property_name\"} placeholder={\"Type a name...\"} value={ModalData.data.pro_name} onChange={e => {setModalData({\r\n                                ...ModalData,\r\n                                data: {\r\n                                    ...ModalData.data,\r\n                                    pro_name: e.target.value\r\n                                }\r\n                            })}}/>\r\n                        </div>\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor={\"_insert_property_desc\"}>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Description:</span>\r\n                            </label>\r\n                            <input className={\"form-control\"} id={\"_insert_property_desc\"} placeholder={\"Description\"} value={ModalData.data.pro_desc} onChange={e => {setModalData({\r\n                                ...ModalData,\r\n                                data: {\r\n                                    ...ModalData.data,\r\n                                    pro_desc: e.target.value\r\n                                }\r\n                            })}}/>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20 margin-bottom-20\">\r\n                            <label>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Select object type:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={ListObjType}\r\n                                value={ModalSelectData1}\r\n                                onChange={ChangeObjectTypeinModal}\r\n                                isMulti\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20 margin-bottom-20\">\r\n                            <label>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Select rule:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={ListRule}\r\n                                value={ModalSelectData}\r\n                                onChange={ChangeProperty}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            Array.isArray(ModalSelectData1) && ModalSelectData1.map((item, index) => {\r\n                                return (\r\n                                    <div className={\"margin-top-20\"} key={index}>\r\n                                        <input id={\"__cb_modal\" + index} type={\"checkbox\"} checked={item.is_required} onChange={e => ChangeRequiredInModal(index)}/>\r\n                                        <label htmlFor={\"__cb_modal\" + index} className={\"margin-left-5\"}>This property is required in {item.label}</label>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                        <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                        <button className={\"btn theme_green pull-right margin-right-10\"} onClick={InsertProperty}>Create</button>\r\n                    </div>\r\n                )}\r\n            </Modal>\r\n\r\n            <div className=\"box-style\" style={{height: \"calc(100% - 40px)\", padding: '20px', display: 'flex', position: 'relative'}}>\r\n\r\n                <div style={{width: '300px', height: 'calc(100% - 30px)', display: 'inline-block'}}>\r\n                    <input className=\"form-control\" disabled={true} onKeyDown={SearchByPropertyName} placeholder=\"Find by property's name ...\"/>\r\n                    <div className=\"list-container margin-top-10\">\r\n                        {PropertyData.length === 0 ? (\r\n                            <div>\r\n                                <span>No property founded!</span>\r\n                            </div>\r\n                        ) : PropertyData.map((item, index) => {\r\n                            return (\r\n                                <div\r\n                                    key={index}\r\n                                    className=\"list-item\"\r\n                                    onClick={_ => GetPropertyInfo(item)}>\r\n                                    {item.pro_name}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {Array.isArray(PropertyData) && PropertyData.length > 0 && (\r\n                    <div style={{\r\n                        width: 'calc(100% - 350px)',\r\n                        height: 'calc(100% - 70px)',\r\n                        marginLeft: '50px',\r\n                        marginTop: '50px',\r\n                        display: 'inline-block',\r\n                        overflow: 'auto',\r\n                        padding: '10px'}}>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"name\">\r\n                                <span className=\"bold\">Property's name:</span>\r\n                            </label>\r\n                            <input className=\"form-control\" id=\"name\" value={DetailData.pro_name} onChange={e => {\r\n                                setDetailData({\r\n                                    ...DetailData,\r\n                                    pro_name: e.target.value\r\n                                })\r\n                            }}/>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"desc\">\r\n                                <span className=\"bold\">Property's description:</span>\r\n                            </label>\r\n                            <input className=\"form-control\" id=\"desc\" value={DetailData.pro_desc} onChange={e => {\r\n                                setDetailData({\r\n                                    ...DetailData,\r\n                                    pro_desc: e.target.value\r\n                                })\r\n                            }}/>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"type\">\r\n                                <span className=\"bold\">Object type:</span>\r\n                            </label>\r\n                            <Select\r\n                                id=\"type\"\r\n                                isMulti\r\n                                value={DetailData.ListObjType}\r\n                                options={ListObjType}\r\n                                onChange={ChangeObjType}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"rule\">\r\n                                <span className=\"bold\">Rule:</span>\r\n                            </label>\r\n                            <Select\r\n                                id=\"rule\"\r\n                                value={DetailData.rule}\r\n                                options={ListRule}\r\n                                onChange={ChangeRule}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            DetailData.hasOwnProperty(\"ListObjType\") && DetailData.ListObjType.map((item, index) => {\r\n                                return (\r\n                                    <div className={\"margin-top-20\"} key={index}>\r\n                                        <input id={\"__cb\" + index} type={\"checkbox\"} checked={item.is_required} onChange={e => ChangeRequired(e, index)}/>\r\n                                        <label htmlFor={\"__cb\" + index} className={\"margin-left-5\"}>'{DetailData.pro_name}' is required in {item.label}</label>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <small className=\"italic\">(Created: {DetailData.created_at}, Last update: {DetailData.updated_at})</small>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <button className=\"btn pull-right theme_red margin-left-10\" onClick={DeleteProperty}>\r\n                                <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                    <FaRegWindowClose/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Delete\r\n                            </button>\r\n                            <button className=\"btn pull-right theme_cyan\" onClick={UpdateProperty}>\r\n                                <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                    <MdOutlineSave/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Save change\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div onClick={e => e.stopPropagation()}>\r\n                    <span className=\"fab-button\" onClick={ToggleApplicationBox}>\r\n                        <IconContext.Provider value={{size: 25, color: 'white'}}>\r\n                            <RiFunctionLine/>\r\n                        </IconContext.Provider>\r\n                    </span>\r\n\r\n                    <div className={ShowAppBox ? \"application-box flex\" : \"application-box\"}>\r\n                        <button className=\"btn theme_green700 margin-10\" onClick={CreateProperty}>\r\n                            <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                <BiAddToQueue/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Create property</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Property;","import React from 'react';\r\nimport './Loading.sass'\r\n\r\nfunction Loading (props) {\r\n    return(\r\n        <div className=\"loading_container\">\r\n            <div className={\"center-div\"}>\r\n                <div className={\"loader\"}>Loading</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React, {useEffect, useState} from \"react\";\r\nimport {Route, BrowserRouter as Router, Switch, Redirect} from \"react-router-dom\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Rules from \"./components/Rules\";\r\nimport {LIST_OBJ_TYPE} from \"./components/API_URL\";\r\nimport {ERROR, LOADED, LOADING} from \"./components/Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ObjectA from \"./components/ObjectA\";\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport SideBarCustom from \"./components/ProSideBarCustom\";\r\nimport Property from \"./components/Property\";\r\nimport Loading from \"./components/Loading\";\r\n\r\nconst App = () => {\r\n    let ListSideBarItem                         = [];\r\n    const dispatch                              = useDispatch();\r\n    const [ListObjectType, setListObjectType]   = useState([]);\r\n    const { loading, error, _msg }              = useSelector(state => state.Status);\r\n\r\n    useEffect(function() {\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(LIST_OBJ_TYPE, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    dispatch({type: LOADED});\r\n                    for (let i of result.msg) {\r\n                        ListSideBarItem.push({\r\n                            ...i,\r\n                            path: `/${i.obj_type_name.toLowerCase()}`,\r\n                            name: i.obj_type_name,\r\n                            autoRender: true\r\n                        });\r\n                    }\r\n                    ListSideBarItem.push({\r\n                        icon: \"BsCardList\",\r\n                        path: \"/rules\",\r\n                        name: \"Rules\",\r\n                        autoRender: false\r\n                    }, {\r\n                        icon: \"AiOutlinePropertySafety\",\r\n                        path: \"/property\",\r\n                        name: \"Property\",\r\n                        autoRender: false\r\n                    });\r\n                    setListObjectType(ListSideBarItem);\r\n                } else {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: result.msg[0]\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n            });\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n            <Router>\r\n                <SideBarCustom list_item={ListObjectType}/>\r\n                <Switch>\r\n                    {\r\n                        ListObjectType.map(function(item, index) {\r\n                            return (\r\n                                item.autoRender === true && (\r\n                                    <Route exact path={item.path}>\r\n                                        <ObjectA _title={item.name} _obj_type_id={item.obj_type_id} _obj_type_name={item.obj_type_name}/>\r\n                                    </Route>\r\n                                )\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                    <Route exact path=\"/rules\">\r\n                        <Rules _title=\"Rules\"/>\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/property\">\r\n                        <Property _title=\"Rules\"/>\r\n                    </Route>\r\n\r\n                    <Route>\r\n                        <NotFound _title=\"404\"/>\r\n                    </Route>\r\n                </Switch>\r\n                <Redirect to={(Array.isArray(ListObjectType) && ListObjectType.length > 0) ? ListObjectType[0].path : \"/rules\"}/>\r\n            </Router>\r\n            {loading && <Loading/>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {ERROR, LOADING, LOADED, SUCCESS} from \"./StatusActionsDefinition\";\r\n\r\nconst initState = {\r\n    loading: true,\r\n    error: false,\r\n    _msg: \"\"\r\n}\r\n\r\nconst StatusReducer = (state = initState, payload) => {\r\n    const { type } = payload;\r\n    switch (type) {\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n                _msg: \"loading\"\r\n            }\r\n\r\n        case ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false,\r\n                _msg: payload._msg\r\n            }\r\n\r\n        case LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                _msg: \"\"\r\n            }\r\n\r\n        case SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                _msg: \"\"\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default StatusReducer;","import { combineReducers } from \"redux\";\r\nimport SideBarReducer from './ReducersAndActions/SideBar/SideBarReducer';\r\nimport StatusReducer from './ReducersAndActions/Status/StatusReducer';\r\n\r\nconst RootReducer = combineReducers({\r\n    Status: StatusReducer\r\n});\r\n\r\nexport default RootReducer;","import { createStore } from \"redux\";\r\nimport RootReducer from './RootReducer';\r\n\r\nconsole.log(process.env.NODE_ENV);\r\nlet store;\r\nif (process.env.NODE_ENV === \"development\") {\r\n    store = createStore(RootReducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n} else {\r\n    store = createStore(RootReducer);\r\n}\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport Store from './components/Redux/StoreRedux';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>,\r\n\r\n  <Provider store={Store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}