{"version":3,"sources":["components/API_URL.js","components/NotFound/index.js","components/Redux/ReducersAndActions/SideBar/SideBarActionsDefinition.js","components/Redux/ReducersAndActions/Status/StatusActionsDefinition.js","components/Modal/index.js","components/Rules/index.js","components/ObjectA/index.js","components/ProSideBarCustom/sidebar_bg.png","components/Redux/ReducersAndActions/Authentication/AuthenActionsDefinition.js","components/ProSideBarCustom/vnpt.svg","components/ProSideBarCustom/index.js","components/Property/index.js","components/Loading/index.js","components/Login/index.js","components/User/index.js","App.js","reportWebVitals.js","components/Redux/ReducersAndActions/Status/StatusReducer.js","components/Redux/ReducersAndActions/Authentication/AuthenReducer.js","components/Redux/RootReducer.js","components/Redux/StoreRedux.js","index.js"],"names":["BASE_URL","process","WEB_BASE_NAME","GET_PRO_BY_OBJ_ID","OBJECT_URL","LIST_OBJ_TYPE","OBJECT_TYPE_URL","LIST_PROPERTY","PROPERTY_URL","LIST_RULES","RULES_URL","LIST_USERS","USER_URL","NotFound","props","_title","dispatch","useDispatch","useEffect","document","title","className","to","onClick","type","index","LOADING","LOADED","ERROR","SUCCESS","Modal","show","children","onClickOut","WrapClass","CloseModal","ModalWidth","style","width","undefined","e","stopPropagation","Provider","value","size","color","maxHeight","overflowY","overflowX","padding","Rules","token","useSelector","state","Authen","useState","DetailData","setDetailData","showAppBox","setShowAppBox","rulesData","setRulesData","SearchBoxValue","setSearchBoxValue","mode","data","ModalData","setModalData","Status","loading","error","_msg","notMatchRegex","testRegex","setTestRegex","__FetchFunction","URL","body","callback","dismiss","myHeaders","Headers","append","requestOptions","method","headers","JSON","stringify","redirect","fetch","then","res","json","result","code","msg","toast","catch","GetRuleInfo","item","regex","RegExp","rule_regex","test","GetListRule","response","length","ListAPI","url","Promise","all","map","responses","resp","results","HasErr","i","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","theme","draggable","pauseOnHover","_","minWidth","htmlFor","textTransform","id","placeholder","rule_name","onChange","target","rule_desc","trim","BodyData","success","height","display","onKeyDown","keyCode","Array","isArray","marginLeft","marginTop","overflow","pathname","created_at","updated_at","swal","text","icon","buttons","dangerMode","isConfirm","rule_id","ObjectA","_obj_type_id","_obj_type_name","is_admin","obj_id","obj_name","ObjectData","setObjectData","ShowAppBox","ModalSelectData","setModalSelectData","uploaded","name","file","selectedFile","setSelectedFile","link","createElement","href","setAttribute","appendChild","click","removeChild","ChangeProDataWithExcel","GetListObject","cb","match_regex","GetObjectInfo","ObjectDataCopy","obj","obj_index","selected","reg","pro_value","ChangeProperty","tempArr","list_property_assign","isAssigned","pro_id","push","RemoveProperty","is_required","splice","UploadExcel","URI","FormData","ChangeFiles","files","cursor","textDecoration","accept","fontStyle","toLowerCase","minHeight","obj_desc","options","list_property","pro_name","ListNewProID","err","fontWeight","fontSize","temp1","temp2","label","pro_desc","CopyDetailData","ChangeProValue","val","temp","obj_type_id","NOT_LOGGED_IN","LOGGED_IN","SideBarCustom","list_item","fullname","SideBarClosed","setSideBarState","getWindowDimensions","window","innerWidth","innerHeight","windowsSize","setWindowSize","DynamicIcon","IconName","IconComponent","Icons","Logout","err_cb","handleResize","addEventListener","removeEventListener","image","SideBarBackGroundImage","breakPoint","collapsed","alignItems","letterSpacing","textOverflow","whiteSpace","iconShape","path","textAlign","borderRadius","border","Property","PropertyData","setPropertyData","ListObjType","setListObjType","ListRule","setListRule","ModalSelectData1","setModalSelectData1","GetPropertyInfo","TempItem","obj_type_name","rule","GetListProperty","TempArr","isMulti","checked","CloneDetailData","ChangeRequiredInModal","list_obj_type","disabled","console","log","hasOwnProperty","ChangeRequired","Loading","Login","email","setEmail","pass","setPass","onSubmit","event","preventDefault","User","UserData","setUserData","Genders","GetUserInfo","user","username","password","dob","gender_obj","phone","gender","uid","App","ListSideBarItem","ListObjectType","setListObjectType","raw","autoRender","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","StatusReducer","payload","ssid","localStorage","getItem","logged_in","jwt_decode","AuthenticationReducer","setItem","removeItem","RootReducer","combineReducers","store","createStore","ReactDOM","render","Store","getElementById"],"mappings":"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","file":"static/js/main.e0d2fc01.chunk.js","sourcesContent":["export const BASE_URL               = process.env.REACT_APP_BASEURL;\r\nexport const TEMPLATE_URL           = BASE_URL + \"asset/template/\";\r\nexport const REPORT_URL             = BASE_URL + \"asset/report/\";\r\nexport const WEB_BASE_NAME          = \" | IP  Manager\";;\r\n\r\n/*      OBJECT API URL       */\r\nconst OBJECT_URL                    = BASE_URL + 'obj/';\r\nexport const LIST_OBJECT            = OBJECT_URL + 'list';\r\nexport const GET_PRO_BY_OBJ_ID      = OBJECT_URL + 'get_object_info';\r\nexport const UPDATE_PRO_VALUE       = OBJECT_URL + 'update_property';\r\nexport const DELETE_OBJECT          = OBJECT_URL + 'delete';\r\nexport const INSERT_OBJECT          = OBJECT_URL + 'insert';\r\nexport const GET_TEMPLATE           = OBJECT_URL + 'get_excel_template';\r\nexport const INSERT_OBJECT_EXCEL    = OBJECT_URL + 'insert_object_excel';\r\nexport const EXPORT_DATA            = OBJECT_URL + 'export_data';\r\nexport const SEARCH_OBJECT          = OBJECT_URL + 'search';\r\n\r\n/*      OBJECT TYPE API URL    */\r\nconst OBJECT_TYPE_URL               = BASE_URL + 'obj_type/';\r\nexport const LIST_OBJ_TYPE          = OBJECT_TYPE_URL + 'list';\r\n\r\n/*      PROPERTY API URL    */\r\nconst PROPERTY_URL                  = BASE_URL + 'pro/';\r\nexport const LIST_PROPERTY          = PROPERTY_URL + 'list';\r\nexport const GET_PRO_INFO           = PROPERTY_URL + 'get_pro_info';\r\nexport const UPDATE_PROPERTY        = PROPERTY_URL + 'update';\r\nexport const INSERT_PROPERTY        = PROPERTY_URL + 'insert';\r\nexport const DELETE_PROPERTY        = PROPERTY_URL + 'delete';\r\nexport const GET_LIST_PRO_BY_OBJ_ID = PROPERTY_URL + 'get_list_pro_by_obj_id';\r\nexport const ADD_PRO_TO_OBJECT      = PROPERTY_URL + 'add_property_to_object';\r\n\r\n/*      Rules API URL   */\r\nconst RULES_URL                     = BASE_URL + 'rules/';\r\nexport const LIST_RULES             = RULES_URL + 'list';\r\nexport const INSERT_RULE            = RULES_URL + 'insert';\r\nexport const RULE_INFO              = RULES_URL + 'get_rule_info';\r\nexport const DELETE_RULE            = RULES_URL + 'delete';\r\nexport const UPDATE_RULE            = RULES_URL + 'update';\r\nexport const SEARCH_RULE            = RULES_URL + 'search';\r\n\r\n/*      User API URL   */\r\nconst USER_URL                     = BASE_URL + 'user/';\r\nexport const LOGIN                 = USER_URL + 'login';\r\nexport const LOGOUT                = USER_URL + 'logout';\r\nexport const LIST_USERS            = USER_URL + 'list';\r\nexport const UPDATE_USERS          = USER_URL + 'update';\r\nexport const DELETE_USERS          = USER_URL + 'delete';\r\nexport const GET_USER_INFO         = USER_URL + 'get_user_info';\r\nexport const CREATE_USER           = USER_URL + 'create';","import React, {useEffect} from \"react\";\r\nimport './NotFound.sass';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SELECT_ITEM} from \"../Redux/ReducersAndActions/SideBar/SideBarActionsDefinition\";\r\nimport {WEB_BASE_NAME} from \"../API_URL\";\r\n\r\nconst NotFound = (props) => {\r\n    const {_title}      = props;\r\n    const dispatch      = useDispatch();\r\n    const ChangeState   = () => {\r\n        dispatch({\r\n            type: SELECT_ITEM,\r\n            index: 0\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = _title + WEB_BASE_NAME;\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"notfound_wrap\">\r\n            <div className=\"center-div text-center\">\r\n                <span className=\"notfound_title\">404</span>\r\n                <span className=\"notfound_desc\">\r\n                    Hmm, seem you're lost! Let's go&nbsp;\r\n                    <Link to=\"/blacklist\" onClick={ChangeState}>\r\n                        back\r\n                    </Link>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","export const OPEN_SIDEBAR = \"OPEN\";\r\nexport const CLOSE_SIDEBAR = \"CLOSE\";\r\nexport const SELECT_ITEM = \"SELECT_ITEM\";","export const LOADING    = \"loading\";\r\nexport const LOADED     = \"loaded\";\r\nexport const ERROR      = \"error\";\r\nexport const SUCCESS    = \"success\";","import React from 'react';\r\nimport { IoMdCloseCircle } from \"react-icons/io\";\r\nimport {IconContext} from \"react-icons\";\r\nimport \"./Modal.sass\";\r\n\r\nconst Modal = (props) => {\r\n    const { show, title, children, onClickOut, WrapClass, CloseModal, ModalWidth } = props;\r\n    if (show !== true) return null;\r\n    return (\r\n        <div className={WrapClass} onClick={onClickOut}>\r\n            <div className={\"modal_container\"} style={ModalWidth ? {width: ModalWidth} : undefined} onClick={e => e.stopPropagation()}>\r\n                <div className=\"modal_title\">\r\n                    <span className={\"modal_close_btn\"} onClick={CloseModal}>\r\n                        <IconContext.Provider value={{size: 16, color: \"#939393\"}}>\r\n                            <IoMdCloseCircle/>\r\n                        </IconContext.Provider>\r\n                    </span>\r\n                    <p>{title}</p>\r\n                </div>\r\n\r\n                {/*Doc: https://reactjs.org/docs/jsx-in-depth.html*/}\r\n                <div style={{\r\n                    maxHeight: '95vh',\r\n                    overflowY: 'auto',\r\n                    overflowX: 'auto',\r\n                    padding: '0 10px',\r\n                }}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, {useEffect, useState} from 'react';\r\nimport './../../GlobalStyle.sass';\r\nimport {\r\n    DELETE_RULE,\r\n    INSERT_RULE,\r\n    LIST_OBJ_TYPE,\r\n    LIST_RULES,\r\n    RULE_INFO,\r\n    SEARCH_OBJECT,\r\n    SEARCH_RULE, UPDATE_RULE,\r\n    WEB_BASE_NAME\r\n} from \"../API_URL\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ERROR, LOADED, LOADING} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FaRegWindowClose, RiFunctionLine, MdOutlineSave, BiAddToQueue} from \"react-icons/all\";\r\nimport {IconContext} from \"react-icons\";\r\nimport swal from \"sweetalert\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport Modal from \"../Modal\";\r\n\r\n\r\nfunction Rules (props) {\r\n    const ADD_RULE_MODE                         = 1;\r\n    const {_title}                              = props;\r\n    const dispatch                              = useDispatch();\r\n    const {token}                               = useSelector(state => state.Authen);\r\n    const [DetailData, setDetailData]           = useState({});\r\n    const [showAppBox, setShowAppBox]           = useState(false);\r\n    const [rulesData, setRulesData]             = useState([]);\r\n    const [SearchBoxValue, setSearchBoxValue]   = useState(\"\");\r\n    const [ModalData, setModalData]             = useState({mode: -1, data: {}, show: false, title: \"no title\"});\r\n    const { loading, error, _msg }              = useSelector(state => state.Status);\r\n    const [testRegex, setTestRegex]             = useState({notMatchRegex: false, value: \"\"});\r\n\r\n    const __FetchFunction = (URL, body, callback, dismiss = true) => {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body),\r\n            redirect: 'follow'\r\n        };\r\n        dispatch({type: LOADING});\r\n        fetch(URL, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    if (dismiss) dispatch({type: LOADED})\r\n                    callback(result.msg, null);\r\n                } else {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: result.msg[0]\r\n                    });\r\n                    toast.error(result.msg);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n                toast.error(e);\r\n            });\r\n    }\r\n\r\n    const ToggleApplicationBox = (e) => {\r\n        e.stopPropagation();\r\n        setShowAppBox(!showAppBox);\r\n    }\r\n\r\n    const SearchByRuleName = (e) => {\r\n        if (e.keyCode === 13 && loading === false) {\r\n            let BodyData = {\r\n                \"ssid\": token,\r\n                \"rule_name\": SearchBoxValue\r\n            }\r\n            __FetchFunction(SEARCH_RULE, BodyData, function(response) {\r\n                setRulesData(response);\r\n                if (response.length > 0) {\r\n                    GetRuleInfo(response[0]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const GetRuleInfo = item => {\r\n        let regex = new RegExp(item.rule_regex, 'g');\r\n        setTestRegex({\r\n            ...testRegex,\r\n            notMatchRegex: !regex.test(\"\"),\r\n            value: \"\"\r\n        });\r\n        setDetailData(item);\r\n    }\r\n\r\n    const CheckRegex = e => {\r\n        let regex = new RegExp(DetailData.rule_regex, 'g');\r\n        setTestRegex({\r\n            ...testRegex,\r\n            value: e.target.value,\r\n            notMatchRegex: !regex.test(e.target.value)\r\n        });\r\n    }\r\n    \r\n    const DeleteRule = () => {\r\n      swal({\r\n          title: \"Delete\",\r\n          text: `Rule data will be removed and CAN NOT recover. Continue?`,\r\n          icon: \"warning\",\r\n          buttons: true,\r\n          dangerMode: true})\r\n          .then(isConfirm => {\r\n              if (isConfirm) {\r\n                  let BodyData = {\r\n                      \"ssid\": token,\r\n                      \"rule_id\": DetailData.rule_id\r\n                  };\r\n                  __FetchFunction(DELETE_RULE, BodyData, function(response) {\r\n                      GetListRule();\r\n                      toast.success(response);\r\n                  }, false);\r\n              }\r\n          })\r\n    }\r\n\r\n    const GetListRule = () => {\r\n        let BodyData = {\r\n            \"ssid\": token\r\n        }\r\n      __FetchFunction(LIST_RULES, BodyData, function (response) {\r\n          setRulesData(response);\r\n          if (response.length > 0) {\r\n              GetRuleInfo(response[0]);\r\n          }\r\n      });\r\n    }\r\n\r\n    const HandleClickOut = (e) => {\r\n        setModalData({\r\n            ...ModalData,\r\n            show: false\r\n        })\r\n    }\r\n\r\n    const CreateNewRule = () => {\r\n      setModalData({\r\n          mode: ADD_RULE_MODE,\r\n          data: {\r\n              rule_name: \"\",\r\n              rule_desc: \"\",\r\n              rule_regex: \"\"\r\n          },\r\n          show: true,\r\n          title: \"Create new rule\"\r\n      })\r\n    }\r\n\r\n    const InsertRule = () => {\r\n      if (ModalData.data.rule_name.trim() === \"\") {\r\n          toast.error(\"Rule needs a name\");\r\n          return;\r\n      }\r\n      let BodyData = {\r\n          \"ssid\": token,\r\n          \"rule_name\": ModalData.data.rule_name,\r\n          \"rule_desc\": ModalData.data.rule_desc,\r\n          \"rule_regex\": ModalData.data.rule_regex\r\n      }\r\n      __FetchFunction(INSERT_RULE, BodyData, function(response) {\r\n          setModalData({\r\n              ...ModalData,\r\n              show: false\r\n          });\r\n          GetListRule();\r\n          toast.success(response);\r\n      }, false);\r\n    }\r\n\r\n    const SaveRuleChange = () => {\r\n      if (DetailData.rule_name.trim() === \"\") {\r\n          toast.error(\"Rule needs a name\");\r\n          return;\r\n      }\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            \"rule_id\"   : DetailData.rule_id,\r\n            \"rule_name\" : DetailData.rule_name,\r\n            \"rule_desc\" : DetailData.rule_desc,\r\n            \"rule_regex\": DetailData.rule_regex\r\n        }\r\n        __FetchFunction(UPDATE_RULE, BodyData, function(response) {\r\n            setModalData({\r\n                ...ModalData,\r\n                show: false\r\n            });\r\n            GetListRule();\r\n            toast.success(response);\r\n        }, false);\r\n    }\r\n\r\n    useEffect(function() {\r\n        dispatch({type: LOADING});\r\n        document.title = _title + WEB_BASE_NAME;\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let ListAPI = [{\r\n           url: LIST_RULES,\r\n           requestOptions: {\r\n               method: 'POST',\r\n               redirect: 'follow',\r\n               headers: myHeaders,\r\n               body: JSON.stringify({\"ssid\": token})\r\n           }\r\n        }];\r\n\r\n        Promise.all(ListAPI.map(item => fetch(item.url, item.requestOptions)))\r\n            .then(responses => Promise.all(responses.map(resp => resp.json())))\r\n            .then(results => {\r\n                let HasErr = false;\r\n                for (let i of results) {\r\n                    if (i.code !== 200) {\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            msg: i.msg\r\n                        });\r\n                        HasErr = true;\r\n                    }\r\n                    if (!HasErr) {\r\n                        dispatch({type: LOADED});\r\n                        setRulesData(results[0].msg);\r\n                        if (results[0].msg.length > 0) {\r\n                            GetRuleInfo(results[0].msg[0]);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n            });\r\n        return () => {\r\n            setRulesData([]);\r\n        }\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"container\" onClick={() => setShowAppBox(false)}>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            <Modal\r\n                show={ModalData.show}\r\n                title={ModalData.title}\r\n                onClickOut={HandleClickOut}\r\n                CloseModal={_ => setModalData({...ModalData, show: false})}\r\n                WrapClass={\"modal_wrap\"}>\r\n                {\r\n                    ModalData.mode === ADD_RULE_MODE && (\r\n                        <div style={{\r\n                            minWidth: '60vw',\r\n                        }}>\r\n                            <div className=\"margin-top-20\">\r\n                                <label htmlFor={\"_insert_rule_name\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Rule's name:</span>\r\n                                </label>\r\n                                <input className={\"form-control\"} id={\"_insert_rule_name\"} placeholder={\"Rule's name\"} value={ModalData.data.rule_name} onChange={e => {setModalData({\r\n                                    ...ModalData,\r\n                                    data: {\r\n                                        ...ModalData.data,\r\n                                        rule_name: e.target.value\r\n                                    }\r\n                                })}}/>\r\n                            </div>\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <label htmlFor={\"_insert_rule_desc\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Rule's desc:</span>\r\n                                </label>\r\n                                <input className={\"form-control\"} id={\"_insert_rule_desc\"} placeholder={\"Rule's name\"} value={ModalData.data.rule_desc} onChange={e => {setModalData({\r\n                                    ...ModalData,\r\n                                    data: {\r\n                                        ...ModalData.data,\r\n                                        rule_desc: e.target.value\r\n                                    }\r\n                                })}}/>\r\n                            </div>\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <label htmlFor={\"_insert_rule_regex\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Rule's regex:</span>\r\n                                </label>\r\n                                <input className={\"form-control\"} id={\"_insert_rule_regex\"} placeholder={\"Rule's name\"} value={ModalData.data.rule_regex} onChange={e => {setModalData({\r\n                                    ...ModalData,\r\n                                    data: {\r\n                                        ...ModalData.data,\r\n                                        rule_regex: e.target.value\r\n                                    }\r\n                                })}}/>\r\n                            </div>\r\n                            <div className={\"margin-top-25\"}>\r\n                                <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                                <button className={\"btn pull-right margin-right-10 theme_green\"} onClick={InsertRule}>Create</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </Modal>\r\n\r\n            <div className=\"box-style\" style={{height: \"calc(100% - 40px)\", padding: '20px', display: 'flex', position: 'relative'}}>\r\n\r\n                <div style={{width: '300px', height: 'calc(100% - 30px)', display: 'inline-block'}}>\r\n                    <input className=\"form-control\" onChange={e => setSearchBoxValue(e.target.value)} onKeyDown={SearchByRuleName} placeholder=\"Find by rule's name ...\"/>\r\n                    <div className=\"list-container margin-top-10\">\r\n                        {rulesData.length === 0 ? (\r\n                            <div>\r\n                                <span>No rule founded!</span>\r\n                            </div>\r\n                        ) : rulesData.map((item, index) => {\r\n                            return (\r\n                                <div\r\n                                    key={index}\r\n                                    className=\"list-item\"\r\n                                    onClick={_ => GetRuleInfo(item)}>\r\n                                    {item.rule_name}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {Array.isArray(rulesData) && rulesData.length > 0 && (<div style={{\r\n                    width: 'calc(100% - 350px)',\r\n                    height: 'calc(100% - 70px)',\r\n                    marginLeft: '50px',\r\n                    marginTop: '50px',\r\n                    display: 'inline-block',\r\n                    overflow: 'auto',\r\n                    padding: '10px'}}>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"name\">\r\n                            <span className=\"bold\">Rule's name:</span>\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"name\" value={DetailData.rule_name} onChange={e => {\r\n                            setDetailData({\r\n                                ...DetailData,\r\n                                rule_name: e.target.value\r\n                            })\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"desc\">\r\n                            <span className=\"bold\">Rule's description:</span>\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"desc\" value={DetailData.rule_desc} onChange={e => {\r\n                            setDetailData({\r\n                                ...DetailData,\r\n                                rule_desc: e.target.value\r\n                            })\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"reg\">\r\n                            <span className=\"bold\">Rule's regex: </span>\r\n                            (Regex instruction <Link target=\"_blank\" to={{pathname: \"https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference\"}}>here</Link>)\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"reg\" value={DetailData.rule_regex} onChange={e => {\r\n                            setDetailData({\r\n                                ...DetailData,\r\n                                rule_regex: e.target.value\r\n                            })\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <label htmlFor=\"test_regex\">\r\n                            <span className=\"bold\">Test regex: </span>\r\n                        </label>\r\n                        <input className=\"form-control\" id=\"test_regex\" placeholder=\"Type something\" value={testRegex.value} onChange={CheckRegex}/>\r\n                        {testRegex.notMatchRegex && <small className=\"error\">Not match regex</small>}\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <small className=\"italic\">(Created: {DetailData.created_at}, Last update: {DetailData.updated_at})</small>\r\n                    </div>\r\n\r\n                    <div className=\"margin-top-20\">\r\n                        <button className=\"btn pull-right theme_red margin-left-10\" onClick={DeleteRule}>\r\n                            <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                <FaRegWindowClose/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Delete rule\r\n                        </button>\r\n                        <button className=\"btn pull-right theme_cyan\" onClick={SaveRuleChange}>\r\n                            <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                <MdOutlineSave/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Save change\r\n                        </button>\r\n                    </div>\r\n                </div>)}\r\n\r\n                <div onClick={e => e.stopPropagation()}>\r\n                    <span className=\"fab-button\" onClick={ToggleApplicationBox}>\r\n                        <IconContext.Provider value={{size: 25, color: 'white'}}>\r\n                            <RiFunctionLine/>\r\n                        </IconContext.Provider>\r\n                    </span>\r\n\r\n                    <div className={showAppBox ? \"application-box flex\" : \"application-box\"}>\r\n                        <button className=\"btn theme_green700 margin-10\" onClick={CreateNewRule}>\r\n                            <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                <BiAddToQueue/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Create Rule</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rules;","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ERROR, LOADED, LOADING} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {\r\n    ADD_PRO_TO_OBJECT, BASE_URL, DELETE_OBJECT, EXPORT_DATA,\r\n    GET_LIST_PRO_BY_OBJ_ID,\r\n    GET_PRO_BY_OBJ_ID, GET_TEMPLATE, INSERT_OBJECT, INSERT_OBJECT_EXCEL,\r\n    LIST_OBJECT, LIST_PROPERTY, SEARCH_OBJECT,\r\n    UPDATE_PRO_VALUE,\r\n    WEB_BASE_NAME\r\n} from \"../API_URL\";\r\nimport {IconContext} from \"react-icons\";\r\nimport {\r\n    BiAddToQueue,\r\n    FaRegTimesCircle,\r\n    FaRegWindowClose,\r\n    MdOutlineSave,\r\n    RiFunctionLine,\r\n    SiMicrosoftexcel,\r\n    HiDocumentReport\r\n} from \"react-icons/all\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Modal from \"../Modal\";\r\nimport Select from \"react-select\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction ObjectA(props) {\r\n    const ADD_PROPERTY      = 1;\r\n    const ADD_OBJECT        = 2;\r\n    const CREATE_OBJ_EXCEL  = 3;\r\n    const UPDATE_OBJ_EXCEL  = 4;\r\n    const DELETE_OBJ_EXCEL  = 5;\r\n    const {_title, _obj_type_id, _obj_type_name}    = props;\r\n    const dispatch                                  = useDispatch();\r\n    const {token, is_admin}                         = useSelector(state => state.Authen);\r\n    const [DetailData, setDetailData]               = useState({obj_id: -1, obj_name: \"\", data: []});\r\n    const [ObjectData, setObjectData]               = useState([]);\r\n    const [ShowAppBox, setShowAppBox]               = useState(false);\r\n    const [ModalData, setModalData]                 = useState({mode: -1, data: {}, show: false, title: \"no title\"});\r\n    const [ModalSelectData, setModalSelectData]     = useState(null);\r\n    const [SearchBoxValue, setSearchBoxValue]       = useState(\"\");\r\n    const [selectedFile, setSelectedFile]           = useState({uploaded: false, name: \"No file\", file: null});\r\n\r\n    const __FetchFunction = (URL, body, callback, dismiss = true) => {\r\n        dispatch({type: LOADING});\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body),\r\n            redirect: 'follow'\r\n        };\r\n        fetch(URL, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    if (dismiss) dispatch({type: LOADED});\r\n                    callback(result.msg, null);\r\n                } else if (result.code === 202) {\r\n                    if (dismiss) dispatch({type: LOADED});\r\n                    setShowAppBox(false);\r\n                    const link = document.createElement('a');\r\n                    link.href = BASE_URL + result.msg;\r\n                    link.setAttribute(\"target\", \"_blank\");\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                    document.body.removeChild(link);\r\n                } else {\r\n                    callback(null, result.msg);\r\n                    if (dismiss) {\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            msg: result.msg\r\n                        });\r\n                    }\r\n                    toast.error(result.msg);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                if (dismiss) {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: e\r\n                    });\r\n                }\r\n                toast.error(e);\r\n            });\r\n    }\r\n\r\n    const ToggleApplicationBox = (e) => {\r\n        e.stopPropagation();\r\n        setShowAppBox(!ShowAppBox);\r\n    }\r\n\r\n    const SearchByObjectName = (e) => {\r\n        if (e.keyCode === 13) {\r\n            let BodyData = {\r\n                \"ssid\": token,\r\n                \"obj_name\": SearchBoxValue,\r\n                \"obj_type_id\": _obj_type_id\r\n            }\r\n            __FetchFunction(SEARCH_OBJECT, BodyData, function(response) {\r\n                setObjectData(response);\r\n                GetObjectInfo(response[0], 0);\r\n            }, false);\r\n        }\r\n    }\r\n    \r\n    const AddProperty = () => {\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            \"obj_id\": DetailData.obj_id\r\n        };\r\n        __FetchFunction(GET_LIST_PRO_BY_OBJ_ID, BodyData, function(response) {\r\n            let temp1 = [], temp2 = [];\r\n            for (let i of response.list_property) {\r\n                temp1.push({\r\n                    value: i.pro_id,\r\n                    label: i.pro_name,\r\n                    ...i\r\n                })\r\n            }\r\n            for (let i of response.list_property_assign) {\r\n                temp2.push({\r\n                    value: i.pro_id,\r\n                    label: i.pro_name,\r\n                    ...i\r\n                })\r\n            }\r\n            setModalSelectData(null);\r\n            setModalData({\r\n                ...ModalData,\r\n                show: true,\r\n                mode: ADD_PROPERTY,\r\n                data: {\r\n                    list_property: temp1,\r\n                    list_property_assign: temp2\r\n                },\r\n                title: `Add property to ${DetailData.obj_name}`\r\n            });\r\n        });\r\n    }\r\n\r\n    const ChangeProDataWithExcel = (mode = -1) => {\r\n        if (mode !== -1) {\r\n            setSelectedFile({\r\n                name: \"No file\",\r\n                uploaded: false,\r\n                file: null\r\n            });\r\n        }\r\n        if (mode === CREATE_OBJ_EXCEL) {\r\n            setModalData({\r\n                show: true,\r\n                title: \"Instruction to create object with Excel file\",\r\n                data: {},\r\n                mode: CREATE_OBJ_EXCEL\r\n            });\r\n        } else if (mode === UPDATE_OBJ_EXCEL) {\r\n            swal({\r\n                title: \"Developing features\",\r\n                text: `This features will coming soon. We're sorry about this problem!`,\r\n                icon: \"info\"\r\n            });\r\n            // setModalData({\r\n            //     show: true,\r\n            //     title: \"Instruction to update object with Excel file\",\r\n            //     data: {},\r\n            //     mode: UPDATE_OBJ_EXCEL\r\n            // });\r\n        }  else if (mode === DELETE_OBJ_EXCEL) {\r\n            swal({\r\n                title: \"Developing features\",\r\n                text: `This features will coming soon. We're sorry about this problem!`,\r\n                icon: \"info\"\r\n            });\r\n            // setModalData({\r\n            //     show: true,\r\n            //     title: \"Instruction to delete object with Excel file\",\r\n            //     data: {},\r\n            //     mode: DELETE_OBJ_EXCEL\r\n            // });\r\n        }\r\n    }\r\n\r\n    const CreateNewObject = () => {\r\n        dispatch({type: LOADING});\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            \"obj_type_id\": _obj_type_id\r\n        }\r\n        __FetchFunction(LIST_PROPERTY, BodyData, function(response, err) {\r\n            let temp = [];\r\n            for (let i of response) {\r\n                temp.push({\r\n                    value: i.pro_id,\r\n                    label: i.pro_name,\r\n                    ...i\r\n                });\r\n            }\r\n            setModalSelectData(null);\r\n            setModalData({\r\n                show: true,\r\n                title: \"Create new object\",\r\n                data: {\r\n                    obj_name: \"\",\r\n                    obj_desc: \"\",\r\n                    obj_type_id: _obj_type_id,\r\n                    list_property: temp,\r\n                    list_property_assign: []\r\n                },\r\n                mode: ADD_OBJECT\r\n            })\r\n        });\r\n    }\r\n\r\n    const HandleClickOut = (e) => {\r\n        setModalData({\r\n            ...ModalData,\r\n            show: false\r\n        })\r\n    }\r\n\r\n    const SaveChangeObject = () => {\r\n        let HasErr = false;\r\n        for (let i of DetailData.data) {\r\n            if (i.match_regex === false) {\r\n                toast.error(`Value of ${i.pro_name} property is not match rule's regex!`);\r\n                HasErr = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!HasErr) {\r\n            let list_property = [];\r\n            for (let i of DetailData.data) {\r\n                list_property.push({\r\n                    \"obj_id\": i.obj_id,\r\n                    \"pro_id\": i.pro_id,\r\n                    \"pro_value\": i.pro_value\r\n                });\r\n            }\r\n            let BodyData = {\r\n                \"ssid\": token,\r\n                \"list_property\": list_property\r\n            }\r\n            __FetchFunction(UPDATE_PRO_VALUE, BodyData, function (response) {\r\n                toast.success(response);\r\n                GetObjectInfo(DetailData, 0);\r\n            });\r\n        }\r\n    }\r\n\r\n    const DeleteObjectA = () => {\r\n        swal({\r\n            title: \"DELETE\",\r\n            text: `Delete '${DetailData.obj_name}' will delete all object's property. Continue?`,\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true\r\n        }).then(val => {\r\n            if (val) {\r\n                let BodyData = {\r\n                    \"ssid\": token,\r\n                    \"obj_id\": DetailData.obj_id\r\n                }\r\n                __FetchFunction(DELETE_OBJECT, BodyData, function(response, err) {\r\n                    if (err != null) return;\r\n                    GetListObject();\r\n                    toast.success(response);\r\n                }, false);\r\n            }\r\n        });\r\n    }\r\n\r\n    const GetListObject = (cb) => {\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            \"obj_type_id\": _obj_type_id\r\n        };\r\n        __FetchFunction(LIST_OBJECT, BodyData, function(response) {\r\n            for (let i of response) {\r\n                i.match_regex = true;\r\n            }\r\n            setObjectData(response);\r\n            if (response.length > 0) {\r\n                GetObjectInfo(response[0], 0);\r\n            } else {\r\n                dispatch({type: LOADED});\r\n            }\r\n        },false);\r\n    }\r\n\r\n    const GetObjectInfo = (item, index = -1) => {\r\n        if (index > -1) {\r\n            const ObjectDataCopy = [...ObjectData];\r\n            ObjectDataCopy.map(function(obj, obj_index) {\r\n                obj.selected = (obj_index === index);\r\n            });\r\n            // setObjectData(ObjectDataCopy);\r\n        }\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            \"obj_id\": item.obj_id\r\n        };\r\n        __FetchFunction(GET_PRO_BY_OBJ_ID, BodyData, function (response) {\r\n            for (let i of response) {\r\n                let reg = new RegExp(i.rule_regex, 'g');\r\n                i.match_regex = reg.test(i.pro_value);\r\n            }\r\n            setDetailData({\r\n                obj_id: item.obj_id,\r\n                obj_name: item.obj_name,\r\n                data: response\r\n            });\r\n        });\r\n    }\r\n\r\n    const ChangeProValue = (e, index) => {\r\n        let CopyDetailData                  = [...DetailData.data];\r\n        let reg                             = new RegExp(CopyDetailData[index].rule_regex, \"g\");\r\n        CopyDetailData[index].pro_value     = e.target.value;\r\n        CopyDetailData[index].match_regex   = reg.test(e.target.value);\r\n        setDetailData({\r\n            ...DetailData,\r\n            CopyDetailData\r\n        });\r\n    }\r\n\r\n    const ChangeProperty = (item) => {\r\n        let tempArr = ModalData.data.list_property_assign;\r\n        let isAssigned = false;\r\n        for (let i of tempArr) {\r\n            if (i.pro_id === item.value) {\r\n                isAssigned = true;\r\n                break;\r\n            }\r\n        }\r\n        if (Array.isArray(tempArr) && !isAssigned) {\r\n            tempArr.push(item);\r\n            setModalData({\r\n                ...ModalData,\r\n                data: {\r\n                    ...ModalData.data,\r\n                    list_property_assign: tempArr\r\n                }\r\n            })\r\n            setModalSelectData(item);\r\n        }\r\n    }\r\n\r\n    const RemoveProperty = (item) => {\r\n        if (item.is_required === true) {\r\n            toast.error(\"Can not remove this property!\");\r\n            return;\r\n        }\r\n        let tempArr = ModalData.data.list_property_assign;\r\n        Array.isArray(tempArr) && tempArr.map(function(i, index) {\r\n            if (item.value === i.value) {\r\n                tempArr.splice(index, 1);\r\n            }\r\n        });\r\n        setModalData({\r\n            ...ModalData,\r\n            data: {\r\n                ...ModalData.data,\r\n                list_property_assign: tempArr\r\n            }\r\n        });\r\n    }\r\n\r\n    const UpdatePropertyOfObject = () => {\r\n        let ListNewProID = [];\r\n        for (let i of ModalData.data.list_property_assign) {\r\n            ListNewProID.push(i.value);\r\n        }\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            \"obj_id\": DetailData.obj_id,\r\n            \"list_pro_id\": ListNewProID,\r\n            \"obj_type_id\": _obj_type_id\r\n        }\r\n        __FetchFunction(ADD_PRO_TO_OBJECT, BodyData, function(response, err) {\r\n           GetObjectInfo(DetailData, 0);\r\n           setModalData({...ModalData, show: false});\r\n           toast.success(response);\r\n        });\r\n    }\r\n\r\n    const InsertObject = () => {\r\n        if (ModalData.data.obj_name.trim() === \"\") {\r\n            toast.error(\"Object needs a name!\");\r\n            return;\r\n        }\r\n        let tempArr = [];\r\n        for (let i of ModalData.data.list_property_assign) {\r\n            tempArr.push(i.value);\r\n        }\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            \"obj_type_id\": _obj_type_id,\r\n            \"obj_name\": ModalData.data.obj_name,\r\n            \"obj_desc\": ModalData.data.obj_desc,\r\n            \"list_pro_id\": tempArr\r\n        }\r\n        __FetchFunction(INSERT_OBJECT, BodyData, function(response) {\r\n            setModalData({\r\n                ...ModalData,\r\n                show: false\r\n            });\r\n            GetListObject();\r\n           toast.success(response);\r\n        });\r\n    }\r\n    \r\n    const GetTemplate = () => {\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            \"obj_type_id\": _obj_type_id\r\n        }\r\n        __FetchFunction(GET_TEMPLATE, BodyData, function (response) {\r\n            const link = document.createElement('a');\r\n            link.href = BASE_URL + response;\r\n            link.setAttribute(\"target\", \"_blank\");\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n    }\r\n\r\n    const UploadExcel = () => {\r\n        let URI = \"\";\r\n        if (selectedFile.file === null) {\r\n            toast.error(\"Choose a file!\");\r\n            return;\r\n        }\r\n\r\n        if (ModalData.mode === CREATE_OBJ_EXCEL) {\r\n            URI = INSERT_OBJECT_EXCEL;\r\n        } else if (ModalData.mode === UPDATE_OBJ_EXCEL) {\r\n            URI = \"\";\r\n        } else if (ModalData.mode === DELETE_OBJ_EXCEL) {\r\n            URI = \"\";\r\n        }\r\n\r\n        if (URI !== \"\") {\r\n            dispatch({\r\n                type: LOADING\r\n            });\r\n            let data = new FormData();\r\n            data.append(\"excel_file\", selectedFile.file);\r\n            data.append(\"obj_type_id\", _obj_type_id);\r\n            data.append(\"ssid\", token);\r\n\r\n            let requestOptions = {\r\n                method: 'POST',\r\n                body: data,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(URI, requestOptions)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    if (result.code === 200) {\r\n                        dispatch({type: LOADED});\r\n                        setModalData({\r\n                            ...ModalData,\r\n                            show: false\r\n                        });\r\n                        GetListObject();\r\n                        toast.success(result.msg);\r\n                    } else {\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            _msg: result.msg\r\n                        });\r\n                        toast.error(result.msg);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        _msg: e\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    const ExportData = () => {\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            \"obj_type_id\": _obj_type_id\r\n        }\r\n      __FetchFunction(EXPORT_DATA, BodyData, function() {});\r\n    }\r\n\r\n    const ChangeFiles = e => {\r\n        setSelectedFile({\r\n            ...selectedFile,\r\n            uploaded: true,\r\n            name: e.target.files[0].name,\r\n            file: e.target.files[0]\r\n        });\r\n    }\r\n\r\n    useEffect(function() {\r\n        dispatch({type: LOADING});\r\n        document.title = _title + WEB_BASE_NAME;\r\n        GetListObject();\r\n        return () => {\r\n            setObjectData([]);\r\n        }\r\n    }, [_obj_type_id]);\r\n\r\n    return(\r\n        <div className=\"container\" onClick={() => setShowAppBox(false)}>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            <Modal\r\n                show={ModalData.show}\r\n                title={ModalData.title}\r\n                onClickOut={HandleClickOut}\r\n                CloseModal={_ => setModalData({...ModalData, show: false})}\r\n                WrapClass={\"modal_wrap\"}>\r\n\r\n                {\r\n                    ModalData.mode === CREATE_OBJ_EXCEL && (\r\n                        <>\r\n                            <div>\r\n                                <ol>\r\n                                    <li>Download template <span onClick={GetTemplate} style={{cursor: \"pointer\", textDecoration: \"underline\"}}>here</span></li>\r\n                                    <li>Fill value into Excel</li>\r\n                                    <li><label className=\"link_style\" htmlFor=\"upload_file\">Click here</label> to upload filled Excel</li>\r\n                                </ol>\r\n                                <input className=\"hide\" onChange={ChangeFiles} id=\"upload_file\" type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\r\n                                {selectedFile.file !== null ? <span className=\"margin-left-5\">File <span className={\"bold\"}>{selectedFile.name}</span> is selected</span> : <span className=\"margin-left-5\" style={{fontStyle: \"italic\"}}>No file selected!</span>}<br/>\r\n                                <span style={{fontStyle: \"italic\", color: \"red\", marginTop: '10px', display: \"block\"}}>* Download new template whenever creating object because list property of {_obj_type_name.toLowerCase()} can be changed in setting</span>\r\n                                <span style={{fontStyle: \"italic\", color: \"red\"}}>* If you want to remove a property away from object, insert '#' character to this property cell</span>\r\n                            </div>\r\n                            <div className={\"margin-top-25\"}>\r\n                                <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                                <button className={\"btn theme_blue pull-right margin-right-10\"} onClick={UploadExcel}>Upload</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    (ModalData.mode === UPDATE_OBJ_EXCEL) && (\r\n                        <>\r\n                            <div>\r\n                                <ol>\r\n                                    <li><label className=\"link_style\" htmlFor=\"upload_file\">Click here</label> to upload Excel</li>\r\n                                </ol>\r\n                                <input className=\"hide\" onChange={ChangeFiles} id=\"upload_file\" type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\r\n                                {selectedFile.file !== null ? <span className=\"margin-left-5\">File <span className={\"bold\"}>{selectedFile.name}</span> is selected</span> : <span className=\"margin-left-5\" style={{fontStyle: \"italic\"}}>No file selected!</span>}<br/>\r\n                            </div>\r\n                            <div className={\"margin-top-25\"}>\r\n                                <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                                <button className={\"btn pull-right margin-right-10 \" + (ModalData.mode === UPDATE_OBJ_EXCEL ? \"theme_green\" : \"theme_red\")} onClick={UploadExcel}>Upload</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    ModalData.mode === DELETE_OBJ_EXCEL && (\r\n                        <>\r\n                            <div>\r\n                                <span className={\"err_msg margin-bottom-10\"}>* System will delete all object in {_obj_type_name} depend on 'Object ID' column in Excel file and CAN NOT recover. Please be careful!</span>\r\n                                <ol>\r\n                                    <li><label className=\"link_style\" htmlFor=\"upload_file\">Click here</label> to upload Excel</li>\r\n                                </ol>\r\n                                <input className=\"hide\" onChange={ChangeFiles} id=\"upload_file\" type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\r\n                                {selectedFile.file !== null ? <span className=\"margin-left-5\">File <span className={\"bold\"}>{selectedFile.name}</span> is selected</span> : <span className=\"margin-left-5\" style={{fontStyle: \"italic\"}}>No file selected!</span>}<br/>\r\n                            </div>\r\n                            <div className={\"margin-top-25\"}>\r\n                                <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                                <button className={\"btn pull-right margin-right-10 \" + (ModalData.mode === UPDATE_OBJ_EXCEL ? \"theme_green\" : \"theme_red\")} onClick={UploadExcel}>Upload</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                {ModalData.mode === ADD_OBJECT && (\r\n                    <div style={{\r\n                        minHeight: '60vh',\r\n                        minWidth: '60vw',\r\n                    }}>\r\n                        <small className={\"err_msg\"}>* {_obj_type_name} has a lot of required property that will be add automatic when you create object!</small>\r\n                        <small className={\"err_msg margin-top-5\"}>* Required property CAN NOT removed by manually!</small>\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor={\"_insert_object_name\"}>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Object's name:</span>\r\n                            </label>\r\n                            <input className={\"form-control\"} id={\"_insert_object_name\"} placeholder={\"Type a name...\"} value={ModalData.data.obj_name} onChange={e => {setModalData({\r\n                                ...ModalData,\r\n                                data: {\r\n                                    ...ModalData.data,\r\n                                    obj_name: e.target.value\r\n                                }\r\n                            })}}/>\r\n                        </div>\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor={\"_insert_object_desc\"}>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Description:</span>\r\n                            </label>\r\n                            <input className={\"form-control\"} id={\"_insert_object_desc\"} placeholder={\"Description\"} value={ModalData.data.obj_desc} onChange={e => {setModalData({\r\n                                ...ModalData,\r\n                                data: {\r\n                                    ...ModalData.data,\r\n                                    obj_desc: e.target.value\r\n                                }\r\n                            })}}/>\r\n                        </div>\r\n                        <div className=\"margin-top-20 margin-bottom-20\">\r\n                            <label>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Select property:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={ModalData.data.list_property}\r\n                                value={ModalSelectData}\r\n                                onChange={ChangeProperty}\r\n                                placeholder={\"Select a property\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div>\r\n                        {Array.isArray(ModalData.data.list_property_assign) && ModalData.data.list_property_assign.length > 0 && (\r\n                            <table className=\"nice_theme margin-top-20\" style={{\r\n                                minWidth: \"650px\"\r\n                            }}>\r\n                                <thead className=\"text-center\">\r\n                                <tr>\r\n                                    <th>Index</th>\r\n                                    <th>Property</th>\r\n                                    <th>Remove</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    Array.isArray(ModalData.data.list_property_assign) && ModalData.data.list_property_assign.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={item.id}>\r\n                                                <td className=\"text-center\">{index+1}</td>\r\n                                                <td className=\"bold\">{item.pro_name}</td>\r\n                                                <td className=\"text-center\">{\r\n                                                    item.is_required === false ? (\r\n                                                            <span onClick={_ => RemoveProperty(item)}>\r\n                                                            <IconContext.Provider value={{color: \"red\", size: \"20\"}} >\r\n                                                                <FaRegTimesCircle/>\r\n                                                            </IconContext.Provider>\r\n                                                        </span>\r\n                                                        ) :\r\n                                                        (<span>Required</span>)\r\n                                                }</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                            <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                            <button className={\"btn theme_green pull-right margin-right-10\"} onClick={InsertObject}>Create</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                \r\n                {ModalData.mode === ADD_PROPERTY && (\r\n                    <div style={{\r\n                        minHeight: '60vh',\r\n                        minWidth: '60vw',\r\n                    }}>\r\n                        <div className={\"margin-top-20\"}>\r\n                            <label>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Select property:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={ModalData.data.list_property}\r\n                                value={ModalSelectData}\r\n                                onChange={ChangeProperty}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            {Array.isArray(ModalData.data.list_property_assign) && ModalData.data.list_property_assign.length > 0 && (\r\n                                <table className=\"nice_theme margin-top-20\" style={{\r\n                                    minWidth: \"650px\"\r\n                                }}>\r\n                                    <thead className=\"text-center\">\r\n                                    <tr>\r\n                                        <th>Index</th>\r\n                                        <th>Property</th>\r\n                                        <th>Remove</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {\r\n                                        Array.isArray(ModalData.data.list_property_assign) && ModalData.data.list_property_assign.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={item.id}>\r\n                                                    <td className=\"text-center\">{index+1}</td>\r\n                                                    <td className=\"bold\">{item.pro_name}</td>\r\n                                                    <td className=\"text-center\">{\r\n                                                        item.is_required === false ? (\r\n                                                                <span onClick={_ => RemoveProperty(item)}>\r\n                                                                    <IconContext.Provider value={{color: \"red\", size: \"20\"}} >\r\n                                                                        <FaRegTimesCircle/>\r\n                                                                    </IconContext.Provider>\r\n                                                                </span>\r\n                                                            ) :\r\n                                                            (<span>Required</span>)\r\n                                                    }</td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    </tbody>\r\n                                </table>\r\n                            )}\r\n                            <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                            <button className={\"btn theme_yellow pull-right margin-right-10\"} onClick={UpdatePropertyOfObject}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Modal>\r\n\r\n            <div className=\"box-style\" style={{height: \"calc(100% - 40px)\", padding: '20px', display: 'flex', position: 'relative'}}>\r\n\r\n                <div style={{width: '300px', height: 'calc(100% - 30px)', display: 'inline-block'}}>\r\n                    <input className=\"form-control\" onKeyDown={SearchByObjectName} onChange={e => setSearchBoxValue(e.target.value)} value={SearchBoxValue} placeholder={`Find by ${_obj_type_name.toLowerCase()} name ...`}/>\r\n                    <div className=\"list-container margin-top-10\">\r\n                        {Array.isArray(ObjectData) && ObjectData.length === 0 ? (\r\n                            <div>\r\n                                <span>No object!</span>\r\n                            </div>\r\n                        ) : Array.isArray(ObjectData) && ObjectData.map((item, index) => {\r\n                            return (\r\n                                <div\r\n                                    key={index}\r\n                                    className={item.selected === true ? \"list-item theme_green\" : \"list-item\"}\r\n                                    onClick={_ => GetObjectInfo(item, index)}>\r\n                                    {item.obj_name}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {Array.isArray(ObjectData) && ObjectData.length > 0 &&\r\n                    (\r\n                        <div style={{\r\n                            width: 'calc(100% - 350px)',\r\n                            height: 'calc(100% - 70px)',\r\n                            marginLeft: '50px',\r\n                            display: 'inline-block',\r\n                            overflow: 'auto',\r\n                            padding: '10px'}}>\r\n                            <div style={{\r\n                                width: \"100%\",\r\n                                display: \"inline-block\",\r\n                                textTransform: \"capitalize\"\r\n                            }}>\r\n                                <span style={{fontWeight: \"bold\", fontSize: \"25px\", display: \"inline-block\", marginTop: \"15px\"}}>{_obj_type_name.toLowerCase()} : {DetailData.obj_name}</span>\r\n                                <button className=\"btn theme_brown margin-10 pull-right\" onClick={AddProperty}>\r\n                                    <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                        <BiAddToQueue/>\r\n                                    </IconContext.Provider>\r\n                                    &nbsp;Add property to {DetailData.obj_name}</button>\r\n                            </div>\r\n                            {\r\n                                DetailData.data.map(function(item, index) {\r\n                                    return (\r\n                                        <div className=\"margin-top-20\" key={index}>\r\n                                            <label htmlFor={\"_pro_item_\" + index}>\r\n                                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>{item.pro_name.toLowerCase()}:</span>\r\n                                            </label>\r\n                                            <input className={(item.match_regex === false) ? \"form-control form-control-err\" : \"form-control\"} placeholder={(item.pro_desc !== \"\") ? item.pro_desc : \"Fill value\"} id={\"_pro_item_\" + index} value={item.pro_value} onChange={e => ChangeProValue(e, index)}/>\r\n                                            <small className=\"italic\">(Created: {item.created_at}, Last update: {item.updated_at})</small><br/>\r\n                                            {item.match_regex === false && (<small className={\"err_msg italic\"}>Not match rule \"{item.rule_name}\"</small>)}\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <button className=\"btn pull-right theme_red margin-left-10\" onClick={DeleteObjectA}>\r\n                                    <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                        <FaRegWindowClose/>\r\n                                    </IconContext.Provider>\r\n                                    &nbsp;Delete\r\n                                </button>\r\n                                <button className=\"btn pull-right theme_cyan\" onClick={SaveChangeObject}>\r\n                                    <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                        <MdOutlineSave/>\r\n                                    </IconContext.Provider>\r\n                                    &nbsp;Save change\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div onClick={e => e.stopPropagation()}>\r\n                        <span className=\"fab-button\" onClick={ToggleApplicationBox}>\r\n                            <IconContext.Provider value={{size: 25, color: 'white'}}>\r\n                                <RiFunctionLine/>\r\n                            </IconContext.Provider>\r\n                        </span>\r\n\r\n                        <div className={ShowAppBox ? \"application-box flex\" : \"application-box\"}>\r\n                            <button className=\"btn theme_cyan margin-10\" onClick={ExportData}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <HiDocumentReport/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Export all {_obj_type_name} data</button>\r\n\r\n                            <button className=\"btn theme_orange margin-10\" onClick={_ => ChangeProDataWithExcel(CREATE_OBJ_EXCEL)}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <SiMicrosoftexcel/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Create object (Excel)</button>\r\n\r\n                            <button className=\"btn theme_orange margin-10\" onClick={_ => ChangeProDataWithExcel(UPDATE_OBJ_EXCEL)}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <SiMicrosoftexcel/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Update object (Excel)</button>\r\n\r\n                            <button className=\"btn theme_orange margin-10\" onClick={_ => ChangeProDataWithExcel(DELETE_OBJ_EXCEL)}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <SiMicrosoftexcel/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Delete object (Excel)</button>\r\n\r\n                            <button className=\"btn theme_green700 margin-10\" onClick={CreateNewObject}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <BiAddToQueue/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Create object (Manual)</button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ObjectA;","export default __webpack_public_path__ + \"static/media/sidebar_bg.4093c966.png\";","export const NOT_LOGGED_IN  = \"not_logged_in\";\r\nexport const LOGGED_IN      = \"logged_in\";","export default __webpack_public_path__ + \"static/media/vnpt.ac4800f4.svg\";","import {Menu, MenuItem, ProSidebar, SidebarContent, SidebarFooter, SidebarHeader} from \"react-pro-sidebar\";\r\nimport * as Icons from \"react-icons/all\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SideBarBackGroundImage from './sidebar_bg.png';\r\nimport VNPTIcon from './vnpt.svg';\r\nimport {IconContext} from \"react-icons/lib\";\r\nimport {FiLogOut, IoIosLogOut, MdLogout, MdOutlineSave} from \"react-icons/all\";\r\nimport {ERROR, LOADED} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LOGOUT} from \"../API_URL\";\r\nimport {NOT_LOGGED_IN} from \"../Redux/ReducersAndActions/Authentication/AuthenActionsDefinition\";\r\n\r\n// ProSidebar: https://www.npmjs.com/package/react-pro-sidebar\r\n\r\nfunction SideBarCustom(props) {\r\n    const {list_item}                       = props;\r\n    const dispatch                          = useDispatch();\r\n    const {token, fullname, is_admin}       = useSelector(state => state.Authen);\r\n    const [SideBarClosed, setSideBarState] = useState(true);\r\n\r\n    const getWindowDimensions = () => {\r\n        const { innerWidth: width, innerHeight: height } = window;\r\n        return { width, height };\r\n    }\r\n    const [windowsSize, setWindowSize] = useState(getWindowDimensions());\r\n\r\n    const DynamicIcon = (IconName) => {\r\n        //Doc: https://stackoverflow.com/questions/65576629/how-to-render-react-icon-depending-on-string-from-database\r\n        const IconComponent = Icons[IconName];\r\n        if (!IconComponent) { // Return a default one\r\n            return <Icons.FaBeer />;\r\n        }\r\n        return <IconComponent />;\r\n    }\r\n\r\n    const __FetchFunction = (URL, body, callback, err_cb) => {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body),\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(URL, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    callback(result.msg, null);\r\n                } else {\r\n                    toast.error(result.msg);\r\n                    callback(null, result.msg);\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: result.msg\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n            });\r\n    }\r\n\r\n    const Logout = () => {\r\n        let BodyData = {\r\n            \"ssid\": token\r\n        }\r\n        __FetchFunction(LOGOUT, BodyData, function (resp) {\r\n            toast.success(resp.msg);\r\n            dispatch({type: NOT_LOGGED_IN});\r\n        });\r\n    }\r\n\r\n    useEffect(function() {\r\n        function handleResize()  {\r\n            setWindowSize(getWindowDimensions());\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return function() {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <ProSidebar\r\n            image={SideBarBackGroundImage}\r\n            breakPoint=\"md\"\r\n            collapsed={SideBarClosed}\r\n            style={{\r\n                \"height\": windowsSize.height + 'px',\r\n                \"display\": \"inline-block\",\r\n                \"position\": \"fixed\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\"\r\n            }}\r\n        >\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            <SidebarHeader>\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        padding: '24px',\r\n                        textTransform: 'uppercase',\r\n                        fontWeight: 'bold',\r\n                        fontSize: 18,\r\n                        letterSpacing: '1px',\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis',\r\n                        whiteSpace: 'nowrap',\r\n                        color: \"#e5e5e5\"\r\n                    }}\r\n                >\r\n                    <span onClick={() => setSideBarState(!SideBarClosed)}>\r\n                        <IconContext.Provider value={{\"size\": \"30\"}}>\r\n                            {SideBarClosed === false ? <Icons.IoIosArrowDropleftCircle/> : <Icons.IoIosArrowDroprightCircle/>}\r\n                        </IconContext.Provider>\r\n                    </span>\r\n                    {SideBarClosed === false && (\r\n                        <span style={{display: \"inline-block\", \"marginLeft\": \"10px\"}}>\r\n                            IP Manager\r\n                            <br/>\r\n                            <span style={{fontSize: '10px', fontWeight: 600}}>{fullname} ({is_admin ? \"ADMIN\" : \"MEMBER\"})</span>\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </SidebarHeader>\r\n            <SidebarContent>\r\n                    {\r\n                        list_item.map(function(item, index) {\r\n                            return(\r\n                                <Menu key={`sidebar_item_${index}`} iconShape=\"circle\">\r\n                                    <MenuItem icon={DynamicIcon(item.icon)}>{item.name}<Link onClick={() => setSideBarState(true)} to={item.path}/></MenuItem>\r\n                                </Menu>\r\n                            )\r\n                        })\r\n                    }\r\n            </SidebarContent>\r\n            <SidebarFooter style={{ textAlign: 'center' }}>\r\n                <div\r\n                    style={{\r\n                        padding: '20px 24px',\r\n                    }}>\r\n                    {/*<img alt={\"VNPT Icon\"} width={\"30\"} src={VNPTIcon}/>*/}\r\n\r\n                    {!SideBarClosed && (\r\n                        <button onClick={Logout} className={\"btn btn-block theme_strawberry\"}>\r\n                            <span style={{overflow: \"hidden\", whiteSpace: 'nowrap', textOverflow: 'ellipsis'}}>\r\n                                Logout&nbsp;&nbsp;\r\n                            </span>\r\n                            <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                <MdLogout/>\r\n                            </IconContext.Provider>\r\n                        </button>\r\n                    )}\r\n\r\n                    {SideBarClosed && (\r\n                        <button\r\n                            onClick={Logout}\r\n                            className={\"theme_strawberry\"}\r\n                            style={{\r\n                                borderRadius: \"50%\",\r\n                                padding: \"10px 7px 10px 13px\",\r\n                                border: \"none\",\r\n                                cursor: \"pointer\"\r\n                        }}>\r\n                            <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                <MdLogout/>\r\n                            </IconContext.Provider>\r\n                        </button>\r\n                    )}\r\n\r\n                </div>\r\n            </SidebarFooter>\r\n        </ProSidebar>\r\n    );\r\n}\r\n\r\nexport default SideBarCustom;","import {ERROR, LOADED, LOADING} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {IconContext} from \"react-icons\";\r\nimport {BiAddToQueue, FaRegWindowClose, MdOutlineSave, RiFunctionLine} from \"react-icons/all\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {\r\n    DELETE_PROPERTY, GET_PRO_INFO,\r\n    INSERT_PROPERTY,\r\n    LIST_OBJ_TYPE,\r\n    LIST_PROPERTY,\r\n    LIST_RULES,\r\n    UPDATE_PROPERTY,\r\n    WEB_BASE_NAME\r\n} from \"../API_URL\";\r\nimport Select from \"react-select\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport Modal from \"../Modal\";\r\n\r\nfunction Property(props) {\r\n    const CREATE_PROPERTY                       = 1;\r\n    const {_title}                              = props;\r\n    const dispatch                              = useDispatch();\r\n    const {token}                               = useSelector(state => state.Authen);\r\n    const [ShowAppBox, setShowAppBox]           = useState(false);\r\n    const [PropertyData, setPropertyData]       = useState([]);\r\n    const [ListObjType, setListObjType]         = useState([]);\r\n    const [ListRule, setListRule]               = useState([]);\r\n    const [DetailData, setDetailData]           = useState({});\r\n    const [ModalSelectData, setModalSelectData] = useState(null);\r\n    const [ModalSelectData1, setModalSelectData1] = useState(null);\r\n    const [ModalData, setModalData]             = useState({mode: -1, data: {list_property: [], list_property_assign: []}, show: false, title: \"no title\"});\r\n\r\n    const __FetchFunction = (URL, body, callback, err_cb) => {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body),\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(URL, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    dispatch({type: LOADED})\r\n                    callback(result.msg, null);\r\n                } else {\r\n                    callback(null, result.msg);\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: result.msg\r\n                    });\r\n                    toast.error(result.msg);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n            });\r\n    }\r\n\r\n    const SearchByPropertyName = (e) => {\r\n\r\n    }\r\n\r\n    const CreateProperty = () => {\r\n        setModalSelectData(null);\r\n        setModalSelectData1(null);\r\n        setModalData({\r\n            show: true,\r\n            data: {\r\n                \"pro_name\": \"\",\r\n                \"pro_desc\": \"\",\r\n                \"rule_id\": -1,\r\n                \"list_obj_type\": []\r\n            },\r\n            title: \"Create property\",\r\n            mode: CREATE_PROPERTY\r\n        });\r\n    }\r\n\r\n    const ChangeRequired = (e, index) => {\r\n        let CloneDetailData = {...DetailData};\r\n        CloneDetailData.ListObjType[index].is_required = !DetailData.ListObjType[index].is_required;\r\n        setDetailData(CloneDetailData);\r\n    }\r\n\r\n    const ChangeRequiredInModal = (index) => {\r\n        let CloneDetailData = [...ModalSelectData1];\r\n        CloneDetailData[index].is_required = !ModalSelectData1[index].is_required;\r\n        setModalSelectData1(CloneDetailData);\r\n    }\r\n\r\n    const UpdateProperty = () => {\r\n        if (typeof (DetailData.rule) !== \"object\") {\r\n            toast.error(\"Choose a RULE\");\r\n            return;\r\n        }\r\n        if (Array.isArray(DetailData.ListObjType) && DetailData.ListObjType.length === 0) {\r\n            toast.error(\"Choose at least one OBJECT TYPE\");\r\n            return;\r\n        }\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            \"pro_id\": DetailData.pro_id,\r\n            \"pro_name\": DetailData.pro_name,\r\n            \"pro_desc\": DetailData.pro_desc,\r\n            \"rule_id\": DetailData.rule.value,\r\n            \"list_obj_type\": []\r\n        };\r\n        for (let i of DetailData.ListObjType) {\r\n            BodyData.list_obj_type.push({\r\n                \"obj_type_id\": i.value,\r\n                \"is_required\": i.is_required\r\n            });\r\n        }\r\n        __FetchFunction(UPDATE_PROPERTY, BodyData, function(response) {\r\n            __FetchFunction(LIST_PROPERTY, BodyData, function(resp, err) {\r\n                if (err !== null) {\r\n                    setPropertyData(resp);\r\n                    if (resp.length > 0) {\r\n                        GetPropertyInfo(resp[0]);\r\n                    }\r\n                } else {\r\n                    GetPropertyInfo(DetailData);\r\n                }\r\n            });\r\n            toast.success(response);\r\n        });\r\n    }\r\n\r\n    const ChangeProperty = (item) => {\r\n        setModalSelectData(item);\r\n    }\r\n\r\n    const ChangeObjectTypeinModal = (item) => {\r\n      setModalSelectData1(item);\r\n    }\r\n\r\n    const InsertProperty = () => {\r\n        if (ModalData.data.pro_name.trim() === \"\") {\r\n            toast.error(\"Property needs a name!\");\r\n            return;\r\n        }\r\n        if (ModalSelectData === null) {\r\n            toast.error(\"Select a rule for property!\");\r\n            return;\r\n        }\r\n\r\n        if (ModalSelectData1 === null) {\r\n            toast.error(\"Select a least an object type!\");\r\n            return;\r\n        }\r\n\r\n      let BodyData = {\r\n            \"ssid\": token,\r\n            \"pro_name\": ModalData.data.pro_name,\r\n            \"pro_desc\": ModalData.data.pro_desc,\r\n            \"rule_id\": ModalSelectData.value,\r\n            \"list_obj_type\": []\r\n      }\r\n        for (let i of ModalSelectData1) {\r\n            BodyData.list_obj_type.push({\r\n                obj_type_id: i.value,\r\n                is_required: i.is_required\r\n            });\r\n        }\r\n      __FetchFunction(INSERT_PROPERTY, BodyData, function(response, err) {\r\n          if (err !== null) return;\r\n          setModalData({\r\n              ...ModalData,\r\n              show: false\r\n          });\r\n          GetListProperty();\r\n          toast.success(response);\r\n      });\r\n    }\r\n\r\n    const DeleteProperty = () => {\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            \"pro_id\": DetailData.pro_id\r\n        };\r\n        __FetchFunction(DELETE_PROPERTY, BodyData, function(response) {\r\n            __FetchFunction(LIST_PROPERTY, BodyData, function(resp) {\r\n                setPropertyData(resp);\r\n                if (resp.length > 0) {\r\n                    GetPropertyInfo(resp[0]);\r\n                }\r\n            });\r\n            toast.success(response);\r\n        });\r\n    }\r\n\r\n    const GetPropertyInfo = (item) => {\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            \"pro_id\": item.pro_id\r\n        };\r\n        __FetchFunction(GET_PRO_INFO, BodyData, function (response) {\r\n            let TempItem = {...item};\r\n            TempItem.ListObjType = [];\r\n            for (let i of response) {\r\n                TempItem.ListObjType.push({\r\n                    value: i.obj_type_id,\r\n                    label: i.obj_type_name,\r\n                    is_required: i.is_required\r\n                });\r\n            }\r\n            for (let i of ListRule) {\r\n                if (i.value === TempItem.rule_id) {\r\n                    TempItem.rule = i;\r\n                    break;\r\n                }\r\n            }\r\n            setDetailData(TempItem);\r\n        });\r\n    }\r\n\r\n    const ChangeObjType = (item) => {\r\n        console.log(item);\r\n        setDetailData({\r\n            ...DetailData,\r\n            ListObjType: item\r\n        });\r\n    }\r\n\r\n    const ChangeRule = (item) => {\r\n        setDetailData({\r\n            ...DetailData,\r\n            rule: item\r\n        })\r\n    }\r\n\r\n    const ToggleApplicationBox = (e) => {\r\n        e.stopPropagation();\r\n        setShowAppBox(!ShowAppBox);\r\n    }\r\n\r\n    const HandleClickOut = (e) => {\r\n        setModalData({\r\n            ...ModalData,\r\n            show: false\r\n        })\r\n    }\r\n\r\n    const GetListProperty = () => {\r\n        __FetchFunction(LIST_PROPERTY, undefined, function(response) {\r\n            let result = [];\r\n            for (let i of response) {\r\n                i.ListObjType = [];\r\n                result.push(i);\r\n            }\r\n            setPropertyData(result);\r\n        });\r\n    }\r\n\r\n    useEffect(function() {\r\n        dispatch({type: LOADING});\r\n        document.title = _title + WEB_BASE_NAME;\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        let ListAPI = [{\r\n            url: LIST_PROPERTY,\r\n            requestOptions: {\r\n                method: 'POST',\r\n                redirect: 'follow',\r\n                headers: myHeaders,\r\n                body: JSON.stringify({\"ssid\": token})\r\n            }\r\n        }, {\r\n            url: LIST_OBJ_TYPE,\r\n            requestOptions: {\r\n                method: 'POST',\r\n                redirect: 'follow',\r\n                headers: myHeaders,\r\n                body: JSON.stringify({\"ssid\": token})\r\n            }\r\n        }, {\r\n            url: LIST_RULES,\r\n            requestOptions: {\r\n                method: 'POST',\r\n                redirect: 'follow',\r\n                headers: myHeaders,\r\n                body: JSON.stringify({\"ssid\": token})\r\n            }\r\n        }];\r\n\r\n        Promise.all(ListAPI.map((item => fetch(item.url, item.requestOptions))))\r\n            .then(responses => Promise.all(responses.map(resp => resp.json())))\r\n            .then(resp => {\r\n                let HasErr = false;\r\n                for (let i of resp) {\r\n                    if (i.code !== 200) {\r\n                        HasErr = true;\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            msg: resp.msg\r\n                        });\r\n                    }\r\n                }\r\n                if (!HasErr) {\r\n                    dispatch({type: LOADED});\r\n                    let result = [];\r\n                    for (let i of resp[0].msg) {\r\n                        i.ListObjType = [];\r\n                        result.push(i);\r\n                    }\r\n                    setPropertyData(result);\r\n                    if (result.length > 0) {\r\n                        GetPropertyInfo(result[0]);\r\n                    }\r\n                    let TempArr = [];\r\n                    for (let i of resp[1].msg) {\r\n                        TempArr.push({\r\n                            value: i.obj_type_id,\r\n                            label: i.obj_type_name,\r\n                            is_required: false\r\n                        });\r\n                    }\r\n                    setListObjType(TempArr);\r\n                    TempArr = [];\r\n                    for (let i of resp[2].msg) {\r\n                        TempArr.push({\r\n                            value: i.rule_id,\r\n                            label: i.rule_name\r\n                        });\r\n                    }\r\n                    setListRule(TempArr);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                });\r\n            });\r\n        return () => {\r\n            setPropertyData([]);\r\n            setListRule([]);\r\n            setListObjType([]);\r\n        }\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"container\" onClick={() => setShowAppBox(false)}>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={4000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            <Modal\r\n                show={ModalData.show}\r\n                title={ModalData.title}\r\n                onClickOut={HandleClickOut}\r\n                CloseModal={_ => setModalData({...ModalData, show: false})}\r\n                WrapClass={\"modal_wrap\"}>\r\n                {ModalData.mode === CREATE_PROPERTY && (\r\n                    <div style={{\r\n                        minWidth: '60vw',\r\n                    }}>\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor={\"_insert_property_name\"}>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Property's name:</span>\r\n                            </label>\r\n                            <input className={\"form-control\"} id={\"_insert_property_name\"} placeholder={\"Type a name...\"} value={ModalData.data.pro_name} onChange={e => {setModalData({\r\n                                ...ModalData,\r\n                                data: {\r\n                                    ...ModalData.data,\r\n                                    pro_name: e.target.value\r\n                                }\r\n                            })}}/>\r\n                        </div>\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor={\"_insert_property_desc\"}>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Description:</span>\r\n                            </label>\r\n                            <input className={\"form-control\"} id={\"_insert_property_desc\"} placeholder={\"Description\"} value={ModalData.data.pro_desc} onChange={e => {setModalData({\r\n                                ...ModalData,\r\n                                data: {\r\n                                    ...ModalData.data,\r\n                                    pro_desc: e.target.value\r\n                                }\r\n                            })}}/>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20 margin-bottom-20\">\r\n                            <label>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Select object type:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={ListObjType}\r\n                                value={ModalSelectData1}\r\n                                onChange={ChangeObjectTypeinModal}\r\n                                isMulti\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20 margin-bottom-20\">\r\n                            <label>\r\n                                <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Select rule:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={ListRule}\r\n                                value={ModalSelectData}\r\n                                onChange={ChangeProperty}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            Array.isArray(ModalSelectData1) && ModalSelectData1.map((item, index) => {\r\n                                return (\r\n                                    <div className={\"margin-top-20\"} key={index}>\r\n                                        <input id={\"__cb_modal\" + index} type={\"checkbox\"} checked={item.is_required} onChange={e => ChangeRequiredInModal(index)}/>\r\n                                        <label htmlFor={\"__cb_modal\" + index} className={\"margin-left-5\"}>This property is required in {item.label}</label>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                        <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                        <button className={\"btn theme_green pull-right margin-right-10\"} onClick={InsertProperty}>Create</button>\r\n                    </div>\r\n                )}\r\n            </Modal>\r\n\r\n            <div className=\"box-style\" style={{height: \"calc(100% - 40px)\", padding: '20px', display: 'flex', position: 'relative'}}>\r\n\r\n                <div style={{width: '300px', height: 'calc(100% - 30px)', display: 'inline-block'}}>\r\n                    <input className=\"form-control\" disabled={true} onKeyDown={SearchByPropertyName} placeholder=\"Find by property's name ...\"/>\r\n                    <div className=\"list-container margin-top-10\">\r\n                        {PropertyData.length === 0 ? (\r\n                            <div>\r\n                                <span>No property founded!</span>\r\n                            </div>\r\n                        ) : PropertyData.map((item, index) => {\r\n                            return (\r\n                                <div\r\n                                    key={index}\r\n                                    className=\"list-item\"\r\n                                    onClick={_ => GetPropertyInfo(item)}>\r\n                                    {item.pro_name}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {Array.isArray(PropertyData) && PropertyData.length > 0 && (\r\n                    <div style={{\r\n                        width: 'calc(100% - 350px)',\r\n                        height: 'calc(100% - 70px)',\r\n                        marginLeft: '50px',\r\n                        marginTop: '50px',\r\n                        display: 'inline-block',\r\n                        overflow: 'auto',\r\n                        padding: '10px'}}>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"name\">\r\n                                <span className=\"bold\">Property's name:</span>\r\n                            </label>\r\n                            <input className=\"form-control\" id=\"name\" value={DetailData.pro_name} onChange={e => {\r\n                                setDetailData({\r\n                                    ...DetailData,\r\n                                    pro_name: e.target.value\r\n                                })\r\n                            }}/>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"desc\">\r\n                                <span className=\"bold\">Property's description:</span>\r\n                            </label>\r\n                            <input className=\"form-control\" id=\"desc\" value={DetailData.pro_desc} onChange={e => {\r\n                                setDetailData({\r\n                                    ...DetailData,\r\n                                    pro_desc: e.target.value\r\n                                })\r\n                            }}/>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"type\">\r\n                                <span className=\"bold\">Object type:</span>\r\n                            </label>\r\n                            <Select\r\n                                id=\"type\"\r\n                                isMulti\r\n                                value={DetailData.ListObjType}\r\n                                options={ListObjType}\r\n                                onChange={ChangeObjType}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"rule\">\r\n                                <span className=\"bold\">Rule:</span>\r\n                            </label>\r\n                            <Select\r\n                                id=\"rule\"\r\n                                value={DetailData.rule}\r\n                                options={ListRule}\r\n                                onChange={ChangeRule}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            DetailData.hasOwnProperty(\"ListObjType\") && DetailData.ListObjType.map((item, index) => {\r\n                                return (\r\n                                    <div className={\"margin-top-20\"} key={index}>\r\n                                        <input id={\"__cb\" + index} type={\"checkbox\"} checked={item.is_required} onChange={e => ChangeRequired(e, index)}/>\r\n                                        <label htmlFor={\"__cb\" + index} className={\"margin-left-5\"}>'{DetailData.pro_name}' is required in {item.label}</label>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <small className=\"italic\">(Created: {DetailData.created_at}, Last update: {DetailData.updated_at})</small>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <button className=\"btn pull-right theme_red margin-left-10\" onClick={DeleteProperty}>\r\n                                <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                    <FaRegWindowClose/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Delete\r\n                            </button>\r\n                            <button className=\"btn pull-right theme_cyan\" onClick={UpdateProperty}>\r\n                                <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                    <MdOutlineSave/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Save change\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div onClick={e => e.stopPropagation()}>\r\n                    <span className=\"fab-button\" onClick={ToggleApplicationBox}>\r\n                        <IconContext.Provider value={{size: 25, color: 'white'}}>\r\n                            <RiFunctionLine/>\r\n                        </IconContext.Provider>\r\n                    </span>\r\n\r\n                    <div className={ShowAppBox ? \"application-box flex\" : \"application-box\"}>\r\n                        <button className=\"btn theme_green700 margin-10\" onClick={CreateProperty}>\r\n                            <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                <BiAddToQueue/>\r\n                            </IconContext.Provider>\r\n                            &nbsp;Create property</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Property;","import React from 'react';\r\nimport './Loading.sass'\r\n\r\nfunction Loading (props) {\r\n    return(\r\n        <div className=\"loading_container\">\r\n            <div className={\"center-div\"}>\r\n                <div className={\"loader\"}>Loading</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import \"./Login.sass\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {LOGIN, WEB_BASE_NAME} from \"../API_URL\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LOGGED_IN, NOT_LOGGED_IN} from \"../Redux/ReducersAndActions/Authentication/AuthenActionsDefinition\";\r\nimport {LOADING} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\n\r\nfunction Login(props) {\r\n    const {_title}          = props;\r\n    const {token}           = useSelector(state => state.Authen);\r\n    const dispatch          = useDispatch();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pass, setPass]   = useState(\"\");\r\n\r\n    const __FetchFunction = (URL, body, callback) => {\r\n        dispatch({type: LOADING});\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body),\r\n            redirect: 'follow'\r\n        };\r\n        fetch(URL, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    callback(result.msg, null);\r\n                } else {\r\n                    toast.error(result.msg);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                toast.error(e);\r\n            });\r\n    }\r\n\r\n    const Login = (event) => {\r\n        event.preventDefault();\r\n        if (email.trim() === \"\") {\r\n            toast.error(\"Fill email!\");\r\n            return;\r\n        }\r\n        if (pass.trim() === \"\") {\r\n            toast.error(\"Fill password!\");\r\n            return;\r\n        }\r\n        const BodyData = {\r\n            email: email,\r\n            pass: pass\r\n        };\r\n        __FetchFunction(LOGIN, BodyData, function(response) {\r\n            dispatch({\r\n                type: LOGGED_IN,\r\n                token: response.token\r\n            });\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({type: NOT_LOGGED_IN});\r\n        document.title = _title + WEB_BASE_NAME;\r\n        return () => {\r\n            setEmail(\"\");\r\n            setPass(\"\");\r\n        }\r\n    }, [token]);\r\n    return(\r\n        <div className={\"login_container\"}>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            <div className={\"login_form\"}>\r\n                <h2 className={\"text-center\"}>IP Manager</h2>\r\n                <form onSubmit={Login}>\r\n                    <div>\r\n                        <label htmlFor={\"email\"} className={\"bold\"}>Email:</label>\r\n                        <input type={\"text\"} id={\"email\"} className={\"form-control\"} value={email} onChange={e => setEmail(e.target.value)} placeholder={\"Email\"}/>\r\n                    </div>\r\n                    <div className={\"margin-top-20\"}>\r\n                        <label htmlFor={\"pass\"} className={\"bold\"}>Password:</label>\r\n                        <input type={\"password\"} id={\"pass\"} className={\"form-control\"} value={pass} onChange={e => setPass(e.target.value)} placeholder={\"Password\"}/>\r\n                    </div>\r\n                    <div className={\"margin-top-35\"}>\r\n                        <button type={\"submit\"} className={\"btn btn-block theme_blue\"}>Login</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport Modal from \"../Modal\";\r\nimport Select from \"react-select\";\r\nimport {IconContext} from \"react-icons\";\r\nimport {BiAddToQueue, FaRegWindowClose, MdOutlineSave, RiFunctionLine} from \"react-icons/all\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {ERROR, LOADED} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {CREATE_USER, DELETE_USERS, GET_USER_INFO, LIST_USERS, UPDATE_USERS, WEB_BASE_NAME} from \"../API_URL\";\r\nimport {NOT_LOGGED_IN} from \"../Redux/ReducersAndActions/Authentication/AuthenActionsDefinition\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction User(props) {\r\n    const CREATE_USER_MODE                      = 1;\r\n    const {_title}                              = props;\r\n    const dispatch                              = useDispatch();\r\n    const {token, is_admin}                     = useSelector(state => state.Authen);\r\n    const [ShowAppBox, setShowAppBox]           = useState(false);\r\n    const [UserData, setUserData]               = useState([]);\r\n    const [DetailData, setDetailData]           = useState({});\r\n    const [ModalData, setModalData]             = useState({mode: -1, data: {list_property: [], list_property_assign: []}, show: false, title: \"no title\"});\r\n    const Genders = [{\r\n        value: 0,\r\n        label: \"Male\"\r\n    }, {\r\n        value: 1,\r\n        label: \"Female\"\r\n    }, {\r\n        value: 2,\r\n        label: \"Other\"\r\n    }]\r\n\r\n    const __FetchFunction = (URL, body, callback, dismiss = true) => {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body),\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(URL, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    if(dismiss) dispatch({type: LOADED});\r\n                    callback(result.msg, null);\r\n                } else if (result.code === 700) {\r\n                    dispatch({type: NOT_LOGGED_IN});\r\n                } else {\r\n                    callback(null, result.msg);\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: result.msg\r\n                    });\r\n                    toast.error(result.msg);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n            });\r\n    }\r\n\r\n    const ToggleApplicationBox = (e) => {\r\n        e.stopPropagation();\r\n        setShowAppBox(!ShowAppBox);\r\n    }\r\n\r\n    const HandleClickOut = (e) => {\r\n        setModalData({\r\n            ...ModalData,\r\n            show: false\r\n        })\r\n    }\r\n    const GetUserInfo = (user) => {\r\n        setDetailData(user);\r\n        // let BodyData = {\r\n        //     \"ssid\": token,\r\n        //     \"uid\": user.uid\r\n        // }\r\n        // __FetchFunction(GET_USER_INFO, BodyData, function (resp) {\r\n        //     for (let i of Genders) {\r\n        //         if (i.value === resp[0].gender) {\r\n        //             resp[0].gender_obj = i;\r\n        //             break;\r\n        //         }\r\n        //     }\r\n        //     UserData.map(function (i, ix) {\r\n        //         if (i.uid === resp[0].uid) {\r\n        //             let CloneUserData = [...UserData];\r\n        //             CloneUserData[ix] = resp[0];\r\n        //             setUserData(CloneUserData);\r\n        //         }\r\n        //     });\r\n        //     setDetailData(resp[0]);\r\n        // });\r\n    }\r\n\r\n    const ChangeGenderModal = (item) => {\r\n        setModalData({\r\n            ...ModalData,\r\n            data: {\r\n                ...ModalData.data,\r\n                gender_obj: item\r\n            }\r\n        });\r\n    }\r\n\r\n    const ChangeGender = (item) => {\r\n      setDetailData({\r\n          ...DetailData,\r\n          gender_obj: item\r\n      });\r\n    }\r\n\r\n    const DeleteUser = () => {\r\n        swal({\r\n            title: \"DELETE\",\r\n            text: `DELETE User and CAN NOT RECOVER. Continue?`,\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true\r\n        }).then(val => {\r\n            if (val) {\r\n                let BodyData = {\r\n                    \"ssid\": token,\r\n                    \"uid\": DetailData.uid\r\n                }\r\n                __FetchFunction(DELETE_USERS, BodyData, function(resp) {\r\n                    __FetchFunction(LIST_USERS, BodyData, function (resp, err) {\r\n                        setUserData(resp);\r\n                        if (resp.length > 0) {\r\n                            GetUserInfo(resp[0]);\r\n                        }\r\n                    });\r\n                    toast.success(resp);\r\n                }, false);\r\n            }\r\n        });\r\n    }\r\n    \r\n    const UpdateUser = () => {\r\n      let BodyData = {\r\n          \"ssid\": token,\r\n          \"uid\": DetailData.uid,\r\n          \"username\": DetailData.username,\r\n          \"fullname\": DetailData.fullname,\r\n          \"gender\": DetailData.gender_obj.value,\r\n          \"phone\": DetailData.phone,\r\n          \"dob\": DetailData.dob,\r\n          \"is_admin\": DetailData.is_admin\r\n      }\r\n      __FetchFunction(UPDATE_USERS, BodyData, function (resp) {\r\n          GetUserInfo(DetailData);\r\n          toast.success(resp);\r\n      });\r\n    }\r\n\r\n    const OpenModalCreateUser = () => {\r\n      setModalData({\r\n          ...ModalData,\r\n          title: \"Create User\",\r\n          mode: CREATE_USER_MODE,\r\n          show: true,\r\n          data: {\r\n              email: \"\",\r\n              username: \"\",\r\n              fullname: \"\",\r\n              password: \"\",\r\n              dob: \"\",\r\n              gender_obj: null,\r\n              phone: \"\",\r\n              is_admin: false\r\n          }\r\n      });\r\n    }\r\n    \r\n    const CreateUser = () => {\r\n        if (ModalData.data.email.trim() === \"\") {\r\n            toast.error(\"Fill email field\");\r\n            return;\r\n        }\r\n        if (ModalData.data.fullname.trim() === \"\") {\r\n            toast.error(\"Fill fullname field\");\r\n            return;\r\n        }\r\n        if (ModalData.data.password.trim() === \"\") {\r\n            toast.error(\"Fill password field\");\r\n            return;\r\n        }\r\n        if (ModalData.data.gender_obj === null) {\r\n            toast.error(\"Select gender\");\r\n            return;\r\n        }\r\n        let BodyData = {\r\n            \"ssid\": token,\r\n            email: ModalData.data.email,\r\n            username: ModalData.data.username,\r\n            fullname: ModalData.data.fullname,\r\n            password: ModalData.data.password,\r\n            gender: ModalData.data.gender_obj.value,\r\n            phone: ModalData.data.phone,\r\n            is_admin: ModalData.data.is_admin\r\n        }\r\n        __FetchFunction(CREATE_USER, BodyData, function (resp) {\r\n            __FetchFunction(LIST_USERS, BodyData, function (resp, err) {\r\n                setUserData(resp);\r\n                if (resp.length > 0) {\r\n                    GetUserInfo(resp[0]);\r\n                }\r\n            });\r\n            setModalData({\r\n                ...ModalData,\r\n                show: false\r\n            })\r\n            toast.success(resp);\r\n        }, false);\r\n    }\r\n    \r\n    useEffect(function() {\r\n        document.title = _title + WEB_BASE_NAME;\r\n        let BodyData = {\r\n            \"ssid\": token\r\n        }\r\n        __FetchFunction(LIST_USERS, BodyData, function (resp, err) {\r\n            if (err === null) {\r\n                setUserData(resp);\r\n                if (resp.length > 0) {\r\n                    GetUserInfo(resp[0]);\r\n                }\r\n            }\r\n        });\r\n    },[token]);\r\n\r\n    return (\r\n        <div className=\"container\" onClick={() => setShowAppBox(false)}>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={4000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            <Modal\r\n                show={ModalData.show}\r\n                title={ModalData.title}\r\n                onClickOut={HandleClickOut}\r\n                CloseModal={_ => setModalData({...ModalData, show: false})}\r\n                WrapClass={\"modal_wrap\"}>\r\n                    {ModalData.mode === CREATE_USER_MODE && (\r\n                        <div style={{\r\n                            minWidth: '60vw',\r\n                        }}>\r\n                            <div>\r\n                                <label htmlFor={\"create_email\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Email:</span>\r\n                                </label>\r\n                                <input className={\"form-control\"} id={\"create_email\"} placeholder={\"Email\"} value={ModalData.data.email} onChange={e => {setModalData({\r\n                                    ...ModalData,\r\n                                    data: {\r\n                                        ...ModalData.data,\r\n                                        email: e.target.value\r\n                                    }\r\n                                })}}/>\r\n                            </div>\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <label htmlFor={\"create_username\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Username:</span>\r\n                                </label>\r\n                                <input className={\"form-control\"} id={\"create_username\"} placeholder={\"Username\"} value={ModalData.data.username} onChange={e => {setModalData({\r\n                                    ...ModalData,\r\n                                    data: {\r\n                                        ...ModalData.data,\r\n                                        username: e.target.value\r\n                                    }\r\n                                })}}/>\r\n                            </div>\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <label htmlFor={\"create_fullname\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Fullname:</span>\r\n                                </label>\r\n                                <input className={\"form-control\"} id={\"create_fullname\"} placeholder={\"Fullname\"} value={ModalData.data.fullname} onChange={e => {setModalData({\r\n                                    ...ModalData,\r\n                                    data: {\r\n                                        ...ModalData.data,\r\n                                        fullname: e.target.value\r\n                                    }\r\n                                })}}/>\r\n                            </div>\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <label htmlFor={\"create_password\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Password:</span>\r\n                                </label>\r\n                                <input className={\"form-control\"} id={\"create_password\"} type={\"password\"} placeholder={\"Password\"} value={ModalData.data.password} onChange={e => {setModalData({\r\n                                    ...ModalData,\r\n                                    data: {\r\n                                        ...ModalData.data,\r\n                                        password: e.target.value\r\n                                    }\r\n                                })}}/>\r\n                            </div>\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <label htmlFor={\"create_dob\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Date of birth:</span>\r\n                                </label>\r\n                                <input className={\"form-control\"} id={\"create_dob\"} type={\"date\"} placeholder={\"Date of birth\"} value={ModalData.data.dob} onChange={e => {setModalData({\r\n                                    ...ModalData,\r\n                                    data: {\r\n                                        ...ModalData.data,\r\n                                        dob: e.target.value\r\n                                    }\r\n                                })}}/>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <label htmlFor={\"create_gender\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Gender:</span>\r\n                                </label>\r\n                                <Select\r\n                                    options={Genders}\r\n                                    value={ModalData.data.gender_obj}\r\n                                    onChange={ChangeGenderModal}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"margin-top-20\">\r\n                                <label htmlFor={\"create_phone\"}>\r\n                                    <span className=\"bold\" style={{textTransform: \"capitalize\"}}>Phone:</span>\r\n                                </label>\r\n                                <input className={\"form-control\"} id={\"create_phone\"} type={\"text\"} placeholder={\"Date of birth\"} value={ModalData.data.phone} onChange={e => {setModalData({\r\n                                    ...ModalData,\r\n                                    data: {\r\n                                        ...ModalData.data,\r\n                                        phone: e.target.value\r\n                                    }\r\n                                })}}/>\r\n                            </div>\r\n\r\n                            <div className={\"margin-top-20\"}>\r\n                                <input type={\"checkbox\"} checked={ModalData.data.is_admin} id={\"create_is_admin\"} onChange={e => {\r\n                                    setModalData({\r\n                                        ...ModalData,\r\n                                        data: {\r\n                                            ...ModalData.data,\r\n                                            is_admin: !ModalData.data.is_admin\r\n                                        }\r\n                                    })\r\n                                }}/>\r\n                                <label htmlFor={\"create_is_admin\"}>\r\n                                    &nbsp; ADMIN Role\r\n                                </label>\r\n                            </div>\r\n                            <div className={\"margin-top-20\"}>\r\n                                <button className={\"btn pull-right\"} onClick={_ => setModalData({...ModalData, show: false})}>Cancel</button>\r\n                                <button className={\"btn theme_green pull-right margin-right-10\"} onClick={CreateUser}>Create</button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n            </Modal>\r\n\r\n            <div className=\"box-style\" style={{height: \"calc(100% - 40px)\", padding: '20px', display: 'flex', position: 'relative'}}>\r\n\r\n                <div style={{width: '300px', height: 'calc(100% - 30px)', display: 'inline-block'}}>\r\n                    <input className=\"form-control\" disabled={true} placeholder=\"Find by email ...\"/>\r\n                    <div className=\"list-container margin-top-10\">\r\n                        {Array.isArray(UserData) && UserData.length > 0 ?\r\n                            UserData.map((item, index) => {\r\n                            return (\r\n                                <div\r\n                                    key={index}\r\n                                    className=\"list-item\"\r\n                                    onClick={_ => GetUserInfo(item)}>\r\n                                    {item.username}\r\n                                </div>\r\n                            )\r\n                        }): (\r\n                                <div>\r\n                                    <span>No user founded!</span>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {Array.isArray(UserData) && UserData.length > 0 && (\r\n                    <div style={{\r\n                        width: 'calc(100% - 350px)',\r\n                        height: 'calc(100% - 70px)',\r\n                        marginLeft: '50px',\r\n                        marginTop: '50px',\r\n                        display: 'inline-block',\r\n                        overflow: 'auto',\r\n                        padding: '10px'}}>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"email\">\r\n                                <span className=\"bold\">Email:</span>\r\n                            </label>\r\n                            <input className=\"form-control\" id=\"email\" type={\"text\"} disabled={true} value={DetailData.email} onChange={e => {\r\n                                setDetailData({\r\n                                    ...DetailData,\r\n                                    email: e.target.value\r\n                                })\r\n                            }}/>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"username\">\r\n                                <span className=\"bold\">Username:</span>\r\n                            </label>\r\n                            <input className=\"form-control\" id=\"username\" type={\"text\"} value={DetailData.username} onChange={e => {\r\n                                setDetailData({\r\n                                    ...DetailData,\r\n                                    username: e.target.value\r\n                                })\r\n                            }}/>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"fullname\">\r\n                                <span className=\"bold\">Fullname:</span>\r\n                            </label>\r\n                            <input className=\"form-control\" id=\"fullname\" type={\"text\"} value={DetailData.fullname} onChange={e => {\r\n                                setDetailData({\r\n                                    ...DetailData,\r\n                                    fullname: e.target.value\r\n                                })\r\n                            }}/>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"dob\">\r\n                                <span className=\"bold\">Date of birth:</span>\r\n                            </label>\r\n                            <input className=\"form-control\" id=\"dob\" type={\"date\"} value={DetailData.dob} onChange={e => {\r\n                                setDetailData({\r\n                                    ...DetailData,\r\n                                    dob: e.target.value\r\n                                })\r\n                            }}/>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"dob\">\r\n                                <span className=\"bold\">Gender:</span>\r\n                            </label>\r\n                            <Select\r\n                                options={Genders}\r\n                                value={DetailData.gender_obj}\r\n                                onChange={ChangeGender}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <label htmlFor=\"phone\">\r\n                                <span className=\"bold\">Phone number:</span>\r\n                            </label>\r\n                            <input className=\"form-control\" id=\"phone\" type={\"text\"} value={DetailData.phone} onChange={e => {\r\n                                setDetailData({\r\n                                    ...DetailData,\r\n                                    phone: e.target.value\r\n                                })\r\n                            }}/>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <input type={\"checkbox\"} checked={DetailData.is_admin} disabled={!is_admin} id={\"is_admin\"} onChange={e => setDetailData({\r\n                                ...DetailData,\r\n                                is_admin: !DetailData.is_admin\r\n                            })}/>\r\n                            <label htmlFor={\"is_admin\"}>\r\n                                &nbsp;ADMIN Role\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"margin-top-20\">\r\n                            <button className=\"btn pull-right theme_red margin-left-10\" onClick={DeleteUser}>\r\n                                <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                    <FaRegWindowClose/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Delete\r\n                            </button>\r\n                            <button className=\"btn pull-right theme_cyan\" onClick={UpdateUser}>\r\n                                <IconContext.Provider value={{size: 22, color: 'white', className: 'middle-btn'}}>\r\n                                    <MdOutlineSave/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Save change\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div onClick={e => e.stopPropagation()}>\r\n                    <span className=\"fab-button\" onClick={ToggleApplicationBox}>\r\n                        <IconContext.Provider value={{size: 25, color: 'white'}}>\r\n                            <RiFunctionLine/>\r\n                        </IconContext.Provider>\r\n                    </span>\r\n\r\n                    <div className={ShowAppBox ? \"application-box flex\" : \"application-box\"}>\r\n                        {is_admin && (\r\n                            <button className=\"btn theme_green700 margin-10\" onClick={OpenModalCreateUser}>\r\n                                <IconContext.Provider value={{size: 22, className: 'middle-btn'}}>\r\n                                    <BiAddToQueue/>\r\n                                </IconContext.Provider>\r\n                                &nbsp;Create User</button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React, {useEffect, useState} from \"react\";\r\nimport {Route, BrowserRouter as Router, Switch, Redirect} from \"react-router-dom\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Rules from \"./components/Rules\";\r\nimport {LIST_OBJ_TYPE} from \"./components/API_URL\";\r\nimport {ERROR, LOADED, LOADING} from \"./components/Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ObjectA from \"./components/ObjectA\";\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport SideBarCustom from \"./components/ProSideBarCustom\";\r\nimport Property from \"./components/Property\";\r\nimport Loading from \"./components/Loading\";\r\nimport Login from \"./components/Login\";\r\nimport User from \"./components/User\";\r\n\r\nconst App = () => {\r\n    let ListSideBarItem                         = [];\r\n    const dispatch                              = useDispatch();\r\n    const [ListObjectType, setListObjectType]   = useState([]);\r\n    const { loading, error, _msg }              = useSelector(state => state.Status);\r\n    const { token, is_admin }                   = useSelector(state => state.Authen);\r\n\r\n    useEffect(function() {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let raw = JSON.stringify({\r\n            \"ssid\": token\r\n        });\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(LIST_OBJ_TYPE, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    dispatch({type: LOADED});\r\n                    for (let i of result.msg) {\r\n                        ListSideBarItem.push({\r\n                            ...i,\r\n                            path: `/${i.obj_type_name.toLowerCase()}`,\r\n                            name: i.obj_type_name,\r\n                            autoRender: true\r\n                        });\r\n                    }\r\n                    if (is_admin) {\r\n                        ListSideBarItem.push({\r\n                            icon: \"BsCardList\",\r\n                            path: \"/rules\",\r\n                            name: \"Rules\",\r\n                            autoRender: false\r\n                        }, {\r\n                            icon: \"AiOutlinePropertySafety\",\r\n                            path: \"/property\",\r\n                            name: \"Property\",\r\n                            autoRender: false\r\n                        });\r\n                    }\r\n                    ListSideBarItem.push({\r\n                        icon: \"FaUserAlt\",\r\n                        path: \"/users\",\r\n                        name: \"Users\",\r\n                        autoRender: false\r\n                    });\r\n                    setListObjectType(ListSideBarItem);\r\n                } else {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        msg: result.msg[0]\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    msg: e\r\n                })\r\n            });\r\n    }, [token]);\r\n\r\n    return(\r\n        <>\r\n            <Router>\r\n                {token !== null && (\r\n                    <>\r\n                        <SideBarCustom list_item={ListObjectType}/>\r\n                        <Switch>\r\n                            {\r\n                                ListObjectType.map(function(item, index) {\r\n                                    return (\r\n                                        item.autoRender === true && (\r\n                                            <Route exact path={item.path}>\r\n                                                <ObjectA _title={item.name} _obj_type_id={item.obj_type_id} _obj_type_name={item.obj_type_name}/>\r\n                                            </Route>\r\n                                        )\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            {is_admin && (\r\n                                <>\r\n                                    <Route exact path=\"/rules\">\r\n                                        <Rules _title=\"Rules\"/>\r\n                                    </Route>\r\n\r\n                                    <Route exact path=\"/property\">\r\n                                        <Property _title=\"Rules\"/>\r\n                                    </Route>\r\n\r\n                                    <Route exact path=\"/users\">\r\n                                        <User _title=\"Users\"/>\r\n                                    </Route>\r\n                                </>\r\n                            )}\r\n\r\n                            <Route>\r\n                                <NotFound _title=\"404\"/>\r\n                            </Route>\r\n                        </Switch>\r\n                        {loading && <Loading/>}\r\n                        <Redirect to={(Array.isArray(ListObjectType) && ListObjectType.length > 0) ? ListObjectType[0].path : \"/users\"}/>\r\n                    </>\r\n                )}\r\n                {token === null && (\r\n                    <>\r\n                        <Route exact path=\"/login\">\r\n                            <Login _title=\"Login\"/>\r\n                        </Route>\r\n                        <Redirect to={\"/login\"}/>\r\n                    </>\r\n                )}\r\n            </Router>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {ERROR, LOADING, LOADED, SUCCESS} from \"./StatusActionsDefinition\";\r\n\r\nconst initState = {\r\n    loading: true,\r\n    error: false,\r\n    _msg: \"\"\r\n}\r\n\r\nconst StatusReducer = (state = initState, payload) => {\r\n    const { type } = payload;\r\n    switch (type) {\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n                _msg: \"loading\"\r\n            }\r\n\r\n        case ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false,\r\n                _msg: payload._msg\r\n            }\r\n\r\n        case LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                _msg: \"\"\r\n            }\r\n\r\n        case SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                _msg: \"\"\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default StatusReducer;","import {LOGGED_IN, NOT_LOGGED_IN} from \"./AuthenActionsDefinition\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst ssid = localStorage.getItem(\"ssid\");\r\n\r\nconst initState = {\r\n    logged_in: false,\r\n    token: ssid,\r\n    is_admin: ssid !== null && ssid !== undefined ? jwt_decode(ssid).is_admin : false,\r\n    fullname: ssid !== null && ssid !== undefined ? jwt_decode(ssid).fullname : \"\"\r\n}\r\n\r\nconst AuthenticationReducer = (state = initState, payload) => {\r\n    const { type } = payload;\r\n    switch (type) {\r\n        case LOGGED_IN:\r\n            localStorage.setItem(\"ssid\", payload.token);\r\n            return {\r\n                ...state,\r\n                logged_in: true,\r\n                token: payload.token,\r\n                is_admin: jwt_decode(payload.token).is_admin,\r\n                fullname: jwt_decode(payload.token).fullname\r\n            };\r\n        case NOT_LOGGED_IN:\r\n            localStorage.removeItem(\"ssid\");\r\n            return {\r\n                ...state,\r\n                logged_in: false,\r\n                token: null,\r\n                is_admin: false,\r\n                username: \"\"\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AuthenticationReducer;","import { combineReducers } from \"redux\";\r\nimport StatusReducer from './ReducersAndActions/Status/StatusReducer';\r\nimport AuthenticationReducer from \"./ReducersAndActions/Authentication/AuthenReducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n    Status: StatusReducer,\r\n    Authen: AuthenticationReducer\r\n});\r\n\r\nexport default RootReducer;","import { createStore } from \"redux\";\r\nimport RootReducer from './RootReducer';\r\n\r\nconsole.log(process.env.NODE_ENV);\r\nlet store;\r\nif (process.env.NODE_ENV === \"development\") {\r\n    store = createStore(RootReducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n} else {\r\n    store = createStore(RootReducer);\r\n}\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport Store from './components/Redux/StoreRedux';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>,\r\n\r\n  <Provider store={Store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}