{"version":3,"sources":["components/API_URL.js","components/Modal/index.js","components/Redux/ReducersAndActions/Status/StatusActionsDefinition.js","components/BlackList/index.js","components/SideBar/1.jpg","components/Redux/ReducersAndActions/SideBar/SideBarActionsDefinition.js","components/SideBar/index.js","components/NotFound/index.js","App.js","reportWebVitals.js","components/Redux/ReducersAndActions/SideBar/SideBarReducer.js","components/Redux/ReducersAndActions/Status/StatusReducer.js","components/Redux/RootReducer.js","components/Redux/StoreRedux.js","index.js"],"names":["BASE_URL","process","TEMPLATE_URL","WEB_BASE_NAME","BLACKLIST_GET_IP","Modal","props","show","title","children","onDismiss","WrapClass","CloseModal","className","onClick","e","stopPropagation","Provider","value","size","color","LOADING","LOADED","ERROR","SUCCESS","_MONTH","ReplaceCharacters","msg","replace","ConvertTimeStamptoString","timestamp","getDate","getTime","forInputTag","length","_d","Date","getFullYear","getMonth","getHours","getMinutes","getSeconds","BlackList","_title","useState","editItem","setEditItem","ExcelModal","setExcelModal","BlackListData","setBlackListData","TotalPage","setTotalPage","offset","setOffSet","Search","setSearch","uploaded","name","file","selectedFile","setSelectedFile","useSelector","state","Status","loading","error","_msg","dispatch","useDispatch","LIMIT","_FetchAllData","limit","type","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","code","list","total","catch","DismissModal","DismissExcelModal","UploadExcel","data","FormData","URI","mode","toast","success","link","document","createElement","href","url","setAttribute","appendChild","click","removeChild","useEffect","to","pathname","target","rel","htmlFor","onChange","files","id","accept","ip","placeholder","desc","selected","create_time","date","editMode","tempData","index","parse","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","theme","draggable","pauseOnHover","style","onKeyDown","trim","keyCode","swal","text","icon","buttons","dangerMode","val","setUTCHours","map","item","createdAt","updatedAt","EditIP","splice","afterDel","delIPs","display","Math","ceil","Array","from","_","i","OPEN_SIDEBAR","CLOSE_SIDEBAR","SELECT_ITEM","SideBar","ListItems","is_open","_index","getWindowDimensions","window","width","innerWidth","height","innerHeight","windowsSize","setWindowSize","handleResize","addEventListener","removeEventListener","ToogleSideBar","SelectItem","src","ava","path","NotFound","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CLOSED","initState","SideBarReducer","payload","StatusReducer","RootReducer","combineReducers","Store","createStore","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.2abd6f9f.chunk.js","sourcesContent":["export const BASE_URL               = process.env.REACT_APP_BASEURL;\r\nexport const TEMPLATE_URL           = BASE_URL + \"asset/template/\";\r\nexport const REPORT_URL             = BASE_URL + \"asset/report/\";\r\nexport const WEB_BASE_NAME          = \" | IP  Manager\";\r\n\r\nexport const LOGIN                  = BASE_URL + 'login';\r\n\r\n/*      Blacklist API URL       */\r\nexport const BLACKLIST_ADD_IP       = BASE_URL + 'bl_add_ip';\r\nexport const BLACKLIST_GET_IP       = BASE_URL + 'bl_get_ip';\r\nexport const BLACKLIST_EDIT_IP      = BASE_URL + 'bl_edit_ip';\r\nexport const BLACKLIST_REMOVE_IP    = BASE_URL + 'bl_remove_ip';\r\nexport const BLACKLIST_SEARCH_IP    = BASE_URL + 'bl_search_ip';\r\nexport const BLACKLIST_EXPORT_EXCEL = BASE_URL + 'bl_export_excel';\r\nexport const BLACKLIST_ADD_EXCEL    = BASE_URL + 'bl_new_excel';\r\nexport const BLACKLIST_UPDATE_EXCEL = BASE_URL + 'bl_update_excel';\r\nexport const BLACKLIST_DELETE_EXCEL = BASE_URL + 'bl_delete_excel';\r\n\r\nexport const BLACKLIST_IMPORTED_IP_TODAY_EXCEL = BASE_URL + 'bl_list_imported_ip_excel';","import React from 'react';\r\nimport { IoMdCloseCircle } from \"react-icons/io\";\r\nimport {IconContext} from \"react-icons\";\r\nimport \"./Modal.sass\";\r\n\r\nconst Modal = (props) => {\r\n    const { show, title, children, onDismiss, WrapClass, CloseModal } = props;\r\n    if (!show) return null;\r\n    return (\r\n        <div className={WrapClass} onClick={onDismiss}>\r\n            <div className=\"modal_container\" onClick={e => e.stopPropagation()}>\r\n                <div className=\"modal_title\">\r\n                    <span className={\"modal_close_btn\"} onClick={CloseModal}>\r\n                        <IconContext.Provider value={{size: 16, color: \"#939393\"}}>\r\n                            <IoMdCloseCircle/>\r\n                        </IconContext.Provider>\r\n                    </span>\r\n                    <p>{title}</p>\r\n                </div>\r\n\r\n                {/*Doc: https://reactjs.org/docs/jsx-in-depth.html*/}\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","export const LOADING = \"loading\";\r\nexport const LOADED = \"loaded\";\r\nexport const ERROR = \"error\";\r\nexport const SUCCESS = \"success\";","import React, { useEffect, useState } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport {IconContext} from \"react-icons/lib\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n    BLACKLIST_ADD_IP,\r\n    BLACKLIST_EDIT_IP,\r\n    BLACKLIST_GET_IP,\r\n    BLACKLIST_REMOVE_IP,\r\n    WEB_BASE_NAME,\r\n    BLACKLIST_ADD_EXCEL,\r\n    TEMPLATE_URL,\r\n    BLACKLIST_SEARCH_IP,\r\n    BLACKLIST_UPDATE_EXCEL,\r\n    BLACKLIST_DELETE_EXCEL,\r\n    BLACKLIST_EXPORT_EXCEL,\r\n    BASE_URL, BLACKLIST_IMPORTED_IP_TODAY_EXCEL\r\n} from '../API_URL';\r\nimport Modal from \"../Modal\";\r\nimport \"./BlackList.sass\"\r\nimport {ERROR, LOADED, LOADING} from \"../Redux/ReducersAndActions/Status/StatusActionsDefinition\";\r\nimport {\r\n    BsPlusLg,\r\n    RiEditFill,\r\n    RiDeleteBin2Fill,\r\n    RiFileExcel2Fill\r\n} from \"react-icons/all\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n//Sweetalert: https://sweetalert.js.org/guides/\r\n//Toastify: https://fkhadra.github.io/react-toastify/icons\r\n\r\nconst ADD_NEW_MODE  = 0;\r\nconst UPDATE_MODE   = 1;\r\nconst DELETE_MODE   = 2;\r\n\r\nconst _MONTH = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Sep\"];\r\n\r\nconst ReplaceCharacters = (msg) => {\r\n    if (typeof(msg) !== 'string') return msg;\r\n    return msg.replace(/[\"']/g, \"\");\r\n}\r\n\r\nconst ConvertTimeStamptoString = (timestamp, getDate = true, getTime = true, forInputTag = false) => {\r\n    let msg = \"\";\r\n    if (!timestamp || timestamp.length === 0) return \"\";\r\n    let _d = new Date(timestamp);\r\n\r\n    if (forInputTag) {\r\n        if (getDate) {\r\n            msg += _d.getFullYear();\r\n            msg += \"-\"\r\n            msg += ((_d.getMonth() + 1) < 10) ? \"0\" + (_d.getMonth() + 1) : (_d.getMonth() + 1);\r\n            msg += \"-\"\r\n            msg += (_d.getDate() < 10) ? \"0\" + _d.getDate() : _d.getDate();\r\n        }\r\n    } else {\r\n        if (getDate) {\r\n            msg += _MONTH[_d.getMonth()];\r\n            msg += \" \";\r\n            msg += (_d.getDate() < 10) ? \"0\" + _d.getDate() : _d.getDate();\r\n            msg += \", \";\r\n            msg += _d.getFullYear();\r\n            msg += \" \";\r\n        }\r\n\r\n        if (getTime) {\r\n            msg += (_d.getHours() < 10) ? \"0\" + _d.getHours() : _d.getHours();\r\n            msg += \":\";\r\n            msg += (_d.getMinutes() < 10) ? \"0\" + _d.getMinutes() : _d.getMinutes();\r\n            msg += \":\";\r\n            msg += (_d.getSeconds() < 10) ? \"0\" + _d.getSeconds() : _d.getSeconds();\r\n        }\r\n    }\r\n    return msg;\r\n}\r\n\r\nfunction BlackList (props) {\r\n    const { _title }                        = props;\r\n    const [editItem, setEditItem]           = useState({show: false});\r\n    const [ExcelModal, setExcelModal]       = useState({show: false});\r\n    const [BlackListData, setBlackListData] = useState([]);\r\n    const [TotalPage, setTotalPage]         = useState(0);\r\n    const [offset, setOffSet]               = useState(0);\r\n    const [Search, setSearch]               = useState(\"\");\r\n    const [selectedFile, setSelectedFile]   = useState({uploaded: false, name: \"No file\", file: null});\r\n    const { loading, error, _msg }          = useSelector(state => state.Status);\r\n    const dispatch                          = useDispatch();\r\n    const LIMIT                             = 10;\r\n\r\n    const _FetchAllData = (offset, limit = LIMIT) => {\r\n        dispatch({\r\n            type: LOADING\r\n        });\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let raw = JSON.stringify({\r\n            \"limit\": limit,\r\n            \"offset\": offset\r\n        });\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n          \r\n        fetch(BLACKLIST_GET_IP, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    dispatch({type: LOADED})\r\n                    setBlackListData(result.msg.list);\r\n                    setTotalPage(result.msg.total);\r\n                } else {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        _msg: result.msg[0]\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    _msg: e\r\n                })\r\n            });\r\n    }\r\n\r\n    const delIPs = (item, index) => {\r\n        swal({\r\n            title: \"DELETE\",\r\n            text: `Do you want delete IP ${item.ip}?`,\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true\r\n        }).then(val => {\r\n            if (val) {\r\n                //Delete IP here\r\n                let myHeaders = new Headers();\r\n                myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n                let raw = JSON.stringify({\r\n                    \"id\": ReplaceCharacters(item.id)\r\n                });\r\n\r\n                let requestOptions = {\r\n                    method: 'POST',\r\n                    headers: myHeaders,\r\n                    body: raw,\r\n                    redirect: 'follow'\r\n                };\r\n\r\n                fetch(BLACKLIST_REMOVE_IP, requestOptions)\r\n                    .then(response => response.json())\r\n                    .then(result => {\r\n                        if (result.code === 200) {\r\n                            dispatch({\r\n                                type: LOADED\r\n                            });\r\n                            toast.success(\"Delete successful!\");\r\n                            BlackListData.splice(index, 1);\r\n                            let afterDel = [...BlackListData];\r\n                            setBlackListData(afterDel);\r\n                        } else {\r\n                            toast.error(\"Error while deleting!\");\r\n                            dispatch({\r\n                                type: ERROR,\r\n                                msg: result.msg\r\n                            })\r\n                        }\r\n                    })\r\n                    .catch(e => {\r\n                        toast.error(\"Error while deleting!\");\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            _msg: e\r\n                        })\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    const EditIP = (item, index) => {\r\n        setEditItem({\r\n            ...item,\r\n            show: true,\r\n            title: 'Edit blacklist ip',\r\n            index: index,\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    const SaveEditIP = () => {\r\n        dispatch({\r\n            type: LOADING\r\n        });\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let raw = JSON.stringify({\r\n            \"id\": editItem.id,\r\n            \"ip\": editItem.ip,\r\n            \"desc\": editItem.desc,\r\n            \"create_time\": editItem.create_time\r\n        });\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(BLACKLIST_EDIT_IP, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    dispatch({\r\n                        type: LOADED\r\n                    });\r\n                    toast.success(\"Update successful!\");\r\n                    let tempData = BlackListData;\r\n                    tempData[editItem.index] = JSON.parse(JSON.stringify(editItem));\r\n                    setBlackListData(tempData);\r\n                    DismissModal();\r\n                } else {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        _msg: result.msg[0]\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    _msg: e\r\n                });\r\n            });\r\n    }\r\n\r\n    const DismissModal = () => {\r\n        setEditItem({...editItem, show: false});\r\n    }\r\n\r\n    const DismissExcelModal = () => {\r\n        setExcelModal({...ExcelModal, show: false});\r\n        setSelectedFile({\r\n            name: \"No file\",\r\n            uploaded: false,\r\n            file: null\r\n        });\r\n    }\r\n\r\n    const Add2BlackList = () => {\r\n        setEditItem({\r\n            title: 'Add new Blacklist IP',\r\n            show: true,\r\n            ip: '',\r\n            desc: '',\r\n            create_time: '',\r\n            editMode: false,\r\n            index: -1\r\n        });\r\n    }\r\n\r\n    const AddNewExcelFunction = () => {\r\n        setExcelModal({\r\n            ...ExcelModal,\r\n            title: \"Create Blacklist IP by Excel\",\r\n            show: true,\r\n            mode: ADD_NEW_MODE\r\n        });\r\n    }\r\n\r\n    const UpdateExcelFunction = () => {\r\n        setExcelModal({\r\n            ...ExcelModal,\r\n            title: \"Update Blacklist IP by Excel\",\r\n            show: true,\r\n            mode: UPDATE_MODE\r\n        });\r\n    }\r\n\r\n    const DeleteExcelFunction = () => {\r\n        setExcelModal({\r\n            ...ExcelModal,\r\n            title: \"Delete Blacklist IP by Excel\",\r\n            show: true,\r\n            mode: DELETE_MODE\r\n        });\r\n    }\r\n\r\n    const UploadExcel = () => {\r\n        if (selectedFile.file === null) {\r\n            toast.error(\"Choose a file!\");\r\n            return;\r\n        }\r\n\r\n        dispatch({\r\n            type: LOADING\r\n        });\r\n        let data = new FormData();\r\n        data.append(\r\n            \"blacklist_file\",\r\n            selectedFile.file,\r\n            selectedFile.name\r\n        );\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            body: data,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        let URI;\r\n\r\n        if (ExcelModal.mode === ADD_NEW_MODE) {\r\n            URI = BLACKLIST_ADD_EXCEL;\r\n        }\r\n\r\n        if (ExcelModal.mode === UPDATE_MODE) {\r\n            URI = BLACKLIST_UPDATE_EXCEL;\r\n        }\r\n\r\n        if (ExcelModal.mode === DELETE_MODE) {\r\n            URI = BLACKLIST_DELETE_EXCEL;\r\n        }\r\n\r\n        fetch(URI, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                DismissExcelModal();\r\n                if (result.code === 200) {\r\n                    dispatch({type: LOADED});\r\n                    toast.success(\"Create blacklist successful!\");\r\n                    _FetchAllData(0);\r\n                } else if (result.code === 202) {\r\n                    const link = document.createElement('a');\r\n                    link.href = BASE_URL + result.msg[0].url;\r\n                    link.setAttribute(\"target\", \"_blank\");\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                    document.body.removeChild(link);\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        _msg: \"Duplicate IPs\"\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        _msg: result.msg[0]\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    _msg: e\r\n                });\r\n            });\r\n    }\r\n\r\n    const ChangeFiles = e => {\r\n        setSelectedFile({\r\n            ...selectedFile,\r\n            uploaded: true,\r\n            name: e.target.files[0].name,\r\n            file: e.target.files[0]\r\n        });\r\n    }\r\n\r\n    const CreateNewIP = () => {\r\n        if (!editItem.ip || editItem.ip.length === 0) {\r\n            toast.error(\"IP is required!\");\r\n            return;\r\n        }\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let raw = JSON.stringify({\r\n            \"ip\": editItem.ip,\r\n            \"desc\": editItem.desc,\r\n            \"create_time\": editItem.create_time,\r\n        });\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(BLACKLIST_ADD_IP, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    DismissModal();\r\n                    _FetchAllData(0);\r\n                } else {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        _msg: result.msg[0]\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    _msg: e\r\n                });\r\n            });\r\n    }\r\n\r\n    const SearchByIP = e => {\r\n        if (Search.trim() === \"\" && e.keyCode === 13) {\r\n            _FetchAllData(0);\r\n        } else if (e.keyCode === 13) {\r\n            dispatch({type: LOADING});\r\n            let myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n            let raw = JSON.stringify({\r\n                \"ip\": e.target.value\r\n            });\r\n\r\n            let requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(BLACKLIST_SEARCH_IP, requestOptions)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    if (result.code === 200) {\r\n                        dispatch({type: LOADED})\r\n                        setBlackListData(result.msg.list);\r\n                        setTotalPage(result.msg.total);\r\n                    } else {\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            _msg: result.msg[0]\r\n                        });\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        _msg: e\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    const ExportAllExcel = () => {\r\n        swal({\r\n            title: \"LARGE DATA\",\r\n            text: `We will export all data and it's so large. Continue?`,\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true\r\n        }).then(val => {\r\n            if (val) {\r\n                let requestOptions = {\r\n                    method: 'POST',\r\n                    redirect: 'follow'\r\n                };\r\n\r\n                fetch(BLACKLIST_EXPORT_EXCEL, requestOptions)\r\n                    .then(response => response.json())\r\n                    .then(result => {\r\n                        if (result.code === 200) {\r\n                            const link = document.createElement('a');\r\n                            link.href = BASE_URL + result.msg[0].url;\r\n                            link.setAttribute(\"target\", \"_blank\");\r\n                            document.body.appendChild(link);\r\n                            link.click();\r\n                            document.body.removeChild(link);\r\n                        } else {\r\n                            dispatch({\r\n                                type: ERROR,\r\n                                _msg: result.msg[0]\r\n                            });\r\n                        }\r\n                    })\r\n                    .catch(e => {\r\n                        dispatch({\r\n                            type: ERROR,\r\n                            _msg: e\r\n                        });\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    const ExportImportedIPTodayExcel = () => {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        let raw = JSON.stringify({\r\n            \"createdAt_from\": new Date().setUTCHours(0,0,0,0),\r\n            \"createdAt_to\": new Date().setUTCHours(23,59,59,999)\r\n        });\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(BLACKLIST_IMPORTED_IP_TODAY_EXCEL, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.code === 200) {\r\n                    const link = document.createElement('a');\r\n                    link.href = BASE_URL + result.msg[0].url;\r\n                    link.setAttribute(\"target\", \"_blank\");\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                    document.body.removeChild(link);\r\n                } else {\r\n                    dispatch({\r\n                        type: ERROR,\r\n                        _msg: result.msg[0]\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    _msg: e\r\n                });\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = _title + WEB_BASE_NAME;\r\n        _FetchAllData(offset);\r\n    }, [offset]);\r\n\r\n    if (error) {\r\n        toast.error(_msg);\r\n        dispatch({type: LOADED});\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n\r\n            <Modal\r\n                CloseModal={DismissExcelModal}\r\n                show={ExcelModal.show}\r\n                WrapClass={\"modal_wrap\"}\r\n                title={ExcelModal.title}>\r\n                <ol>\r\n                    {ExcelModal.mode === ADD_NEW_MODE && <li>Download template from <Link to={{pathname: TEMPLATE_URL + \"Create_BlackList_Template.xlsx\"}} target=\"_blank\" rel=\"noopener noreferrer\">here</Link></li>}\r\n                    {ExcelModal.mode === UPDATE_MODE && <li>Download template from <Link to={{pathname: TEMPLATE_URL + \"Update_BlackList_Template.xlsx\"}} target=\"_blank\" rel=\"noopener noreferrer\">here</Link></li>}\r\n                    {ExcelModal.mode === DELETE_MODE && <li>Download template from <Link to={{pathname: TEMPLATE_URL + \"Delete_BlackList_Template.xlsx\"}} target=\"_blank\" rel=\"noopener noreferrer\">here</Link></li>}\r\n                    <li>Fill all data into template</li>\r\n                    <li><label className=\"link_style\" htmlFor=\"upload_file\">Click here</label> to choose a file</li>\r\n                    <input className=\"hide\" onChange={ChangeFiles} id=\"upload_file\" type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\r\n                </ol>\r\n                {selectedFile.file !== null && <span className=\"margin-left-5\">File name: {selectedFile.name}</span>}\r\n                <div className=\"margin-top-15\">\r\n                    {ExcelModal.mode === ADD_NEW_MODE && <button className=\"btn theme_green pull-right\" onClick={UploadExcel}>Create</button>}\r\n                    {ExcelModal.mode === UPDATE_MODE && <button className=\"btn theme_yellow pull-right\" onClick={UploadExcel}>Update</button>}\r\n                    {ExcelModal.mode === DELETE_MODE && <button className=\"btn theme_red pull-right\" onClick={UploadExcel}>Delete</button>}\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal\r\n                CloseModal={DismissModal}\r\n                WrapClass={\"modal_wrap\"}\r\n                show={editItem.show}\r\n                title={editItem.title}>\r\n                <div>\r\n                    <input\r\n                        value={editItem.ip}\r\n                        onChange={e => setEditItem({...editItem, ip: e.target.value})}\r\n                        className=\"form-control\"\r\n                        placeholder={\"IP\"}/>\r\n                </div>\r\n                <div className=\"margin-top-20\">\r\n                    <input\r\n                        value={editItem.desc}\r\n                        onChange={e => setEditItem({...editItem, desc: e.target.value})}\r\n                        className=\"form-control\"\r\n                        placeholder={\"Description\"}/>\r\n                </div>\r\n                <div className=\"margin-top-20\">\r\n                    <DatePicker\r\n                        className=\"form-control\"\r\n                        selected={editItem.create_time}\r\n                        onChange={date => setEditItem({...editItem, create_time: date})}/>\r\n                </div>\r\n                <div className=\"margin-top-20 text-center\">\r\n                    {editItem.editMode && <button className=\"btn theme_green\" onClick={SaveEditIP}>Save</button>}\r\n                    {!editItem.editMode && <button className=\"btn theme_green\" onClick={CreateNewIP}>Create new</button>}\r\n                </div>\r\n            </Modal>\r\n\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                theme=\"colored\"\r\n                draggable={false}\r\n                pauseOnHover/>\r\n\r\n            {loading && (\r\n                <div className=\"center-div\">\r\n                    <span className=\"loader\"/>\r\n                </div>\r\n            )}\r\n\r\n            {!loading && (\r\n                <div className=\"bl_container\">\r\n                    <div className=\"add_bl\">\r\n                        <input className={\"form-control border-radius-100 pull-right margin-left-10\"} style={{\"width\": \"0\"}} value={Search} onChange={e => setSearch(e.target.value)} onKeyDown={SearchByIP} placeholder={\"Search by IP\"}/>\r\n                        <button className=\"btn margin-right-10 theme_gray\" onClick={Add2BlackList}><BsPlusLg/>&nbsp; Add blacklist IP</button>\r\n                        <button className=\"btn margin-right-10 theme_green\" onClick={AddNewExcelFunction}><RiFileExcel2Fill/>&nbsp;Add (Excel)</button>\r\n                        <button className=\"btn margin-right-10 theme_yellow\" onClick={UpdateExcelFunction}><RiFileExcel2Fill/>&nbsp;Update (Excel)</button>\r\n                        <button className=\"btn margin-right-10 theme_red\" onClick={DeleteExcelFunction}><RiFileExcel2Fill/>&nbsp;Delete (Excel)</button>\r\n                        <button className=\"btn margin-right-10 theme_cyan\" onClick={ExportAllExcel}><RiFileExcel2Fill/>&nbsp;Export (Excel)</button>\r\n                        <button className=\"btn margin-right-10 theme_cyan\" onClick={ExportImportedIPTodayExcel}><RiFileExcel2Fill/>&nbsp;Export Imported IP Today (Excel)</button>\r\n                    </div>\r\n                    {BlackListData.length === 0 && (\r\n                        <div className=\"center-div\">\r\n                            <h3>No blacklist IPs founded!</h3>\r\n                        </div>\r\n                    )}\r\n\r\n                    {BlackListData.length !== 0 && (\r\n                        <>\r\n                            <table className=\"nice_theme margin-top-20\">\r\n                                <thead className=\"text-center\">\r\n                                <td>Index</td>\r\n                                <td>Blacklist IPs</td>\r\n                                <td>Validity</td>\r\n                                <td>Create time</td>\r\n                                <td>Create at</td>\r\n                                <td>Last update</td>\r\n                                <td>Edit / Del</td>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    BlackListData.map((item, index) => {\r\n                                        return(\r\n                                            <tr key={item.id}>\r\n                                                <td className=\"text-center\">{offset+index+1}</td>\r\n                                                <td className=\"bold\">{ReplaceCharacters(item.ip)}</td>\r\n                                                {/* <td>{ReplaceCharacters(item.desc) === \"\" ? \"<Không có mô tả>\" : ReplaceCharacters(item.desc)}</td> */}\r\n                                                <td>{ReplaceCharacters(item.desc)}</td>\r\n                                                <td>{ConvertTimeStamptoString(ReplaceCharacters(item.create_time))}</td>\r\n                                                <td>{ConvertTimeStamptoString(ReplaceCharacters(item.createdAt))}</td>\r\n                                                <td>{ConvertTimeStamptoString(ReplaceCharacters(item.updatedAt))}</td>\r\n                                                <td className=\"table_icon text-center\">\r\n                                                <span className=\"margin-right-20\" onClick={() => EditIP(item, index)}>\r\n                                                    <IconContext.Provider value={{size: 20, color: \"#1886b5\"}}>\r\n                                                        <RiEditFill/>\r\n                                                    </IconContext.Provider>\r\n                                                </span>\r\n                                                    <span onClick={() => delIPs(item, index)}>\r\n                                                    <IconContext.Provider value={{size: 20, color: \"#c7003f\"}}>\r\n                                                        <RiDeleteBin2Fill/>\r\n                                                    </IconContext.Provider>\r\n                                                </span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })\r\n                                }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <div style={{display: \"inline-block\"}}>\r\n                                Page {offset/LIMIT + 1} / {Math.ceil(TotalPage/LIMIT)}\r\n                            </div>\r\n\r\n                            <div className=\"pagination padding-top-20 padding-right-10 pull-right\">\r\n                                <span>&lt;&lt;</span>\r\n                                {Array\r\n                                    .from(\r\n                                        {length: Math.ceil(TotalPage/LIMIT)},\r\n                                        (_, i) => {\r\n                                            return (<span onClick={() => setOffSet(i*LIMIT)} key={i}>{i+1}</span>)\r\n                                        })}\r\n                                <span>&gt;&gt;</span>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlackList;","export default __webpack_public_path__ + \"static/media/1.69af5be9.jpg\";","export const OPEN_SIDEBAR = \"OPEN\";\r\nexport const CLOSE_SIDEBAR = \"CLOSE\";\r\nexport const SELECT_ITEM = \"SELECT_ITEM\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./SideBar.sass\";\r\nimport ava from './1.jpg';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {FaLessThan, FaGreaterThan} from \"react-icons/fa\";\r\nimport { OPEN_SIDEBAR, SELECT_ITEM, CLOSE_SIDEBAR } from \"../Redux/ReducersAndActions/SideBar/SideBarActionsDefinition\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\n//Sass doc: https://sass-lang.com/guide\r\n//Redux doc: https://viblo.asia/p/redux-hook-da-suong-lai-con-suong-hon-Az45brxQ5xY\r\n\r\nconst MiniSidebarIconSize = 25;\r\nconst SidebarIconSize = 20;\r\n\r\nfunction SideBar (props) {\r\n    const { ListItems } = props;\r\n    const { is_open, _index } = useSelector(state => state.SideBar);\r\n    const dispatch = useDispatch();\r\n    const getWindowDimensions = () => {\r\n        const { innerWidth: width, innerHeight: height } = window;\r\n        return { width, height };\r\n      }\r\n    const [windowsSize, setWindowSize] = useState(getWindowDimensions());\r\n    useEffect(function() {\r\n        function handleResize()  {\r\n            setWindowSize(getWindowDimensions());\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return function() {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        }\r\n    }, []);\r\n\r\n    const ToogleSideBar = () => {\r\n        if (is_open) {\r\n            dispatch({\r\n                type: CLOSE_SIDEBAR\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: OPEN_SIDEBAR\r\n            })\r\n        }\r\n    }\r\n\r\n    const SelectItem = (index) => {\r\n        dispatch({\r\n            type: SELECT_ITEM,\r\n            index: index\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className={\"sidebar \" + (is_open ? \"open\" : \"closed\")} style={{\"height\": windowsSize.height + 'px'}}>\r\n            {/* Sidebar when open */}\r\n            {is_open && (\r\n                <>\r\n                    <div className=\"sidebar_avatar\">\r\n                        <span onClick={ToogleSideBar} className=\"state_button\">\r\n                            <IconContext.Provider value={{className: \"toogle_button\"}}>\r\n                                <FaLessThan/>\r\n                            </IconContext.Provider>\r\n                        </span>\r\n                        <img src={ava}/>\r\n                        <br/>\r\n                        <span>Hello, Daumoe!</span>\r\n                    </div>\r\n\r\n                    <div className=\"sidebar_items\">\r\n                        <ul>\r\n                            {ListItems.map((item, index) => {\r\n                                return (\r\n                                    <li key={index} onClick={() => SelectItem(index)}>\r\n                                        <Link to={item.path}>\r\n                                            <IconContext.Provider value={{size: SidebarIconSize}}>\r\n                                                {item.icon}\r\n                                            </IconContext.Provider>\r\n                                            &nbsp;&nbsp; <span>{item.name}</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            {/* Sidebar when close  */}\r\n            {!is_open && (\r\n                <>\r\n                    <div className=\"mini_sidebar_items\">\r\n                        <ul>\r\n                            <li onClick={ToogleSideBar}>\r\n                                <IconContext.Provider value={{className: \"toogle_button\"}}>\r\n                                    <FaGreaterThan size={20}/>\r\n                                </IconContext.Provider>\r\n                            </li>\r\n                            {ListItems.map((item, index) => {\r\n                                return (\r\n                                    <li key={index} onClick={() => SelectItem(index)} className={(index == _index ? \"selected_item\" : \"\")}>\r\n                                        <Link to={item.path}>\r\n                                            <IconContext.Provider value={{size: MiniSidebarIconSize, className: (index == _index ? \"selected_item\" : \"\")}}>\r\n                                                {item.icon}\r\n                                            </IconContext.Provider>\r\n                                        </Link>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;","import React, {useEffect} from \"react\";\r\nimport './NotFound.sass';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SELECT_ITEM} from \"../Redux/ReducersAndActions/SideBar/SideBarActionsDefinition\";\r\nimport {WEB_BASE_NAME} from \"../API_URL\";\r\n\r\nconst NotFound = (props) => {\r\n    const {_title}      = props;\r\n    const dispatch      = useDispatch();\r\n    const ChangeState   = () => {\r\n        dispatch({\r\n            type: SELECT_ITEM,\r\n            index: 0\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = _title + WEB_BASE_NAME;\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"notfound_wrap\">\r\n            <div className=\"center-div text-center\">\r\n                <span className=\"notfound_title\">404</span>\r\n                <span className=\"notfound_desc\">\r\n                    Hmm, seem you're lost! Let's go&nbsp;\r\n                    <Link to=\"/blacklist\" onClick={ChangeState}>\r\n                        back\r\n                    </Link>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport {Route, BrowserRouter as Router, Switch, Redirect} from \"react-router-dom\";\r\nimport BlackList from \"./components/BlackList\";\r\nimport SideBar from \"./components/SideBar\";\r\nimport {IoIosNotifications} from \"react-icons/io\";\r\nimport { BsFillHddNetworkFill } from \"react-icons/bs\";\r\nimport {FaBan} from \"react-icons/fa\";\r\nimport NotFound from \"./components/NotFound\";\r\n\r\nconst ListItems = [{\r\n  icon: <FaBan/>,\r\n  path: \"/blacklist\",\r\n  name: \"Blacklist IP\"\r\n}, {\r\n  icon: <BsFillHddNetworkFill/>,\r\n  path: \"/vlan\",\r\n  name: \"VLAN IP (Pending)\"\r\n}, {\r\n  icon: <IoIosNotifications/>,\r\n  path: \"/notification\",\r\n  name: \"Notifications (Pending)\"\r\n}];\r\n\r\nconst App = () => {\r\n\r\n  return(\r\n      <Router>\r\n        <Redirect to=\"/blacklist\"/>\r\n        <SideBar ListItems={ListItems}/>\r\n        <Switch>\r\n\r\n            <Route exact path=\"/blacklist\">\r\n                <BlackList _title=\"Blacklist\"/>\r\n            </Route>\r\n\r\n            <Route>\r\n                <NotFound _title=\"404\"/>\r\n            </Route>\r\n\r\n        </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { CLOSE_SIDEBAR, OPEN_SIDEBAR, SELECT_ITEM } from './SideBarActionsDefinition';\r\n\r\n\r\nconst CLOSED = false;\r\nconst OPEN = true;\r\nconst initState = {\r\n    is_open: CLOSED,\r\n    _index: 0 //Index of current selected item\r\n};\r\n\r\nconst SideBarReducer = (state = initState, payload) => {\r\n    let { type } =  payload;\r\n    switch(type) {\r\n        case OPEN_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                is_open: OPEN\r\n            }\r\n\r\n        case CLOSE_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                is_open: CLOSED\r\n            }\r\n\r\n        case SELECT_ITEM:\r\n            return {\r\n                ...state,\r\n                is_open: CLOSED,\r\n                _index: payload.index\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default SideBarReducer;","import {ERROR, LOADING, LOADED, SUCCESS} from \"./StatusActionsDefinition\";\r\n\r\nconst initState = {\r\n    loading: true,\r\n    error: false,\r\n    _msg: \"\"\r\n}\r\n\r\nconst StatusReducer = (state = initState, payload) => {\r\n    const { type } = payload;\r\n    switch (type) {\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n                _msg: \"loading\"\r\n            }\r\n\r\n        case ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false,\r\n                _msg: payload._msg\r\n            }\r\n\r\n        case LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                _msg: \"\"\r\n            }\r\n\r\n        case SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                _msg: \"\"\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default StatusReducer;","import { combineReducers } from \"redux\";\r\nimport SideBarReducer from './ReducersAndActions/SideBar/SideBarReducer';\r\nimport StatusReducer from './ReducersAndActions/Status/StatusReducer';\r\n\r\nconst RootReducer = combineReducers({\r\n    SideBar: SideBarReducer,\r\n    Status: StatusReducer\r\n});\r\n\r\nexport default RootReducer;","import { createStore } from \"redux\";\r\nimport RootReducer from './RootReducer';\r\n\r\nconst Store = createStore(RootReducer);\r\n\r\nexport default Store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport Store from './components/Redux/StoreRedux';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>,\r\n\r\n  <Provider store={Store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}